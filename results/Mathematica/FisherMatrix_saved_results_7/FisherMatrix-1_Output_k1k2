AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + P*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + P*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (256*a^2*(29115618648529052734375 + 29748251699981689453125000*a*h + 
       14447661163174255371093750000*a^2*h^2 + 
       4406546740971868144531250000000*a^3*h^3 + 
       943328575949355682171875000000000*a^4*h^4 + 
       150628316533735257085500000000000000*a^5*h^5 + 
       18650470996421994150300990000000000000*a^6*h^6 + 
       1839460694765796827922922848000000000000*a^7*h^7 + 
       147357673592034384573324059520000000000000*a^8*h^8 + 
       9728581382146978163318283225907200000000000*a^9*h^9 + 
       535220186689410846127616487693090816000000000*a^10*h^10 + 
       24748954403847191495259775075979624448000000000*a^11*h^11 + 
       968426701342095751223098605624458351738880000000*a^12*h^12 + 
       32241030366273476231287512210581637637865472000000*a^13*h^13 + 
       917202241640592108090108237142830530872265932800000*a^14*h^14 + 
       22374011106154135746568458806619896382171906048000000*a^15*h^15 + 
       469293531876287966014130513271690729773042554109952000*a^16*h^16 + 
       8482084842596362639848144858870445706683431214959820800*a^17*h^17 + 
       132318394657449973021283985464546474292289908586231889920*a^18*h^18 + 
       1783556752078978567927346916322624171444194093801469378560*a^19*h^19 + 
       20786997619617080035992507056821244817826676644390360842240*a^20*
        h^20 + 209521608160899706959631373232556866400781348840748338905088*
        a^21*h^21 + 
       1825983826085491957077438142294597495965737900319660576866304*a^22*
        h^22 + 13749704039245632758578237994149324650686036301012294306889728*
        a^23*h^23 + 
       89351277520632354456699965289712298262694463812574233919225856*a^24*
        h^24 + 
       500226124340877679483965792792937571580779940196713257836216320*a^25*
        h^25 + 
       2406973702993399367005288002110594275004208211152482539923308544*a^26*
        h^26 + 
       9924029218071894054928078508068380460478316296042108843603263488*a^27*
        h^27 + 
       34923711728129059312609219417663519103521930855573157464749637632*a^28*
        h^28 + 
       104380821794239210780506006237534519702592192541542498848328384512*
        a^29*h^29 + 
       263312384327013755854102637450651179904272783808130034140765487104*
        a^30*h^30 + 
       556177026384749111037081530202441738931496976909843240376942460928*
        a^31*h^31 + 
       973622431902066200597084656101794138812665485437014313867105271808*
        a^32*h^32 + 
       1393663313890261397254737131591771656133597738434445104724274315264*
        a^33*h^33 + 
       1601897645567713857537687598280881874822711213314419207288750342144*
        a^34*h^34 + 
       1441375189626762535056414431707284008511904990130939989826960621568*
        a^35*h^35 + 
       977679615771535196641200745623200661858144176078688148415750078464*
        a^36*h^36 + 
       470300548493464782783440862622118079265137300092181810371799023616*
        a^37*h^37 + 
       143160019340297735940785282609922898856435621025801315547908931584*
        a^38*h^38 + 
       20764059354545145925436608929870467379990270137697524317398499328*a^39*
        h^39))/(441*(1 + 2*a*h)^3*(1 + 4*a*h)^3*(5 + 4*a*h)^3*(1 + 8*a*h)^3*
      (5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*(1 + 32*a*h)^3*
      (5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*(1 + 128*a*h)^3*
      (5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 4064/(21*a)
 
DetH2 = (32768*a^2*(1370965 + 32*a*h*(25499949 + 
         4*a*h*(1751270691 + 16*a*h*(18022980083 + 32*a*h*(61176100533 + 16*a*
                h*(288293488563 + 8*a*h*(1940255712191 + 128*a*h*
                    (591585023457 + 16*a*h*(1053735863949 + 256*a*h*
                        (85665558793 + 32*a*h*(40389218853 + 16256*a*h*
                          (26764791 + 16*a*h*(12503203 + 512*a*h*(120261 + 
                          64*a*h*(5523 + 7424*a*h))))))))))))))))/
     (147*(1 + 4*a*h)^3*(1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*
      (1 + 64*a*h)^3*(1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (127*2^(5 - m)*Log[2]^2)/441 + (127*2^(6 - m)*Log[2]^2)/441 + 
     (127*2^(7 - m)*Log[2]^2)/441 + (127*2^(8 - m)*Log[2]^2)/441 + 
     (127*2^(9 - m)*Log[2]^2)/441 + (127*2^(10 - m)*Log[2]^2)/441 + 
     (127*2^(11 - m)*Log[2]^2)/441 + (127*2^(5 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(6 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(7 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(8 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(9 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(10 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(11 - m)*5^(1 - m)*Log[2]^2)/441 - 
     (127*2^(6 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(7 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(8 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(9 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(10 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(11 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(12 - m)*5^(1 - m)*Log[2]*Log[5])/441 + 
     (258064*5^(1 - m)*Log[5]^2)/441 + (127*2^(5 - m)*5^(1 - m)*Log[5]^2)/
      441 + (127*2^(6 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(7 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(8 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(9 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(10 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(11 - m)*5^(1 - m)*Log[5]^2)/441
 
DetR = 508/(7*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7}, {4, 8, 16, 32, 64, 128, 256}, 
      False}, 1, 7]
 
EFisherAGPoiss = {{(4*((1 + 2*a*h)^(-3) + 3/(1 + 4*a*h)^3 + 
         125/(5 + 4*a*h)^3 + 6/(1 + 8*a*h)^3 + 250/(5 + 8*a*h)^3 + 
         12/(1 + 16*a*h)^3 + 500/(5 + 16*a*h)^3 + 24/(1 + 32*a*h)^3 + 
         1000/(5 + 32*a*h)^3 + 48/(1 + 64*a*h)^3 + 2000/(5 + 64*a*h)^3 + 
         96/(1 + 128*a*h)^3 + 4000/(5 + 128*a*h)^3 + 64/(1 + 256*a*h)^3 + 
         8000/(5 + 256*a*h)^3))/(21*a), 
      (16*a*(-3/(1 + 4*a*h)^3 - 4/(2 + 4*a*h)^3 - 25/(5 + 4*a*h)^3 - 
         12/(1 + 8*a*h)^3 - 100/(5 + 8*a*h)^3 - 48/(1 + 16*a*h)^3 - 
         400/(5 + 16*a*h)^3 - 192/(1 + 32*a*h)^3 - 1600/(5 + 32*a*h)^3 - 
         768/(1 + 64*a*h)^3 - 6400/(5 + 64*a*h)^3 - 3072/(1 + 128*a*h)^3 - 
         25600/(5 + 128*a*h)^3 - 4096/(1 + 256*a*h)^3 - 
         102400/(5 + 256*a*h)^3))/21}, 
     {(16*a*(-3/(1 + 4*a*h)^3 - 4/(2 + 4*a*h)^3 - 25/(5 + 4*a*h)^3 - 
         12/(1 + 8*a*h)^3 - 100/(5 + 8*a*h)^3 - 48/(1 + 16*a*h)^3 - 
         400/(5 + 16*a*h)^3 - 192/(1 + 32*a*h)^3 - 1600/(5 + 32*a*h)^3 - 
         768/(1 + 64*a*h)^3 - 6400/(5 + 64*a*h)^3 - 3072/(1 + 128*a*h)^3 - 
         25600/(5 + 128*a*h)^3 - 4096/(1 + 256*a*h)^3 - 
         102400/(5 + 256*a*h)^3))/21, 
      (64*a^3*(3/(1 + 4*a*h)^3 + 2/(2 + 4*a*h)^3 + 5/(5 + 4*a*h)^3 + 
         24/(1 + 8*a*h)^3 + 40/(5 + 8*a*h)^3 + 192/(1 + 16*a*h)^3 + 
         320/(5 + 16*a*h)^3 + 1536/(1 + 32*a*h)^3 + 2560/(5 + 32*a*h)^3 + 
         12288/(1 + 64*a*h)^3 + 20480/(5 + 64*a*h)^3 + 
         98304/(1 + 128*a*h)^3 + 163840/(5 + 128*a*h)^3 + 
         262144/(1 + 256*a*h)^3 + 1310720/(5 + 256*a*h)^3))/21}}
 
EFisherH1Poiss = {{4064/(21*a)}}
 
EFisherH2Poiss = {{32/(21*a*(1 + 4*a*h)^3) + 64/(21*a*(1 + 8*a*h)^3) + 
       128/(21*a*(1 + 16*a*h)^3) + 256/(21*a*(1 + 32*a*h)^3) + 
       512/(21*a*(1 + 64*a*h)^3) + 1024/(21*a*(1 + 128*a*h)^3) + 
       2048/(21*a*(1 + 256*a*h)^3), (-128*a)/(21*(1 + 4*a*h)^3) - 
       (512*a)/(21*(1 + 8*a*h)^3) - (2048*a)/(21*(1 + 16*a*h)^3) - 
       (8192*a)/(21*(1 + 32*a*h)^3) - (32768*a)/(21*(1 + 64*a*h)^3) - 
       (131072*a)/(21*(1 + 128*a*h)^3) - (524288*a)/(21*(1 + 256*a*h)^3)}, 
     {(-128*a)/(21*(1 + 4*a*h)^3) - (512*a)/(21*(1 + 8*a*h)^3) - 
       (2048*a)/(21*(1 + 16*a*h)^3) - (8192*a)/(21*(1 + 32*a*h)^3) - 
       (32768*a)/(21*(1 + 64*a*h)^3) - (131072*a)/(21*(1 + 128*a*h)^3) - 
       (524288*a)/(21*(1 + 256*a*h)^3), (512*a^3)/(21*(1 + 4*a*h)^3) + 
       (4096*a^3)/(21*(1 + 8*a*h)^3) + (32768*a^3)/(21*(1 + 16*a*h)^3) + 
       (262144*a^3)/(21*(1 + 32*a*h)^3) + (2097152*a^3)/(21*(1 + 64*a*h)^3) + 
       (16777216*a^3)/(21*(1 + 128*a*h)^3) + (134217728*a^3)/
        (21*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{508/(21*a) + 2^(3 - m)/(21*a) + 2^(4 - m)/(21*a) + 
       2^(5 - m)/(21*a) + 2^(6 - m)/(21*a) + 2^(7 - m)/(21*a) + 
       2^(8 - m)/(21*a) + 2^(9 - m)/(21*a) + (508*5^(1 - m))/(21*a), 
      -(2^(3 - m)*Log[2])/21 - (2^(4 - m)*Log[2])/21 - 
       (2^(5 - m)*Log[2])/21 - (2^(6 - m)*Log[2])/21 - 
       (2^(7 - m)*Log[2])/21 - (2^(8 - m)*Log[2])/21 - 
       (2^(9 - m)*Log[2])/21 - (508*5^(1 - m)*Log[5])/21}, 
     {-(2^(3 - m)*Log[2])/21 - (2^(4 - m)*Log[2])/21 - 
       (2^(5 - m)*Log[2])/21 - (2^(6 - m)*Log[2])/21 - 
       (2^(7 - m)*Log[2])/21 - (2^(8 - m)*Log[2])/21 - 
       (2^(9 - m)*Log[2])/21 - (508*5^(1 - m)*Log[5])/21, 
      (2^(3 - m)*a*Log[2]^2)/21 + (2^(4 - m)*a*Log[2]^2)/21 + 
       (2^(5 - m)*a*Log[2]^2)/21 + (2^(6 - m)*a*Log[2]^2)/21 + 
       (2^(7 - m)*a*Log[2]^2)/21 + (2^(8 - m)*a*Log[2]^2)/21 + 
       (2^(9 - m)*a*Log[2]^2)/21 + (508*5^(1 - m)*a*Log[5]^2)/21}}
 
EFisherRPoiss = {{508/(7*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7}
 
\[CapitalNu]vals = {4, 8, 16, 32, 64, 128, 256}
