AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + P*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + P*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (1024*a^2*(1587643280029296875 + 1603624281738281250000*a*h + 
       769028456785546875000000*a^2*h^2 + 231240891275131250000000000*a^3*
        h^3 + 48709110772620822000000000000*a^4*h^4 + 
       7636114380930204134400000000000*a^5*h^5 + 
       925988663083364325800960000000000*a^6*h^6 + 
       89202315286412130331754496000000000*a^7*h^7 + 
       6958524309749941916624958259200000000*a^8*h^8 + 
       445846939393008222172063874416640000000*a^9*h^9 + 
       23714275436123120962392844356550656000000*a^10*h^10 + 
       1055628106220063362760813917407019008000000*a^11*h^11 + 
       39571928367126042183334237429576478228480000*a^12*h^12 + 
       1255170887595341138596453230322379762171904000*a^13*h^13 + 
       33807621914961108043476647357346844596240384000*a^14*h^14 + 
       775275240912175682350470134075424703254710190080*a^15*h^15 + 
       15163220980516126043102279576005368079681553694720*a^16*h^16 + 
       253192102426389113829115000761876526790748112158720*a^17*h^17 + 
       3610273681949337876170854716346157073304718179041280*a^18*h^18 + 
       43938806880326763327563830277865174600357636175036416*a^19*h^19 + 
       455852961723953382974281834315058461274792462691336192*a^20*h^20 + 
       4023018591192032840735297546805596585764629728550977536*a^21*h^21 + 
       30108857032793295849390225497371740473950516580381097984*a^22*h^22 + 
       190292561500067978817550920524350174322607862371229630464*a^23*h^23 + 
       1009947638546162199436038474045715095107722981806991998976*a^24*h^24 + 
       4468038964387246996680786930172440309646467247674463617024*a^25*h^25 + 
       16317148055959948746931688568272939226232786534954545709056*a^26*
        h^26 + 48555175859635631743356709046627531607385795746302204575744*
        a^27*h^27 + 
       115662648594186952552194166147070686692682408280530297552896*a^28*
        h^28 + 215100701734961096845112318898381536341921241625696191643648*
        a^29*h^29 + 
       300851753583589323493835536588185884161147530360597401042944*a^30*
        h^30 + 297822367840664535847536465203190337486958658008364663963648*
        a^31*h^31 + 
       186251820117315299744223705854967258706048653044110382333952*a^32*
        h^32 + 55420785615988788201456672303106993739092176929867243192320*
        a^33*h^33))/(9*(1 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*
      (1 + 16*a*h)^3*(5 + 16*a*h)^3*(1 + 32*a*h)^3*(5 + 32*a*h)^3*
      (1 + 64*a*h)^3*(5 + 64*a*h)^3*(1 + 128*a*h)^3*(5 + 128*a*h)^3*
      (1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 224/a
 
DetH2 = (131072*a^2*(27559 + 64*a*h*(248031 + 
         8*a*h*(8194929 + 32*a*h*(40205025 + 64*a*h*(64194207 + 32*a*h*
                (139825593 + 16*a*h*(424706429 + 256*a*h*(56530719 + 
                     32*a*h*(41957835 + 512*a*h*(1326591 + 64*a*h*(218085 + 
                          256*a*h*(5301 + 15008*a*h)))))))))))))/
     (9*(1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (7*2^(5 - m)*Log[2]^2)/9 + (7*2^(6 - m)*Log[2]^2)/9 + 
     (7*2^(7 - m)*Log[2]^2)/9 + (7*2^(8 - m)*Log[2]^2)/9 + 
     (7*2^(9 - m)*Log[2]^2)/9 + (7*2^(10 - m)*Log[2]^2)/9 + 
     (7*2^(5 - m)*5^(1 - m)*Log[2]^2)/9 + (7*2^(6 - m)*5^(1 - m)*Log[2]^2)/
      9 + (7*2^(7 - m)*5^(1 - m)*Log[2]^2)/9 + 
     (7*2^(8 - m)*5^(1 - m)*Log[2]^2)/9 + (7*2^(9 - m)*5^(1 - m)*Log[2]^2)/
      9 + (7*2^(10 - m)*5^(1 - m)*Log[2]^2)/9 - 
     (7*2^(6 - m)*5^(1 - m)*Log[2]*Log[5])/9 - 
     (7*2^(7 - m)*5^(1 - m)*Log[2]*Log[5])/9 - 
     (7*2^(8 - m)*5^(1 - m)*Log[2]*Log[5])/9 - 
     (7*2^(9 - m)*5^(1 - m)*Log[2]*Log[5])/9 - 
     (7*2^(10 - m)*5^(1 - m)*Log[2]*Log[5])/9 - 
     (7*2^(11 - m)*5^(1 - m)*Log[2]*Log[5])/9 + 784*5^(1 - m)*Log[5]^2 + 
     (7*2^(5 - m)*5^(1 - m)*Log[5]^2)/9 + (7*2^(6 - m)*5^(1 - m)*Log[5]^2)/
      9 + (7*2^(7 - m)*5^(1 - m)*Log[5]^2)/9 + 
     (7*2^(8 - m)*5^(1 - m)*Log[5]^2)/9 + (7*2^(9 - m)*5^(1 - m)*Log[5]^2)/
      9 + (7*2^(10 - m)*5^(1 - m)*Log[5]^2)/9
 
DetR = 84/a
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/6, 1/6, 1/6, 1/6, 1/6, 1/6}, {8, 16, 32, 64, 128, 256}, False}, 1, 6]
 
EFisherAGPoiss = {{(4*((1 + 4*a*h)^(-3) + 3/(1 + 8*a*h)^3 + 
         125/(5 + 8*a*h)^3 + 6/(1 + 16*a*h)^3 + 250/(5 + 16*a*h)^3 + 
         12/(1 + 32*a*h)^3 + 500/(5 + 32*a*h)^3 + 24/(1 + 64*a*h)^3 + 
         1000/(5 + 64*a*h)^3 + 48/(1 + 128*a*h)^3 + 2000/(5 + 128*a*h)^3 + 
         32/(1 + 256*a*h)^3 + 4000/(5 + 256*a*h)^3))/(9*a), 
      (32*a*(-3/(1 + 8*a*h)^3 - 4/(2 + 8*a*h)^3 - 25/(5 + 8*a*h)^3 - 
         12/(1 + 16*a*h)^3 - 100/(5 + 16*a*h)^3 - 48/(1 + 32*a*h)^3 - 
         400/(5 + 32*a*h)^3 - 192/(1 + 64*a*h)^3 - 1600/(5 + 64*a*h)^3 - 
         768/(1 + 128*a*h)^3 - 6400/(5 + 128*a*h)^3 - 1024/(1 + 256*a*h)^3 - 
         25600/(5 + 256*a*h)^3))/9}, 
     {(32*a*(-3/(1 + 8*a*h)^3 - 4/(2 + 8*a*h)^3 - 25/(5 + 8*a*h)^3 - 
         12/(1 + 16*a*h)^3 - 100/(5 + 16*a*h)^3 - 48/(1 + 32*a*h)^3 - 
         400/(5 + 32*a*h)^3 - 192/(1 + 64*a*h)^3 - 1600/(5 + 64*a*h)^3 - 
         768/(1 + 128*a*h)^3 - 6400/(5 + 128*a*h)^3 - 1024/(1 + 256*a*h)^3 - 
         25600/(5 + 256*a*h)^3))/9, 
      (256*a^3*(3/(1 + 8*a*h)^3 + 2/(2 + 8*a*h)^3 + 5/(5 + 8*a*h)^3 + 
         24/(1 + 16*a*h)^3 + 40/(5 + 16*a*h)^3 + 192/(1 + 32*a*h)^3 + 
         320/(5 + 32*a*h)^3 + 1536/(1 + 64*a*h)^3 + 2560/(5 + 64*a*h)^3 + 
         12288/(1 + 128*a*h)^3 + 20480/(5 + 128*a*h)^3 + 
         32768/(1 + 256*a*h)^3 + 163840/(5 + 256*a*h)^3))/9}}
 
EFisherH1Poiss = {{224/a}}
 
EFisherH2Poiss = {{32/(9*a*(1 + 8*a*h)^3) + 64/(9*a*(1 + 16*a*h)^3) + 
       128/(9*a*(1 + 32*a*h)^3) + 256/(9*a*(1 + 64*a*h)^3) + 
       512/(9*a*(1 + 128*a*h)^3) + 1024/(9*a*(1 + 256*a*h)^3), 
      (-256*a)/(9*(1 + 8*a*h)^3) - (1024*a)/(9*(1 + 16*a*h)^3) - 
       (4096*a)/(9*(1 + 32*a*h)^3) - (16384*a)/(9*(1 + 64*a*h)^3) - 
       (65536*a)/(9*(1 + 128*a*h)^3) - (262144*a)/(9*(1 + 256*a*h)^3)}, 
     {(-256*a)/(9*(1 + 8*a*h)^3) - (1024*a)/(9*(1 + 16*a*h)^3) - 
       (4096*a)/(9*(1 + 32*a*h)^3) - (16384*a)/(9*(1 + 64*a*h)^3) - 
       (65536*a)/(9*(1 + 128*a*h)^3) - (262144*a)/(9*(1 + 256*a*h)^3), 
      (2048*a^3)/(9*(1 + 8*a*h)^3) + (16384*a^3)/(9*(1 + 16*a*h)^3) + 
       (131072*a^3)/(9*(1 + 32*a*h)^3) + (1048576*a^3)/(9*(1 + 64*a*h)^3) + 
       (8388608*a^3)/(9*(1 + 128*a*h)^3) + (67108864*a^3)/
        (9*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{28/a + 2^(3 - m)/(9*a) + 2^(4 - m)/(9*a) + 
       2^(5 - m)/(9*a) + 2^(6 - m)/(9*a) + 2^(7 - m)/(9*a) + 
       2^(8 - m)/(9*a) + (28*5^(1 - m))/a, -(2^(3 - m)*Log[2])/9 - 
       (2^(4 - m)*Log[2])/9 - (2^(5 - m)*Log[2])/9 - (2^(6 - m)*Log[2])/9 - 
       (2^(7 - m)*Log[2])/9 - (2^(8 - m)*Log[2])/9 - 28*5^(1 - m)*Log[5]}, 
     {-(2^(3 - m)*Log[2])/9 - (2^(4 - m)*Log[2])/9 - (2^(5 - m)*Log[2])/9 - 
       (2^(6 - m)*Log[2])/9 - (2^(7 - m)*Log[2])/9 - (2^(8 - m)*Log[2])/9 - 
       28*5^(1 - m)*Log[5], (2^(3 - m)*a*Log[2]^2)/9 + 
       (2^(4 - m)*a*Log[2]^2)/9 + (2^(5 - m)*a*Log[2]^2)/9 + 
       (2^(6 - m)*a*Log[2]^2)/9 + (2^(7 - m)*a*Log[2]^2)/9 + 
       (2^(8 - m)*a*Log[2]^2)/9 + 28*5^(1 - m)*a*Log[5]^2}}
 
EFisherRPoiss = {{84/a}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/6, 1/6, 1/6, 1/6, 1/6, 1/6}
 
\[CapitalNu]vals = {8, 16, 32, 64, 128, 256}
