AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + P*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + P*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (9*a^2*(1350991286337375640869140625 + 
       1448766820171773433685302734375*a*h + 
       736681572168511211872100830078125*a^2*h^2 + 
       234865591361571995937824249267578125*a^3*h^3 + 
       52505592437211720057280540466308593750*a^4*h^4 + 
       8750241655825115631752184677124023437500*a^5*h^5 + 
       1130400078522670284277775447998046875000000*a^6*h^6 + 
       116316105367083636935588451690124511718750000*a^7*h^7 + 
       9724700163049702127176190735667260742187500000*a^8*h^8 + 
       670624383868716444714160072670889931640625000000*a^9*h^9 + 
       38594672579099589823088069081561566804687500000000*a^10*h^10 + 
       1870852648314875022974356371546112866768750000000000*a^11*h^11 + 
       76955397334704403801087338410084217341165000000000000*a^12*h^12 + 
       2702283431003204296223696707630857019776624000000000000*a^13*h^13 + 
       81400856703538761391534346040521440530437164800000000000*a^14*h^14 + 
       2111796183854310206936151806815391116664484280320000000000*a^15*h^15 + 
       47336805996015844746442460032158520099107698982912000000000*a^16*
        h^16 + 919198988438437570152871159417062496723835855123251200000000*
        a^17*h^17 + 
       15495723651631433804406865009929017371238163359087984640000000*a^18*
        h^18 + 
       227174143236105740487451993297962730878940391797451390976000000*a^19*
        h^19 + 
       2900384441649840223824281715927815951300167512626055610368000000*a^20*
        h^20 + 
       32283328575553602785837301986529718127943495937427672924160000000*a^21*
        h^21 + 
       313537006397118784897611401844590544716855095185297978289029120000*
        a^22*h^22 + 
       2658539320883814687061870598437962208868977350859653516764381184000*
        a^23*h^23 + 
       19687777220898511629920067885242603046562849377432157731964950937600*
        a^24*h^24 + 
       127352222291431582636304681483305307285368771341137273863853309952000*
        a^25*h^25 + 
       719498616197106366687684188966236563879387637055666022935467288166400*
        a^26*h^26 + 354912568906509794230709720306795071297777619342413504225\
2127862784000*a^27*h^27 + 
       1527659456662701588284399036676990910955131714669544617369108935081984\
0*a^28*h^28 + 
       5732902589806575705957643191407380803624278987420274491147634748686336\
0*a^29*h^29 + 
       1873556593668625671707175580927442924304908441357417237308094798417100\
80*a^30*h^30 + 
       5324300283200475289646717729485228636873077833792922827624834136602050\
56*a^31*h^31 + 
       1313288169733458786069764541710582673575877570068379972035259350497886\
208*a^32*h^32 + 
       2805257532895882228256866891177559487718292970810247812896167310747762\
688*a^33*h^33 + 
       5174862196574290911635206858072102781597321322641728191957681005087686\
656*a^34*h^34 + 
       8216403808924255643708384761275515093888458134236952633539643514627817\
472*a^35*h^35 + 
       1118302926184040004853383348156736085078505207874030984176384628548540\
8256*a^36*h^36 + 
       1298362162053171684708121295018406809634377428464525883662067979202959\
7696*a^37*h^37 + 
       1278173997665001706977469981777976195562962738572712142480195520543535\
9232*a^38*h^38 + 
       1059134819413975487553890117298886011860891047408286431392739829671054\
5408*a^39*h^39 + 
       7320218544396835987338021762290717550844177213133479528025527684782096\
384*a^40*h^40 + 
       4171873124928871071752446348012028018296898080011429695649714664693039\
104*a^41*h^41 + 
       1931878857160609038622038127751565095751755013175154914822373549484802\
048*a^42*h^42 + 
       7128983207234941735796738771318489543926740733377959468815804924365373\
44*a^43*h^43 + 
       2041210635694613357633788846052285811400574945423965415487747062570680\
32*a^44*h^44 + 
       4362762473395944409191026720186835293271494594989606510371293998822195\
2*a^45*h^45 + 
       6547811438548878010895538426224794435785600509214524728972602123485184*
        a^46*h^46 + 
       616732384614318960872799391324153711820272699050125210255664422584320*
        a^47*h^47 + 
       27544241793813051666028707954001093039924386978153197772663664148480*
        a^48*h^48))/(64*(1 + a*h)^3*(5 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*
      (1 + 4*a*h)^3*(5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*
      (5 + 16*a*h)^3*(1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*
      (5 + 64*a*h)^3*(1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*
      (5 + 256*a*h)^3)
 
DetH1 = 2295/(8*a)
 
DetH2 = (81*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(8*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = 255*2^(-7 - m)*Log[2]^2 + 255*2^(-6 - m)*Log[2]^2 + 
     255*2^(-5 - m)*Log[2]^2 + 255*2^(-4 - m)*Log[2]^2 + 
     255*2^(-3 - m)*Log[2]^2 + 255*2^(-2 - m)*Log[2]^2 + 
     255*2^(-1 - m)*Log[2]^2 + (255*Log[2]^2)/2^m + 
     2^(-6 - 2*m)*5^(1 - m)*Log[2]^2 + 2^(1 - 2*m)*5^(1 - m)*Log[2]^2 + 
     2^(3 - 2*m)*5^(1 - m)*Log[2]^2 + 2^(5 - 2*m)*5^(1 - m)*Log[2]^2 + 
     2^(6 - 2*m)*5^(1 - m)*Log[2]^2 + 2^(7 - 2*m)*5^(1 - m)*Log[2]^2 + 
     2^(8 - 2*m)*5^(1 - m)*Log[2]^2 + 2^(9 - 2*m)*5^(1 - m)*Log[2]^2 + 
     2^(1 - 2*m)*5^(2 - m)*Log[2]^2 + 51*2^(-7 - m)*5^(2 - m)*Log[2]^2 + 
     51*2^(-6 - m)*5^(2 - m)*Log[2]^2 + 51*2^(-5 - m)*5^(2 - m)*Log[2]^2 + 
     51*2^(-4 - m)*5^(2 - m)*Log[2]^2 + 51*2^(-3 - m)*5^(2 - m)*Log[2]^2 + 
     51*2^(-2 - m)*5^(2 - m)*Log[2]^2 + 51*2^(-1 - m)*5^(2 - m)*Log[2]^2 + 
     (51*5^(2 - m)*Log[2]^2)/2^m + 20^(1 - m)*Log[2]^2 - 
     51*2^(-6 - m)*5^(2 - m)*Log[2]*Log[5] - 51*2^(-5 - m)*5^(2 - m)*Log[2]*
      Log[5] - 51*2^(-4 - m)*5^(2 - m)*Log[2]*Log[5] - 
     51*2^(-3 - m)*5^(2 - m)*Log[2]*Log[5] - 51*2^(-2 - m)*5^(2 - m)*Log[2]*
      Log[5] - 51*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5] - 
     51*2^(1 - m)*5^(2 - m)*Log[2]*Log[5] - (51*5^(2 - m)*Log[2]*Log[5])/
      2^m + 51*2^(-7 - m)*5^(3 - 2*m)*Log[5]^2 + 51*2^(-6 - m)*5^(3 - 2*m)*
      Log[5]^2 + 51*2^(-5 - m)*5^(3 - 2*m)*Log[5]^2 + 
     51*2^(-4 - m)*5^(3 - 2*m)*Log[5]^2 + 51*2^(-3 - m)*5^(3 - 2*m)*
      Log[5]^2 + 51*2^(-2 - m)*5^(3 - 2*m)*Log[5]^2 + 
     51*2^(-1 - m)*5^(3 - 2*m)*Log[5]^2 + (51*5^(3 - 2*m)*Log[5]^2)/2^m + 
     51*2^(-7 - m)*5^(2 - m)*Log[5]^2 + 51*2^(-6 - m)*5^(2 - m)*Log[5]^2 + 
     51*2^(-5 - m)*5^(2 - m)*Log[5]^2 + 51*2^(-4 - m)*5^(2 - m)*Log[5]^2 + 
     51*2^(-3 - m)*5^(2 - m)*Log[5]^2 + 51*2^(-2 - m)*5^(2 - m)*Log[5]^2 + 
     51*2^(-1 - m)*5^(2 - m)*Log[5]^2 + (51*5^(2 - m)*Log[5]^2)/2^m + 
     (2601*5^(3 - m)*Log[5]^2)/256 - 2^(-5 - 2*m)*5^(1 - m)*Log[2]*Log[10] - 
     2^(1 - 2*m)*5^(1 - m)*Log[2]*Log[10] - 2^(5 - 2*m)*5^(1 - m)*Log[2]*
      Log[10] - 2^(6 - 2*m)*5^(1 - m)*Log[2]*Log[10] - 
     3*2^(7 - 2*m)*5^(1 - m)*Log[2]*Log[10] - 2^(9 - 2*m)*5^(1 - m)*Log[2]*
      Log[10] - 2^(10 - 2*m)*5^(1 - m)*Log[2]*Log[10] - 
     2^(1 - 2*m)*5^(2 - m)*Log[2]*Log[10] - 20^(1 - m)*Log[2]*Log[10] - 
     51*2^(-6 - m)*5^(3 - 2*m)*Log[5]*Log[10] - 51*2^(-5 - m)*5^(3 - 2*m)*
      Log[5]*Log[10] - 51*2^(-4 - m)*5^(3 - 2*m)*Log[5]*Log[10] - 
     51*2^(-3 - m)*5^(3 - 2*m)*Log[5]*Log[10] - 51*2^(-2 - m)*5^(3 - 2*m)*
      Log[5]*Log[10] - 51*2^(-1 - m)*5^(3 - 2*m)*Log[5]*Log[10] - 
     51*2^(1 - m)*5^(3 - 2*m)*Log[5]*Log[10] - 
     (51*5^(3 - 2*m)*Log[5]*Log[10])/2^m + 51*2^(-7 - m)*5^(3 - 2*m)*
      Log[10]^2 + 51*2^(-6 - m)*5^(3 - 2*m)*Log[10]^2 + 
     51*2^(-5 - m)*5^(3 - 2*m)*Log[10]^2 + 51*2^(-4 - m)*5^(3 - 2*m)*
      Log[10]^2 + 51*2^(-3 - m)*5^(3 - 2*m)*Log[10]^2 + 
     51*2^(-2 - m)*5^(3 - 2*m)*Log[10]^2 + 51*2^(-1 - m)*5^(3 - 2*m)*
      Log[10]^2 + (51*5^(3 - 2*m)*Log[10]^2)/2^m + 2^(-6 - 2*m)*5^(1 - m)*
      Log[10]^2 + 2^(1 - 2*m)*5^(1 - m)*Log[10]^2 + 
     2^(3 - 2*m)*5^(1 - m)*Log[10]^2 + 3*2^(5 - 2*m)*5^(1 - m)*Log[10]^2 + 
     2^(7 - 2*m)*5^(1 - m)*Log[10]^2 + 2^(8 - 2*m)*5^(1 - m)*Log[10]^2 + 
     2^(9 - 2*m)*5^(1 - m)*Log[10]^2 + 2^(1 - 2*m)*5^(2 - m)*Log[10]^2 + 
     51*2^(-7 - m)*5^(2 - m)*Log[10]^2 + 51*2^(-6 - m)*5^(2 - m)*Log[10]^2 + 
     51*2^(-5 - m)*5^(2 - m)*Log[10]^2 + 51*2^(-4 - m)*5^(2 - m)*Log[10]^2 + 
     51*2^(-3 - m)*5^(2 - m)*Log[10]^2 + 51*2^(-2 - m)*5^(2 - m)*Log[10]^2 + 
     51*2^(-1 - m)*5^(2 - m)*Log[10]^2 + (51*5^(2 - m)*Log[10]^2)/2^m - 
     10^(2 - 2*m)*Log[10]^2 + 20^(1 - m)*Log[10]^2 + 
     2^(2 - 2*m)*25^(1 - m)*Log[10]^2
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/4, 1/4, 1/4, 1/4}, {1, 2, 5, 10}, 
      False}, 1, 4]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 125/(5 + a*h)^3 + 3/(1 + 2*a*h)^3 + 
        375/(5 + 2*a*h)^3 + 6/(1 + 4*a*h)^3 + 750/(5 + 4*a*h)^3 + 
        12/(1 + 8*a*h)^3 + 1500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 
        3000/(5 + 16*a*h)^3 + 48/(1 + 32*a*h)^3 + 6000/(5 + 32*a*h)^3 + 
        96/(1 + 64*a*h)^3 + 12000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 
        24000/(5 + 128*a*h)^3 + 128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/
       (16*a), (a*(-25/(2*(5 + a*h)^3) - 3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 
         75/(5 + 2*a*h)^3 - 12/(1 + 4*a*h)^3 - 300/(5 + 4*a*h)^3 - 
         48/(1 + 8*a*h)^3 - 1200/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 
         4800/(5 + 16*a*h)^3 - 768/(1 + 32*a*h)^3 - 19200/(5 + 32*a*h)^3 - 
         3072/(1 + 64*a*h)^3 - 76800/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         307200/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/8}, 
     {(a*(-25/(2*(5 + a*h)^3) - 3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 
         75/(5 + 2*a*h)^3 - 12/(1 + 4*a*h)^3 - 300/(5 + 4*a*h)^3 - 
         48/(1 + 8*a*h)^3 - 1200/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 
         4800/(5 + 16*a*h)^3 - 768/(1 + 32*a*h)^3 - 19200/(5 + 32*a*h)^3 - 
         3072/(1 + 64*a*h)^3 - 76800/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         307200/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/8, 
      (a^3*(5/(4*(5 + a*h)^3) + 3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 
         15/(5 + 2*a*h)^3 + 24/(1 + 4*a*h)^3 + 120/(5 + 4*a*h)^3 + 
         192/(1 + 8*a*h)^3 + 960/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 
         7680/(5 + 16*a*h)^3 + 12288/(1 + 32*a*h)^3 + 61440/(5 + 32*a*h)^3 + 
         98304/(1 + 64*a*h)^3 + 491520/(5 + 64*a*h)^3 + 
         786432/(1 + 128*a*h)^3 + 3932160/(5 + 128*a*h)^3 + 
         2097152/(1 + 256*a*h)^3 + 10485760/(5 + 256*a*h)^3))/4}}
 
EFisherH1Poiss = {{2295/(8*a)}}
 
EFisherH2Poiss = {{9/(8*a*(1 + 2*a*h)^3) + 9/(4*a*(1 + 4*a*h)^3) + 
       9/(2*a*(1 + 8*a*h)^3) + 9/(a*(1 + 16*a*h)^3) + 18/(a*(1 + 32*a*h)^3) + 
       36/(a*(1 + 64*a*h)^3) + 72/(a*(1 + 128*a*h)^3) + 
       144/(a*(1 + 256*a*h)^3), (-9*a)/(4*(1 + 2*a*h)^3) - 
       (9*a)/(1 + 4*a*h)^3 - (36*a)/(1 + 8*a*h)^3 - (144*a)/(1 + 16*a*h)^3 - 
       (576*a)/(1 + 32*a*h)^3 - (2304*a)/(1 + 64*a*h)^3 - 
       (9216*a)/(1 + 128*a*h)^3 - (36864*a)/(1 + 256*a*h)^3}, 
     {(-9*a)/(4*(1 + 2*a*h)^3) - (9*a)/(1 + 4*a*h)^3 - (36*a)/(1 + 8*a*h)^3 - 
       (144*a)/(1 + 16*a*h)^3 - (576*a)/(1 + 32*a*h)^3 - 
       (2304*a)/(1 + 64*a*h)^3 - (9216*a)/(1 + 128*a*h)^3 - 
       (36864*a)/(1 + 256*a*h)^3, (9*a^3)/(2*(1 + 2*a*h)^3) + 
       (36*a^3)/(1 + 4*a*h)^3 + (288*a^3)/(1 + 8*a*h)^3 + 
       (2304*a^3)/(1 + 16*a*h)^3 + (18432*a^3)/(1 + 32*a*h)^3 + 
       (147456*a^3)/(1 + 64*a*h)^3 + (1179648*a^3)/(1 + 128*a*h)^3 + 
       (9437184*a^3)/(1 + 256*a*h)^3}}
 
EFisherHVPoiss = {{255/(16*a) + 2^(-3 - m)/a + 2^(-2 - m)/a + 2^(-1 - m)/a + 
       2^(1 - m)/a + 2^(2 - m)/a + 2^(3 - m)/a + 2^(4 - m)/a + 1/(2^m*a) + 
       (2^(-3 - m)*5^(1 - m))/a + (2^(-2 - m)*5^(1 - m))/a + 
       (2^(-1 - m)*5^(1 - m))/a + (2^(2 - m)*5^(1 - m))/a + 
       (2^(3 - m)*5^(1 - m))/a + (2^(4 - m)*5^(1 - m))/a + 
       5^(1 - m)/(2^m*a) + (51*5^(2 - m))/(16*a) + 10^(1 - m)/a, 
      -(2^(-3 - m)*Log[2]) - 2^(-2 - m)*Log[2] - 2^(-1 - m)*Log[2] - 
       2^(1 - m)*Log[2] - 2^(2 - m)*Log[2] - 2^(3 - m)*Log[2] - 
       2^(4 - m)*Log[2] - Log[2]/2^m - (51*5^(2 - m)*Log[5])/16 - 
       2^(-3 - m)*5^(1 - m)*Log[10] - 2^(-2 - m)*5^(1 - m)*Log[10] - 
       2^(-1 - m)*5^(1 - m)*Log[10] - 2^(2 - m)*5^(1 - m)*Log[10] - 
       2^(3 - m)*5^(1 - m)*Log[10] - 2^(4 - m)*5^(1 - m)*Log[10] - 
       (5^(1 - m)*Log[10])/2^m - 10^(1 - m)*Log[10]}, 
     {-(2^(-3 - m)*Log[2]) - 2^(-2 - m)*Log[2] - 2^(-1 - m)*Log[2] - 
       2^(1 - m)*Log[2] - 2^(2 - m)*Log[2] - 2^(3 - m)*Log[2] - 
       2^(4 - m)*Log[2] - Log[2]/2^m - (51*5^(2 - m)*Log[5])/16 - 
       2^(-3 - m)*5^(1 - m)*Log[10] - 2^(-2 - m)*5^(1 - m)*Log[10] - 
       2^(-1 - m)*5^(1 - m)*Log[10] - 2^(2 - m)*5^(1 - m)*Log[10] - 
       2^(3 - m)*5^(1 - m)*Log[10] - 2^(4 - m)*5^(1 - m)*Log[10] - 
       (5^(1 - m)*Log[10])/2^m - 10^(1 - m)*Log[10], 
      2^(-3 - m)*a*Log[2]^2 + 2^(-2 - m)*a*Log[2]^2 + 2^(-1 - m)*a*Log[2]^2 + 
       2^(1 - m)*a*Log[2]^2 + 2^(2 - m)*a*Log[2]^2 + 2^(3 - m)*a*Log[2]^2 + 
       2^(4 - m)*a*Log[2]^2 + (a*Log[2]^2)/2^m + (51*5^(2 - m)*a*Log[5]^2)/
        16 + 2^(-3 - m)*5^(1 - m)*a*Log[10]^2 + 2^(-2 - m)*5^(1 - m)*a*
        Log[10]^2 + 2^(-1 - m)*5^(1 - m)*a*Log[10]^2 + 
       2^(2 - m)*5^(1 - m)*a*Log[10]^2 + 2^(3 - m)*5^(1 - m)*a*Log[10]^2 + 
       2^(4 - m)*5^(1 - m)*a*Log[10]^2 + (5^(1 - m)*a*Log[10]^2)/2^m + 
       10^(1 - m)*a*Log[10]^2}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/4, 1/4, 1/4, 1/4}
 
Pvals = {1, 2, 5, 10}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
