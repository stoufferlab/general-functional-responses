(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1589303,      29291]
NotebookOptionsPosition[   1578717,      29103]
NotebookOutlinePosition[   1579142,      29121]
CellTagsIndexPosition[   1579099,      29118]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Structural complexity of functional response models - Part 2", "Chapter",
 CellChangeTimes->{{3.793470151992955*^9, 3.793470165281383*^9}, {
  3.795279308124699*^9, 
  3.795279343394848*^9}},ExpressionUUID->"fb6747e9-b9e4-4dfd-8899-\
9efa99ce5c0b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.794697513688983*^9, 3.7946975234793053`*^9}, {
  3.794825243340016*^9, 3.794825245250126*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"606bdec2-375d-4ba7-a2cf-b1f3c71f904a"],

Cell[BoxData["\<\"/Users/marknovak/Git/general-functional-responses/code/\
Mathematica\"\>"], "Output",
 CellChangeTimes->{
  3.800541412779263*^9, 3.800547563753755*^9, 3.800561862996154*^9, 
   3.800562268087695*^9, 3.800562346935568*^9, 3.800841438990527*^9, 
   3.801223478328487*^9, {3.801231992745576*^9, 3.801232017594626*^9}, 
   3.801247668469656*^9, 3.802523949895072*^9, 3.80252402660456*^9, 
   3.806488260583445*^9, 3.814904778989357*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"fdc952a7-0a0f-47b5-8c12-361ebba9d403"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preliminaries", "Subsection",
 CellChangeTimes->{{3.795517477275958*^9, 
  3.795517493963881*^9}},ExpressionUUID->"0f75d902-741d-4b88-b7dd-\
ca02c0e4468e"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox["SC", "2"], "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["Log", "e"]}], 
     RowBox[{"f", "(", 
      RowBox[{"x", "|", 
       SubscriptBox[
        OverscriptBox["\[CapitalTheta]", "^"], "x"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["k", "2"], 
     RowBox[{
      SubscriptBox["Log", "e"], "(", 
      FractionBox["n", 
       RowBox[{"2", " ", "\[Pi]"}]], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["Log", "e"], 
     RowBox[{
      SubscriptBox["\[Integral]", "\[CapitalTheta]"], 
      RowBox[{
       SqrtBox[
        RowBox[{"det", " ", 
         RowBox[{"I", "(", "\[CapitalTheta]", ")"}]}]], 
       RowBox[{"\[DifferentialD]", "\[CapitalTheta]"}]}]}]}], " ", "+", " ", 
    RowBox[{"o", "(", "1", ")"}]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"The", " ", "first", " ", "term", " ", "is", " ", "the", " ", 
    RowBox[{"likelihood", ".", " ", "\[IndentingNewLine]", "The"}], " ", 
    "second", " ", "term", " ", "is", " ", "dependent", " ", "on", " ", 
    "parameter", " ", "count", " ", 
    RowBox[{"(", "k", ")"}], " ", "and", " ", "sample", " ", "size", " ", 
    RowBox[{
     RowBox[{"(", "n", ")"}], ".", "\[IndentingNewLine]", "The"}], " ", 
    "third", " ", "term", " ", "containing", " ", 
    RowBox[{"I", "(", "\[CapitalTheta]", ")"}]}], ",", " ", 
   RowBox[{
   "the", " ", "Expected", " ", "Fisher", " ", "Information", " ", "Matrix"}],
    ",", " ", 
   RowBox[{"reflects", " ", "the", " ", 
    RowBox[{"model", "'"}], "s", " ", 
    RowBox[{"flexibility", ".", "\[IndentingNewLine]", Cell["\<\
The flexibility term by itself can only be compared between models having the \
same number of parameters.\
\>", "Text",
      CellChangeTimes->{{3.7954615948646517`*^9, 3.795461647845873*^9}, 
        3.795461870121118*^9},ExpressionUUID->
      "232b0969-16b7-4d51-8422-d0db36d816ea"]}]}]}], 
  TraditionalForm]}], "Text",
 CellChangeTimes->{{3.795479453624755*^9, 3.795479490884452*^9}, {
  3.795479729591103*^9, 3.795479732182536*^9}, {3.795480116530002*^9, 
  3.7954802796335697`*^9}, {3.795538708839282*^9, 
  3.795538807515576*^9}},ExpressionUUID->"47d1633f-3cce-444c-99d9-\
05571c35f7c9"],

Cell[CellGroupData[{

Cell["Load results of \"FisherMatrix-1_Compute.nb\[CloseCurlyDoubleQuote]", \
"Subsubsection",
 CellChangeTimes->{{3.795280424312913*^9, 3.7952804429261312`*^9}, {
  3.795461223334886*^9, 
  3.795461233069744*^9}},ExpressionUUID->"780b82a4-48e4-42ea-ab49-\
37a4dd930e78"],

Cell["Pick the output that has been successfully computed :", "Text",
 CellChangeTimes->{{3.795461444022608*^9, 
  3.7954614643647213`*^9}},ExpressionUUID->"491877fd-5c59-4f78-bcce-\
67522b9f00bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Get", "[", "\"\<results/FisherMatrix-1_Output_FIM_k1k2k3\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.794877209092181*^9, 3.794877220766945*^9}, {
   3.794877349466483*^9, 3.794877369721036*^9}, {3.794877586681506*^9, 
   3.794877665685512*^9}, {3.79487770508568*^9, 3.794877706211906*^9}, {
   3.7948778406164207`*^9, 3.794877843319871*^9}, {3.795279291870092*^9, 
   3.795279296853353*^9}, {3.795279423096734*^9, 3.795279423296029*^9}, 
   3.795280128644382*^9, {3.795280232232456*^9, 3.795280243934379*^9}, {
   3.795461238950856*^9, 3.795461250013308*^9}, {3.795461434399584*^9, 
   3.795461442134097*^9}, {3.795479272746117*^9, 3.795479275617272*^9}, {
   3.8012206327626953`*^9, 3.801220633296914*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"55f3927f-47c7-4f0a-8e65-d56b5f233bc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Get", "[", "\"\<results/FisherMatrix-1_Output_aNInt_k1k2k3\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7955386807202787`*^9, {3.8012206448427887`*^9, 3.801220648800501*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"41eaeab3-3a93-491e-9408-897f62be8e68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Get", "[", "\"\<results/FisherMatrix-1_Output_NInt_k1k2k3\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801220654505662*^9, 3.80122065779221*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"351b0e1c-39f8-416f-a499-75003db5ae19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second Term dependence on k and n", "Subsection",
 CellChangeTimes->{{3.79553874165469*^9, 3.7955387483097277`*^9}, {
  3.795538787211925*^9, 
  3.795538818385933*^9}},ExpressionUUID->"4476d5a2-d8ec-4f05-8aae-\
a839d6fc376b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "AltLabel1", "=", 
   "\"\<\!\(TraditionalForm\`\*FractionBox[\(k\), \(2\)] \
Log[\*FractionBox[\(n\), \(2\\\ \[Pi]\)]]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         FormBox[
          RowBox[{
           FractionBox["k", "2"], 
           RowBox[{"Log", "[", 
            FractionBox["n", 
             RowBox[{"2", " ", "\[Pi]"}]], "]"}]}],
          TraditionalForm], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "60"}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<k=1\>\"", ",", "\"\<k=2\>\"", ",", "\"\<k=3\>\""}], 
          "}"}], ",", "Above"}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "60"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3.5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", "\"\<Sample size (n)\>\"", "]"}], ",", 
      RowBox[{"Style", "[", "\"\<Parameter complexity\>\"", "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "12"}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/FisherMatrix-2_Output_ParameterComplexity.pdf\>\"", ",", 
    "p1"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.795479499352764*^9, 3.795479565911522*^9}, {
   3.795479640588686*^9, 3.795479736031001*^9}, 3.795480144448567*^9, {
   3.795481378570217*^9, 3.7954814370312366`*^9}, {3.7954814689588633`*^9, 
   3.795481516043228*^9}, {3.79548155169906*^9, 3.7954815564591217`*^9}, {
   3.79548165444751*^9, 3.795481674349378*^9}, {3.7967602063331633`*^9, 
   3.796760211875461*^9}, {3.7967602451231823`*^9, 3.796760399451775*^9}, {
   3.796760461747941*^9, 3.7967604663531733`*^9}, {3.796760513466807*^9, 
   3.7967605559260893`*^9}, {3.800578601294194*^9, 3.800578660113759*^9}, {
   3.8005786960185013`*^9, 3.800578697960251*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"49e74542-5ba8-4524-8990-a171d9ffdcd7"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwtzH1Q0wUYB/ApiAmIlJ4gyJuEQxwvApmI8Dw4XtzihxqIF8IGJDQZvseL
ShwpQoKaEmDFS+YZCYp4JKJMVN4iFDoYCgzXGFM2Nxjbb8rLkLHWXc/d9773
+eP7OCUe/jxpMYVCCTbkv9ZPFuUdcV6DlP+vKPv0SbfDazApyNrRNjUTopmM
mCylLf6Yuzfx0kINGG2IFaYzHTHDOS9NW/4E9MURl1b0rkN2+ZVg2/4uSLFP
c5EwXDBomrUiSdQLcrZ5ge1PVEx40xpn5/YcLpxjvfW1cUPd3Jwla/8ghHCd
aA1HaOjyrQ9jpfMwpKZYhx7meaBd9g7ZfIUQhK5J9cblXnjivZ1xsu0InM9M
37CkYxOqTHyH8ZoYIraNXZsy8UFqGid3T9ModFpMmhvRffFdRY3nAE8CzIA6
UduBT3DBShexpfIViEd66r+u3ow/j6hTv8x7DTmi65ND/Z/i0gcflvEjx8B7
t4DmbuWHTg8X8uKpUijj/76vMmorNpQkN0xPSMHijoemNcsfHR/9XbWyQgbF
i1YWDjZvw/VDCbdeRL6Bj+vqCn+RB+CpMet8zswb4HKlWbkrAK/Mb11z87Ic
JETAfRoVkdXZ1lHvrYBVxa/G1DxEPmfT0Yw2Bewsvr/KPS4IL573CeiOGQdp
2TAv430QlkzN77JXjMPpvqHVa7/fjl13ah1TuRNAbVlyfIsnHWtpnQc83k5A
n8jizO12OrarHFnag0oYNEoy89kbjPB8+JFYogSpRF7sOR2MXjKF1JI1CXMq
Jv9sQQiWdjl4tPRMglXjsGXUxlDMawVeFl0FfrdCjbJaQlFYr5s+dlsFjTf0
B+ujwvAEOfNij6kaAtkyQfy7MGxjRd9hoRqe0m9qOed2YONQS0/hUTWwJRU2
cjcGStd1R577TQ27vvvnj4wuBjbX0coiB9UQGqulxMcx0TcwqfmuMQkhCvrO
JzomZheFart9SWBUpew++cNnOD3py74bT0L1AdGz7evDMaAupF1QQMJHspyw
Mx3hmFOR+LqikYScIn26XQyB+dT4qDwxCVvd31MaYgl8FK138R8lYapzuiCc
TaAfpVqmMjhFp6w8tZ9AjTHV/4tXJERxhH8KDhn2OWudN0pJcA18sLr0DIGN
bvHaZ+Mk9MqP3bOoJTDYgsdfNENCQe4hrKojUGJiefOuwSEOKU8D6gmUuv11
/KtZEpqiEkSpjQQ+Hk4d6NaScP3xTpNnLQRu0vaLS+dJyCyhRecPGP4JMsxd
F2vA28tVbC8gkDcbPCEwWPnUOeXeSwJl+VcfFhppIJFimz0mJpBfu9xTZayB
cO6yKvo4ga7zpvsalmrAxGSJ10slgTGnSx8nf6CBlquUpmNqAlcPdqyyXqaB
zQMzPb9OEZh80ebySVMNqI+83es3SyAbQ+5vNNNAjZlqtHeOwFq2fa/Q4P1V
Ci5HRyCz6MbQBXMNOARJp/R6AnO+kfYFLtfAvwjYFdE=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2726#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwtzH881HccB/Dv9/xoSbLxKBEp04kLYS2Jz0uHcvNNjfSY6g7D/CrSpB/m
YRJFtTJpm7TWo1mS9LCkXJgw82sPtHAyXcrdCCdyHHdut8dj78fj9Xg9nn+8
3mvC4j+NYFEU5aXJf60ez81MsFoJ6v/LTU0/YRu/EhGeJpZmcWdIEM83OGXM
DN9l7A27uFBFtNbv7z/Ks0SyVWaS4moHUeftvLisYy0EV694mT0VkRiLJOtB
X2t4yvnLIgbEZFign232PRuh/zw5YG77mpw/y59yMbWFam7OkB8uJd6xazgV
CRxYf+3sa2Q1QuJiTHzihfYwT90hVRaOkn6biHLtq444Pm+uHWkmI+eOHV2v
07gRMl2XPtyYIDu3Dt2Y1nUGOykqY0/VW9JkMK6vxXXBu8LbDt3CScJzLxuo
j/4ICytUOzdfmyLiF+3lXxZvwg8vJuI+z3xH0gZujvc+/RiLHr1f0BUwTZx2
izgbVrhizeOFzBC2nBR0/bLvWuAWVFyOrJCPyonBPfvJJylusKz5s8iocIbk
0UY5PdVbsa439M6zgFnyYVlZzo/D7jg5ZJIVNTNLYmMlKRnLCK4ot6wsuaQg
g4z7Qw4b4DfVN5Y7zRHjvFdDE0KgK2rj4eT6OeKf99B4wwFPXDjn7N4WPE8k
BX3C5HlPXJ5W7rIYmSfpnb3LV32zDc33Si3jYpWEXadzZLMDF6Wcpmj7KSXp
HDA4dbeBiwaZJV9xUEV6tCKWOO/1Avmrr0Y8qCKSweE8B7kXHKUjEkP+ApmT
8bpOZ3sjv3m1fV37AllR2WcYaOeDzCdEmMJVE9c7PlopdT7oL1fJE++qSeUt
9cHywO04/nbm2R49Ch4CqSjk3XbU84Pu8UGhhVuiiDq7A5W9de05hykIBgtN
h219IVnbFnD2Zwq7zvz9a3KzL6rLOAUBPRR89iuokAM8uHhEVN/XpuE9wvX/
TcVDaq6Pos2Fhm9RzO4T334C+biL4H4IjeLogdZt6/zgXubdIMqm8YE0bfup
Rj+kFYa9LqykkZarPmoezCCLHRKYKaaxZcM8VbGfQU2Q2trtJY3pJnm2n4CB
K1UslWkcoxq7djKcwaQ22+2zVzQCo/p/Fx3S7NNWWdlJaNh4PFqef4pBpW2I
ovUNjY7hxAcGpQy8DIRd9AyN7IxDKCpjMKhrWHJfY+/VMS3u5Qwktn8c+WKW
RlVg6EBcJYPavrjuNgWNm7X+uq11DDYqnorzlTSOXeYEZXVr/omS9W1YLDg5
2ogtRAyEs16jIo3HWqxiHjxnIM26/jhHi4Uwyix1SMygq3Spg0ybBb/YxUXc
NwxslHr7KhaxoKur4/h8jEFwen5t5Hss1F2nqhInGCzvaTQ2WczCpu6Z9p+m
GUReML10Qo+FiYSpva6zDATwfmi3hIXbS2QvO+YYlAosOvo1Di8aiY1SMeDl
3uo9r8/Cak/JtFrNIO0rSafHUhb+BZHi+RM=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2726#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwtjH841HcAx49z53y/OnV5QsRatWQup19Lcd+3X6e7+fi1W62mxBPpVKJ1
9URmiMIwnRTV+uHRapmNRH4865J64mmoJReZrrl25de6qNTt1p5nr+d5Pa//
XnNjEiNizVksVsB7/6tptDh71zwHsP6nOC1jv1uiA6w9BV/Yhhcza2XSDakj
jkg+p5YOi28w7EWR/UrZB1iyXCpSPu9lTKqQIpuuDxFUl7RbvukJo3Des0Ar
XYCYJH5pKdEz+ijrXMfjC1EcWWHtzowy3x7eZFg22w1i7+Z8Sd7fTGDCXPe6
Xe7oP61ThpQZmO0Ke0li02Ic3aSsOqCcYPpdY2ssTohQnjorM1/+isnfp1zE
afNEHBUSFG14zYR4D52d4C5FY/UJSXrpFHOLP2rN9l+G0eGvg9QO7xiZT/VA
67blMJ5LUcp3GJnBP+7UfHVhBbaGbptXcvsfJn2gYrT33ifILSn7q8loYpaE
a9yFdl5wmMbEHjrJQvnd81+ekq/CmnFr3lVPM/B/XvzieupqHOM7tvxWZwaV
2cy8By3ecIqR+g6KzTG/ujrve70PnC5FxBZcNUdCgi41y4ZBks9wBIRsaIlP
g/tCIPt+hC23kg1b1ZOh8SbgFH9IdVxggVBVg61woy8UF3RChywL6MofNu19
6wtRQ0vz0TELZHT3znIq9ENpQIb9d2EcLFRzdq/08EdG9OedMVc46B7gZ/50
wx/3ao9xUwRcPGDH0kvXBcDDZX6hq4ILnVav8pgMwBahqCr/JhdTY7K7B3MD
IXpQqg2bbQm7+ofT5R9L8Gd3Yv7JZEt4XZKwU9USLJCIvXquW6L+B9OOGnkQ
VjwzXEu34UEc9VSz+WUQ5hd8wyvYzEO7/49v4g+vgaDt7OXwizxEaU/O1rtJ
sX5ZjZG85iHs0KPavbelOGHZGm/0s4Ik8g1r80YZQh7ZOdnkWCHwmX/oNaMM
LX36PUs7rSCtVITvP/IpkuI6C/gzKFzYNtDh91Ew+rPjKyVhFARP04My24KB
4SM9249QSC82KedsIJCtLkq73UVhlfAtqy6SYI65qaG3m8LErcnc4CiCtekH
+p7epaAwjpxK2UKQkNPYy7lPQR7ff1Ozk6D92sXL0FBwFV+ddTSTQIDpk788
ptClT77CryKIK7FvznhBITdrJyqrCT6jjrEKDRQCXRTtPjUE63FJWP6SQqM8
emB7PYHzmnO+tZMUKn4N5Xao3/8nfMK1UxT2lbivzekh0LXVCrzZNJaIXAed
NQT2e7ZqJRY0RtrnKa70ETzsGC8L59CIYTmmDQ0SNGWpbsZZ0ghOsKr0f07g
vb+IV0TT4HI5or4RgpzWaJcyaxrq06zG5HGCM9ddXSqm0VjR8+rOmQmC4/fP
a+ptaIzvMqzzek1QMLhVpZ5O4yI99rhriiCrULiyYwaNLZXPEuKNBIl97278
LqDh4qubMJkI0KxZNTCTxr+RUtoc
            "]]}, 
          Annotation[#, "Charting`Private`Tag$2726#3"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 60}, {0, 3.5}}, 
       PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"k=1\"", "\"k=2\"", "\"k=3\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   StyleBox["\"Sample size (n)\"", StripOnInput -> False],StyleBox[
   "\"Parameter complexity\"", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], 
       BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline, ImageSize -> Medium], 
        BaseStyle -> {FontFamily -> "Arial", 12}, DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", "12"}], 
           "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.796156656350209*^9, 3.79624151145543*^9, 3.796695739743166*^9, 
   3.7967600367758093`*^9, {3.796760311104321*^9, 3.796760320778715*^9}, {
   3.796760360825445*^9, 3.7967603998021803`*^9}, {3.79676044791989*^9, 
   3.796760473491261*^9}, 3.7967605199970293`*^9, 3.796760558661207*^9, {
   3.796918666968783*^9, 3.796918688177581*^9}, {3.796921564633891*^9, 
   3.796921587428376*^9}, 3.796928348715877*^9, 3.796930711635086*^9, 
   3.796937253149901*^9, 3.7969453183513393`*^9, 3.800485711671857*^9, 
   3.800541235905415*^9, 3.800541413198597*^9, 3.800547564636736*^9, 
   3.800561863418202*^9, 3.800562268483655*^9, 3.800562347322238*^9, {
   3.80057861635538*^9, 3.800578661407549*^9}, 3.80057869929883*^9, 
   3.8008598050288897`*^9, 3.801223486672626*^9, 3.801247697615756*^9, 
   3.802523984201024*^9, 3.802524026884963*^9, 3.806488267628631*^9, 
   3.814904784160407*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"23e6cc47-ce62-49b9-b42c-c6a9b4e5a6c8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Third term - Flexibility - Non-truncated \[Lambda]", "Subsection",
 CellChangeTimes->{{3.795538839755321*^9, 3.795538855896353*^9}, {
   3.800485730704425*^9, 3.8004857375037127`*^9}, {3.8004858040615587`*^9, 
   3.8004858079330378`*^9}, 3.8004858752587423`*^9, {3.800486017309175*^9, 
   3.800486051934822*^9}},ExpressionUUID->"0defc5b9-fa26-4482-80de-\
e4a769226bef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NInts", "=", 
  RowBox[{"{", 
   RowBox[{
   "NIntH1", ",", "NIntR", ",", "NIntHV", ",", "NIntH2", ",", "NIntAG", ",", 
    "NIntBD", ",", "NIntCM", ",", "NIntAA"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<H1\>\"", ",", "\"\<LR\>\"", ",", "\"\<HV\>\"", ",", "\"\<H2\>\"", 
     ",", "\"\<AG\>\"", ",", "\"\<BD\>\"", ",", "\"\<CM\>\"", ",", 
     "\"\<AA\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gNInts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NInts", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NInts", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NInts", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8"}], "}"}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rNInts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"NInts", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "/", 
      RowBox[{"NInts", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NInts", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], "/", 
      RowBox[{"NInts", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NInts", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"6", ",", "7", ",", "8"}], "}"}], "]"}], "]"}], "/", 
      RowBox[{"NInts", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<results/FisherMatrix-2_Output_logNIntegrals.txt\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\[CapitalNu]vals", ",", "Pvals", ",", "Labels", ",", "NInts", ",", 
        "rNInts"}], "}"}]}], "]"}], ";"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.794697927784565*^9, 3.7946979280239363`*^9}, {
   3.7947838641501017`*^9, 3.794783866045899*^9}, {3.7947913446798353`*^9, 
   3.794791354796941*^9}, {3.794823901184327*^9, 3.794823909293963*^9}, {
   3.7949305816519938`*^9, 3.794930596532655*^9}, 3.795281836312695*^9, {
   3.795461881710446*^9, 3.795461890925466*^9}, {3.795461987013691*^9, 
   3.795462048592525*^9}, {3.7954628486847687`*^9, 3.79546296067188*^9}, {
   3.795482215560031*^9, 3.7954822163443813`*^9}, 3.795517550796514*^9, {
   3.7955178952190037`*^9, 3.795517895578741*^9}, {3.796749956733571*^9, 
   3.7967499588752337`*^9}, {3.8004858575246277`*^9, 
   3.8004858793786573`*^9}, {3.800486068620686*^9, 3.800486069179463*^9}, 
   3.8064882542451143`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"5b546779-f39a-413d-822b-f5dc541708d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.896287682862374`", ",", "5.40587305635651`", ",", "10.149764725947414`", 
   ",", "9.38419788894782`", ",", "8.695912517450143`", ",", 
   "11.848560594682294`", ",", "12.19092104352195`", ",", 
   "13.000165517157763`"}], "}"}]], "Output",
 CellChangeTimes->{3.800486072647087*^9, 3.8005412383299026`*^9, 
  3.800541413552429*^9, 3.8005475657668867`*^9, 3.800561863833158*^9, 
  3.800562268830035*^9, 3.8005623476304893`*^9, 3.800841454124193*^9, 
  3.800992755834671*^9, 3.800993782205872*^9, 3.801223492293289*^9, 
  3.80124769937463*^9, 3.802523987194964*^9, 3.802524027192502*^9, 
  3.8064882711829853`*^9, 3.814904795128097*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"1fe32ae6-3057-4841-8444-7b449977a2a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "AltLabel2", "=", 
   "\"\<LN\!\(\*SubscriptBox[\(\[Integral]\), \
\(\[CapitalTheta]\)]\)\!\(\*SqrtBox[\(det\\\ \\\ I \((\[Theta])\)\)]\)\
\[DifferentialD]\[Theta]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lNInts", "=", 
   RowBox[{"TakeList", "[", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Labeled", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Labels", "[", 
           RowBox[{"[", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}], "&"}], 
       ",", 
       RowBox[{"Flatten", "@", "gNInts"}]}], "]"}], ",", 
     RowBox[{"Length", "/@", "gNInts"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"bc1", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"BarChart", "[", 
     RowBox[{"lNInts", ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0.9", "]"}], ",", 
         RowBox[{"GrayLevel", "[", "0.6", "]"}], ",", 
         RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", "\"\<Model\>\"", "]"}], ",", 
      RowBox[{"Style", "[", "\"\<Flexibility\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", " ", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "20"}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/FisherMatrix-2_Output_Complexity_absolute_NonTrunc.eps\>\"", 
    ",", "bc1"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.794594837528905*^9, 3.794594955945361*^9}, {
   3.794595060527577*^9, 3.794595189481346*^9}, {3.7945952311200047`*^9, 
   3.794595327772311*^9}, {3.794595413514797*^9, 3.7945954341198397`*^9}, {
   3.7945990104127493`*^9, 3.7945990151905937`*^9}, {3.7946169134768877`*^9, 
   3.794617085078146*^9}, {3.794683986851824*^9, 3.794684013704771*^9}, {
   3.794783857351741*^9, 3.79478385876381*^9}, 3.794878317805869*^9, {
   3.795280642695981*^9, 3.795280643798641*^9}, 3.79546218294975*^9, {
   3.795462244426425*^9, 3.7954622461303988`*^9}, 3.795462325886017*^9, {
   3.795462373685348*^9, 3.7954624765368156`*^9}, {3.79546254784603*^9, 
   3.795462606667177*^9}, {3.795462645348057*^9, 3.795462684584609*^9}, {
   3.795462836613646*^9, 3.7954628388188868`*^9}, 3.795462911672778*^9, {
   3.7954629763816757`*^9, 3.795463007821609*^9}, {3.795463053339984*^9, 
   3.795463103472816*^9}, {3.795463137328907*^9, 3.795463154542849*^9}, {
   3.795463185007162*^9, 3.7954631933173647`*^9}, {3.79551760844936*^9, 
   3.7955177185833797`*^9}, {3.795517773030612*^9, 3.795517779428875*^9}, {
   3.795517822036971*^9, 3.7955178493068533`*^9}, 3.7955178934849*^9, {
   3.7961567062789288`*^9, 3.7961567069662113`*^9}, {3.796156765036537*^9, 
   3.7961567685154037`*^9}, {3.796749921742031*^9, 3.7967499281083*^9}, 
   3.796749967394758*^9, {3.796750115541403*^9, 3.796750161907428*^9}, {
   3.796750291745098*^9, 3.796750376699379*^9}, 3.7967605701185083`*^9, {
   3.797016078411378*^9, 3.7970160878172283`*^9}, {3.8004857844865217`*^9, 
   3.800485787102199*^9}, 3.800485968145068*^9, {3.800486030574182*^9, 
   3.800486034364444*^9}, {3.80057903154181*^9, 3.800579062011828*^9}, 
   3.800579176816399*^9, 3.8005792266695023`*^9, {3.814904806152815*^9, 
   3.814904806900158*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5fcea494-32e0-41df-bf62-a30a11478fde"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.574231609613984, 0.}, {9.231973780043699, 
        0.}}]}, {{}, {{{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.9]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 
                   5.896287682862374}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 5.896287682862374]& , TagBoxNote -> 
               "5.896287682862374"], 
              StyleBox["5.896287682862374`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[5.896287682862374, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.6]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
                   5.40587305635651}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], StatusArea[#, 5.40587305635651]& ,
                TagBoxNote -> "5.40587305635651"], 
              StyleBox["5.40587305635651`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[5.40587305635651, {}], 
              "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.9]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{3.0367807720320465`, 0.}, {3.93918426802622, 
                   10.149764725947414`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 10.149764725947414`]& , TagBoxNote -> 
               "10.149764725947414"], 
              StyleBox["10.149764725947414`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[10.149764725947414`, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.6]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{4.0367807720320465`, 0.}, {4.93918426802622, 
                   9.38419788894782}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], StatusArea[#, 9.38419788894782]& ,
                TagBoxNote -> "9.38419788894782"], 
              StyleBox["9.38419788894782`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[9.38419788894782, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.3]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{5.0367807720320465`, 0.}, {5.93918426802622, 
                   8.695912517450143}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 8.695912517450143]& , TagBoxNote -> 
               "8.695912517450143"], 
              StyleBox["8.695912517450143`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[8.695912517450143, {}], 
              "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.9]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{6.3295702840495265`, 0.}, {7.2319737800437, 
                   11.848560594682294`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 11.848560594682294`]& , TagBoxNote -> 
               "11.848560594682294"], 
              StyleBox["11.848560594682294`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[11.848560594682294`, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.6]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{7.3295702840495265`, 0.}, {8.231973780043699, 
                   12.19092104352195}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 12.19092104352195]& , TagBoxNote -> 
               "12.19092104352195"], 
              StyleBox["12.19092104352195`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[12.19092104352195, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.3]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{8.329570284049526, 0.}, {9.231973780043699, 
                   13.000165517157763`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 13.000165517157763`]& , TagBoxNote -> 
               "13.000165517157763"], 
              StyleBox["13.000165517157763`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[13.000165517157763`, {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
       StyleBox[{Antialiasing -> False, {
          Directive[
           Thickness[Tiny]], {
           LineBox[{{0.574231609613984, 0.}, {9.405128623452294, 0.}}]}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         StyleBox[{{
            Directive[
             Thickness[Tiny]], 
            LineBox[{{0.7439912600145666, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 
               0.}]}], 
            LineBox[{{9.231973780043699, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {9.231973780043699, 
               0.}]}], {{}, {}, {
              LineBox[{{1.64639475600874, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {1.64639475600874, 
                 0.}]}], 
              LineBox[{{1.7439912600145666`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {1.7439912600145666`, 
                 0.}]}]}, {}, {}, {}, {
              LineBox[{{3.93918426802622, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {3.93918426802622, 
                 0.}]}], 
              LineBox[{{4.0367807720320465`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {4.0367807720320465`, 
                 0.}]}], 
              LineBox[{{4.93918426802622, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {4.93918426802622, 
                 0.}]}], 
              LineBox[{{5.0367807720320465`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {5.0367807720320465`, 
                 0.}]}]}, {}, {}, {}, {
              LineBox[{{7.2319737800437, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {7.2319737800437, 
                 0.}]}], 
              LineBox[{{7.3295702840495265`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {7.3295702840495265`, 
                 0.}]}], 
              LineBox[{{8.231973780043699, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {8.231973780043699, 
                 0.}]}], 
              LineBox[{{8.329570284049526, 0.}, 
                Offset[{-7.347880794884119*^-16, -4.}, {8.329570284049526, 
                 0.}]}]}, {
              LineBox[{{2.64639475600874, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {2.64639475600874, 
                 0.}]}], 
              LineBox[{{3.0367807720320465`, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {3.0367807720320465`, 
                 0.}]}], 
              LineBox[{{5.93918426802622, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {5.93918426802622, 
                 0.}]}], 
              LineBox[{{6.3295702840495265`, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {6.3295702840495265`, 
                 0.}]}]}}}, 
           StyleBox[{
             Directive[
              Thickness[Tiny]], 
             Directive[
              Thickness[Tiny]], 
             StyleBox[{
               InsetBox[
                FormBox["\"H1\"", TraditionalForm], 
                Offset[{0, -2}, {1.1951930080116533`, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox[
                FormBox["\"LR\"", TraditionalForm], 
                Offset[{0, -2}, {2.1951930080116533`, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox[
                FormBox["\"HV\"", TraditionalForm], 
                Offset[{0, -2}, {3.4879825200291332`, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox[
                FormBox["\"H2\"", TraditionalForm], 
                Offset[{0, -2}, {4.487982520029133, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"AG\"", TraditionalForm], 
                Offset[{0, -2}, {5.487982520029133, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"BD\"", TraditionalForm], 
                Offset[{0, -2}, {6.780772032046613, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"CM\"", TraditionalForm], 
                Offset[{0, -2}, {7.780772032046612, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"AA\"", TraditionalForm], 
                Offset[{0, -2}, {8.780772032046613, 0.}], {0, 1}, Automatic, {
                1, 0}]}, {}, StripOnInput -> False]}, "GraphicsLabel", 
            StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> False]},
         "GraphicsAxes", StripOnInput -> False]}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.574231609613984, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],StyleBox[
   "\"Model\"", StripOnInput -> False],StyleBox[
   "\"Flexibility\"", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], 
       BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline, ImageSize -> Medium], 
        BaseStyle -> {FontFamily -> "Arial", 20}, DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.4}}, "Rows" -> {{1}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"0.4`", ",", "1"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", "20"}], 
           "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.79675031706859*^9, 3.7967503461860647`*^9}, 
   3.79675037724024*^9, 3.7967507387821712`*^9, 3.7967600927218933`*^9, 
   3.7967605713891497`*^9, {3.796918676460394*^9, 3.796918688507958*^9}, {
   3.796921565592572*^9, 3.796921587912944*^9}, 3.796928349229566*^9, 
   3.7969307124925337`*^9, 3.796937254038265*^9, 3.7969453208711033`*^9, 
   3.800485794747746*^9, 3.8004859441799097`*^9, 3.8004860073242273`*^9, 
   3.8004860746137943`*^9, 3.800541246221772*^9, 3.800541413639059*^9, 
   3.800547566473008*^9, 3.80056186390928*^9, 3.800562268904841*^9, 
   3.8005623477075987`*^9, {3.800579055580873*^9, 3.800579062645664*^9}, 
   3.80057923681705*^9, 3.800841457959613*^9, 3.800993784570887*^9, 
   3.8012234942017603`*^9, 3.801247701408503*^9, 3.80252398989881*^9, 
   3.802524027269928*^9, 3.806488278806279*^9, {3.8149048027025137`*^9, 
   3.8149048080302687`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"7801156b-15e3-4470-9a8b-8aee4c543448"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Third term - Flexibility - Truncated \[Lambda]", "Subsection",
 CellChangeTimes->{{3.795538839755321*^9, 3.795538855896353*^9}, {
   3.800485730704425*^9, 3.8004857375037127`*^9}, {3.8004858040615587`*^9, 
   3.8004858079330378`*^9}, 3.8004858752587423`*^9, {3.800486017309175*^9, 
   3.800486046717545*^9}},ExpressionUUID->"bc0fc2f4-9fd7-4a29-a2aa-\
801ff30d9dd7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NInts", "=", 
  RowBox[{"{", 
   RowBox[{
   "NIntH1Trunc", ",", "NIntRTrunc", ",", "NIntHVTrunc", ",", "NIntH2Trunc", 
    ",", "NIntAGTrunc", ",", "NIntBDTrunc", ",", "NIntCMTrunc", ",", 
    "NIntAATrunc"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<H1\>\"", ",", "\"\<LR\>\"", ",", "\"\<HV\>\"", ",", "\"\<H2\>\"", 
     ",", "\"\<AG\>\"", ",", "\"\<BD\>\"", ",", "\"\<CM\>\"", ",", 
     "\"\<AA\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gNInts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NInts", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NInts", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NInts", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8"}], "}"}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rNInts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"NInts", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "/", 
      RowBox[{"NInts", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NInts", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], "/", 
      RowBox[{"NInts", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NInts", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"6", ",", "7", ",", "8"}], "}"}], "]"}], "]"}], "/", 
      RowBox[{"NInts", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<results/FisherMatrix-2_Output_logNIntegrals.txt\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\[CapitalNu]vals", ",", "Pvals", ",", "Labels", ",", "NInts", ",", 
        "rNInts"}], "}"}]}], "]"}], ";"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.794697927784565*^9, 3.7946979280239363`*^9}, {
   3.7947838641501017`*^9, 3.794783866045899*^9}, {3.7947913446798353`*^9, 
   3.794791354796941*^9}, {3.794823901184327*^9, 3.794823909293963*^9}, {
   3.7949305816519938`*^9, 3.794930596532655*^9}, 3.795281836312695*^9, {
   3.795461881710446*^9, 3.795461890925466*^9}, {3.795461987013691*^9, 
   3.795462048592525*^9}, {3.7954628486847687`*^9, 3.79546296067188*^9}, {
   3.795482215560031*^9, 3.7954822163443813`*^9}, 3.795517550796514*^9, {
   3.7955178952190037`*^9, 3.795517895578741*^9}, {3.796749956733571*^9, 
   3.7967499588752337`*^9}, {3.8004858575246277`*^9, 
   3.8004858793786573`*^9}, {3.800486089996511*^9, 3.80048609068264*^9}, {
   3.8005413816126947`*^9, 3.8005413963000402`*^9}, 3.806488284961503*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"dbad6faa-15ea-4cf3-bf85-d030ad096c0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.7324342742784644`", ",", "2.6623060613792395`", ",", 
   "4.153216104808745`", ",", "3.2926250429571957`", ",", 
   "3.535617255301098`", ",", "0.85796062416184`", ",", "2.648739489089239`", 
   ",", "4.92636318072312`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.800486091528654*^9, 3.800541250089292*^9, {3.8005414056331*^9, 
   3.800541413991325*^9}, 3.800547566902433*^9, 3.800561864413124*^9, 
   3.800562269188465*^9, 3.8005623480080442`*^9, 3.800841469853149*^9, 
   3.800993788113756*^9, 3.8012234987809*^9, 3.801247703396422*^9, 
   3.802523992067575*^9, 3.802524027531163*^9, {3.8064882823052387`*^9, 
   3.806488285747438*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"7dbcefb0-4009-449b-8ee7-f63d34cbc629"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "AltLabel2", "=", 
   "\"\<LN\!\(\*SubscriptBox[\(\[Integral]\), \
\(\[CapitalTheta]\)]\)\!\(\*SqrtBox[\(det\\\ \\\ I \((\[Theta])\)\)]\)\
\[DifferentialD]\[Theta]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lNInts", "=", 
   RowBox[{"TakeList", "[", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Labeled", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Labels", "[", 
           RowBox[{"[", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}], "&"}], 
       ",", 
       RowBox[{"Flatten", "@", "gNInts"}]}], "]"}], ",", 
     RowBox[{"Length", "/@", "gNInts"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"bc1", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"BarChart", "[", 
     RowBox[{"lNInts", ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "0.9", "]"}], ",", 
         RowBox[{"GrayLevel", "[", "0.6", "]"}], ",", 
         RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", "\"\<Model\>\"", "]"}], ",", 
      RowBox[{"Style", "[", "\"\<Flexibility\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", " ", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "20"}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/FisherMatrix-2_Output_Complexity_absolute_Trunc.pdf\>\"", ",",
     "bc1"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.794594837528905*^9, 3.794594955945361*^9}, {
   3.794595060527577*^9, 3.794595189481346*^9}, {3.7945952311200047`*^9, 
   3.794595327772311*^9}, {3.794595413514797*^9, 3.7945954341198397`*^9}, {
   3.7945990104127493`*^9, 3.7945990151905937`*^9}, {3.7946169134768877`*^9, 
   3.794617085078146*^9}, {3.794683986851824*^9, 3.794684013704771*^9}, {
   3.794783857351741*^9, 3.79478385876381*^9}, 3.794878317805869*^9, {
   3.795280642695981*^9, 3.795280643798641*^9}, 3.79546218294975*^9, {
   3.795462244426425*^9, 3.7954622461303988`*^9}, 3.795462325886017*^9, {
   3.795462373685348*^9, 3.7954624765368156`*^9}, {3.79546254784603*^9, 
   3.795462606667177*^9}, {3.795462645348057*^9, 3.795462684584609*^9}, {
   3.795462836613646*^9, 3.7954628388188868`*^9}, 3.795462911672778*^9, {
   3.7954629763816757`*^9, 3.795463007821609*^9}, {3.795463053339984*^9, 
   3.795463103472816*^9}, {3.795463137328907*^9, 3.795463154542849*^9}, {
   3.795463185007162*^9, 3.7954631933173647`*^9}, {3.79551760844936*^9, 
   3.7955177185833797`*^9}, {3.795517773030612*^9, 3.795517779428875*^9}, {
   3.795517822036971*^9, 3.7955178493068533`*^9}, 3.7955178934849*^9, {
   3.7961567062789288`*^9, 3.7961567069662113`*^9}, {3.796156765036537*^9, 
   3.7961567685154037`*^9}, {3.796749921742031*^9, 3.7967499281083*^9}, 
   3.796749967394758*^9, {3.796750115541403*^9, 3.796750161907428*^9}, {
   3.796750291745098*^9, 3.796750376699379*^9}, 3.7967605701185083`*^9, {
   3.797016078411378*^9, 3.7970160878172283`*^9}, {3.8004857844865217`*^9, 
   3.800485787102199*^9}, 3.800485968145068*^9, {3.800486097515656*^9, 
   3.800486099201909*^9}, {3.8005788067339*^9, 3.800578833154763*^9}, {
   3.800578864721936*^9, 3.800578875273053*^9}, {3.800578914345882*^9, 
   3.8005790180680437`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"ca4bb2b7-a1b9-45b1-abfc-1cf87dbd9350"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.574231609613984, 0.}, {9.231973780043699, 
        0.}}]}, {{}, {{{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.9]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 
                   2.7324342742784644`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 2.7324342742784644`]& , TagBoxNote -> 
               "2.7324342742784644"], 
              StyleBox["2.7324342742784644`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[2.7324342742784644`, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.6]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
                   2.6623060613792395`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 2.6623060613792395`]& , TagBoxNote -> 
               "2.6623060613792395"], 
              StyleBox["2.6623060613792395`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[2.6623060613792395`, {}], 
              "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.9]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{3.0367807720320465`, 0.}, {3.93918426802622, 
                   4.153216104808745}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 4.153216104808745]& , TagBoxNote -> 
               "4.153216104808745"], 
              StyleBox["4.153216104808745`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[4.153216104808745, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.6]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{4.0367807720320465`, 0.}, {4.93918426802622, 
                   3.2926250429571957`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 3.2926250429571957`]& , TagBoxNote -> 
               "3.2926250429571957"], 
              StyleBox["3.2926250429571957`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[3.2926250429571957`, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.3]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{5.0367807720320465`, 0.}, {5.93918426802622, 
                   3.535617255301098}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 3.535617255301098]& , TagBoxNote -> 
               "3.535617255301098"], 
              StyleBox["3.535617255301098`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[3.535617255301098, {}], 
              "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.9]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{6.3295702840495265`, 0.}, {7.2319737800437, 
                   0.85796062416184}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], StatusArea[#, 0.85796062416184]& ,
                TagBoxNote -> "0.85796062416184"], 
              StyleBox["0.85796062416184`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.85796062416184, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.6]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{7.3295702840495265`, 0.}, {8.231973780043699, 
                   2.648739489089239}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 2.648739489089239]& , TagBoxNote -> 
               "2.648739489089239"], 
              StyleBox["2.648739489089239`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[2.648739489089239, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.644]]], 
             GrayLevel[0.3]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{8.329570284049526, 0.}, {9.231973780043699, 
                   4.92636318072312}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], StatusArea[#, 4.92636318072312]& ,
                TagBoxNote -> "4.92636318072312"], 
              StyleBox["4.92636318072312`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[4.92636318072312, {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
       StyleBox[{Antialiasing -> False, {
          Directive[
           Thickness[Tiny]], {
           LineBox[{{0.574231609613984, 0.}, {9.405128623452294, 0.}}]}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         StyleBox[{{
            Directive[
             Thickness[Tiny]], 
            LineBox[{{0.7439912600145666, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 
               0.}]}], 
            LineBox[{{9.231973780043699, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {9.231973780043699, 
               0.}]}], {{}, {}, {
              LineBox[{{1.64639475600874, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {1.64639475600874, 
                 0.}]}], 
              LineBox[{{1.7439912600145666`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {1.7439912600145666`, 
                 0.}]}]}, {}, {}, {}, {
              LineBox[{{3.93918426802622, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {3.93918426802622, 
                 0.}]}], 
              LineBox[{{4.0367807720320465`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {4.0367807720320465`, 
                 0.}]}], 
              LineBox[{{4.93918426802622, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {4.93918426802622, 
                 0.}]}], 
              LineBox[{{5.0367807720320465`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {5.0367807720320465`, 
                 0.}]}]}, {}, {}, {}, {
              LineBox[{{7.2319737800437, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {7.2319737800437, 
                 0.}]}], 
              LineBox[{{7.3295702840495265`, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {7.3295702840495265`, 
                 0.}]}], 
              LineBox[{{8.231973780043699, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {8.231973780043699, 
                 0.}]}], 
              LineBox[{{8.329570284049526, 0.}, 
                
                Offset[{-7.347880794884119*^-16, -4.}, {8.329570284049526, 
                 0.}]}]}, {
              LineBox[{{2.64639475600874, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {2.64639475600874, 
                 0.}]}], 
              LineBox[{{3.0367807720320465`, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {3.0367807720320465`, 
                 0.}]}], 
              LineBox[{{5.93918426802622, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {5.93918426802622, 
                 0.}]}], 
              LineBox[{{6.3295702840495265`, 0.}, 
                
                Offset[{-1.102182119232618*^-15, -6.}, {6.3295702840495265`, 
                 0.}]}]}}}, 
           StyleBox[{
             Directive[
              Thickness[Tiny]], 
             Directive[
              Thickness[Tiny]], 
             StyleBox[{
               InsetBox[
                FormBox["\"H1\"", TraditionalForm], 
                Offset[{0, -2}, {1.1951930080116533`, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox[
                FormBox["\"LR\"", TraditionalForm], 
                Offset[{0, -2}, {2.1951930080116533`, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox[
                FormBox["\"HV\"", TraditionalForm], 
                Offset[{0, -2}, {3.4879825200291332`, 0.}], {0, 1}, 
                Automatic, {1, 0}], 
               InsetBox[
                FormBox["\"H2\"", TraditionalForm], 
                Offset[{0, -2}, {4.487982520029133, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"AG\"", TraditionalForm], 
                Offset[{0, -2}, {5.487982520029133, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"BD\"", TraditionalForm], 
                Offset[{0, -2}, {6.780772032046613, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"CM\"", TraditionalForm], 
                Offset[{0, -2}, {7.780772032046612, 0.}], {0, 1}, Automatic, {
                1, 0}], 
               InsetBox[
                FormBox["\"AA\"", TraditionalForm], 
                Offset[{0, -2}, {8.780772032046613, 0.}], {0, 1}, Automatic, {
                1, 0}]}, {}, StripOnInput -> False]}, "GraphicsLabel", 
            StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> False]},
         "GraphicsAxes", StripOnInput -> False]}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.574231609613984, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],StyleBox[
   "\"Model\"", StripOnInput -> False],StyleBox[
   "\"Flexibility\"", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], 
       BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline, ImageSize -> Medium], 
        BaseStyle -> {FontFamily -> "Arial", 20}, DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.4}}, "Rows" -> {{1}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"0.4`", ",", "1"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", "20"}], 
           "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.79675031706859*^9, 3.7967503461860647`*^9}, 
   3.79675037724024*^9, 3.7967507387821712`*^9, 3.7967600927218933`*^9, 
   3.7967605713891497`*^9, {3.796918676460394*^9, 3.796918688507958*^9}, {
   3.796921565592572*^9, 3.796921587912944*^9}, 3.796928349229566*^9, 
   3.7969307124925337`*^9, 3.796937254038265*^9, 3.7969453208711033`*^9, 
   3.800485794747746*^9, 3.8004859441799097`*^9, 3.8004860073242273`*^9, {
   3.800486093965474*^9, 3.800486104534864*^9}, 3.8005412528959103`*^9, {
   3.800541409569977*^9, 3.800541414078794*^9}, 3.8005475669836483`*^9, 
   3.800561864490049*^9, 3.800562269265902*^9, 3.800562348080228*^9, 
   3.800578876611793*^9, {3.8005789228390503`*^9, 3.800579009272566*^9}, 
   3.80084147199863*^9, 3.8009937895283422`*^9, 3.801223500562519*^9, 
   3.801247704807599*^9, 3.802523994386723*^9, 3.802524027614403*^9, 
   3.806488288133177*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"5fbf5abd-2d3d-423e-8629-62cd012cfa5a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partial numeric Integration - Truncated \[Lambda]", "Subsection",
 CellChangeTimes->{{3.795133285932665*^9, 3.795133294711598*^9}, {
  3.795280876157503*^9, 3.7952808766935167`*^9}, {3.79528092598785*^9, 
  3.795280950913701*^9}, {3.800486164343046*^9, 3.800486168288897*^9}, {
  3.800486247908168*^9, 
  3.800486248875648*^9}},ExpressionUUID->"2ece3119-fb0d-4f97-a010-\
4a4cc535e93d"],

Cell["\<\
Fix ' a', integrate square root of Expected Fisher Information Matrix over \
remaining parameters , and take natural log.\
\>", "Text",
 CellChangeTimes->{{3.795280928852249*^9, 3.795280932318766*^9}, {
  3.795463246906925*^9, 
  3.7954632510188007`*^9}},ExpressionUUID->"08bb5c7f-3d51-4a6b-a754-\
d06071d55b8b"],

Cell["\<\
Observe that the breaks occur at Max[\[CapitalNu]vals]/P\[CapitalNu]prods \
where P\[CapitalNu]prods is the pairwise products of all \[CapitalNu] and P
Also, that aNIntH1Trunc =aNIntRTrunc  = 0 for a > Max[\[CapitalNu]vals]/Min[P\
\[CapitalNu]prods].  In the given design, Min[P\[CapitalNu]prods] = 1x2=2 and \
Max[\[CapitalNu]vals] = 256.\
\>", "Text",
 CellChangeTimes->{{3.800645116058956*^9, 3.800645242369083*^9}, {
  3.800645311137821*^9, 3.800645313465735*^9}, {3.800645376639573*^9, 
  3.800645403262241*^9}, {3.800645438389044*^9, 3.8006455067943077`*^9}, {
  3.80064581732616*^9, 
  3.8006459174340878`*^9}},ExpressionUUID->"c44a6ef2-9dc4-49a4-aa6a-\
4b7239651703"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P\[CapitalNu]prods", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Join", "@@", 
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", "Pvals", ",", "\[CapitalNu]vals"}], "]"}]}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8012238410521393`*^9, 3.801223869202928*^9}, {
  3.801223899851521*^9, 3.801223913865569*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"d54708eb-a846-431d-824c-9884c63d1f0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "4", ",", "8", ",", "10", ",", "16", ",", "20", ",", "32", ",", 
   "40", ",", "64", ",", "80", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{{3.801223900204112*^9, 3.801223920628668*^9}, 
   3.80124771253976*^9, 3.802524027979368*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"64bb95f3-619f-4a17-acc4-8298bb4ebb5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnk1T", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"aNIntH1Trunc", ",", "\[IndentingNewLine]", "aNIntRTrunc"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0.01", ",", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"Max", "[", "\[CapitalNu]vals", "]"}], "/", 
         "P\[CapitalNu]prods"}], "]"}], "*", "1.1"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxRecursion", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PerformanceGoal", "\[Rule]", "10"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<H1\>\"", ",", "\"\<LR\>\""}], "}"}], ",", "Above"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795136029707966*^9, 3.795136047222406*^9}, {
   3.795136122100698*^9, 3.795136176777763*^9}, {3.795136218905382*^9, 
   3.795136287773806*^9}, {3.795136380233365*^9, 3.795136425894341*^9}, {
   3.795136609264336*^9, 3.795136639797893*^9}, {3.795136730698585*^9, 
   3.795136731850418*^9}, 3.795136773010551*^9, {3.7951368051694317`*^9, 
   3.795136816184485*^9}, {3.795136901895876*^9, 3.7951369045958557`*^9}, {
   3.7951372535272827`*^9, 3.795137253629999*^9}, {3.795137485814694*^9, 
   3.7951375029884443`*^9}, 3.795215173159231*^9, {3.7952180059577417`*^9, 
   3.795218053754533*^9}, {3.795218151152787*^9, 3.7952181519426937`*^9}, {
   3.795280861319553*^9, 3.7952808615262327`*^9}, {3.795281021367886*^9, 
   3.795281021575576*^9}, {3.7954632855547333`*^9, 3.7954634452741423`*^9}, {
   3.795470424854619*^9, 3.795470434540783*^9}, {3.795476034457754*^9, 
   3.7954760420396423`*^9}, {3.7955388793856163`*^9, 3.7955389321427*^9}, {
   3.7961571033107147`*^9, 3.796157144109008*^9}, {3.7961613256941566`*^9, 
   3.796161435794482*^9}, {3.796161586189435*^9, 3.796161586812489*^9}, {
   3.7961685815119343`*^9, 3.796168621877433*^9}, {3.796168651981846*^9, 
   3.796168655580513*^9}, {3.796175824250135*^9, 3.796175828312983*^9}, 
   3.7961758715999107`*^9, {3.796241588308408*^9, 3.79624160141306*^9}, {
   3.796241638212008*^9, 3.7962416387081757`*^9}, 3.796241785311227*^9, 
   3.796727889591301*^9, {3.8004861242901573`*^9, 3.800486177806629*^9}, {
   3.800486256140212*^9, 3.800486258709402*^9}, 3.800486303346423*^9, 
   3.800488671337872*^9, {3.800489581845274*^9, 3.800489598523205*^9}, {
   3.800561850685803*^9, 3.800561851556312*^9}, {3.800644843358203*^9, 
   3.8006448442365932`*^9}, {3.800644885035165*^9, 3.800645070035674*^9}, {
   3.800992846253851*^9, 3.8009928872904673`*^9}, {3.8009929491454*^9, 
   3.800992955840259*^9}, {3.801231619038216*^9, 3.801231664525104*^9}, 
   3.8064882959984827`*^9},ExpressionUUID->"734af324-840e-43d8-ae6e-\
2bdf7515b8d0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{1.2902031730710206`, 2.1332641800959085`}, {
          1.3360697750427661`, 2.095468500713145}, {1.4217320427240296`, 
          2.0313596929627504`}, {1.5102551020408164`, 1.9709270533865126`}}], 
         
         LineBox[{{1.6897448979591838`, 1.6379410032706168`}, {
          1.7005003900500477`, 1.6327528815073438`}, {1.793423172492054, 
          1.5898913201974618`}, {1.880144735000925, 1.5527916442095757`}, {
          1.9102551020408163`, 1.5405051079573804`}}], 
         LineBox[{{2.0897448979591835`, 1.0716648443937318`}, {
          2.234291499797152, 1.0364198070682926`}, {2.3282735770667653`, 
          1.0152865107208764`}, {2.516237731605992, 0.9766293813400951}, {
          2.6085058338404297`, 0.9592012028090285}, {2.7007739360748677`, 
          0.9426739458228939}, {2.7930420383093058`, 0.9269725732690328}, {
          2.8853101405437434`, 0.9120305159996349}, {2.9713770228450462`, 
          0.8987248298822971}, {3.057443905146349, 0.8859850056124954}, {
          3.1102551020408167`, 0.8784309222449329}}], 
         LineBox[{{3.2897448979591837`, 0.7258718149917361}, {3.322905066811, 
          0.7222408981709799}, {3.416232463873045, 0.7123072041741395}, {
          3.602887257997135, 0.6936105788059924}, {3.690013435126045, 
          0.6853731249652041}, {3.777139612254955, 0.6774223570325317}, {
          3.8642657893838654`, 0.6697420226475781}, {3.9102551020408165`, 
          0.665791887024753}}], 
         LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAxt4mFuZbEEDW4h3G8dbZPxB2p5Wc
1BBAdft8MJ952T8fJoLhEiwRQNEzTKFrONk/fKJCeviKEUA+24qc1/PYP9ge
AxPe6RFAzdv3Y2ex2D+QF4REqacSQN7w9KiEMtg/9Bo5NNkJFEBaaXNq2FjX
P45PhVfGiRVALynolAGF1j/c9SU/rgIXQPCIsXmGydU/HK55sy9iGEBOwnUM
NirVP5KXZFtu3xlACKIBzfaL1D/7kgKQRkMbQDPf/C0eBNQ/mr83+NvEHEA6
rmnrLXzTP+xdwSRsPx5AjTQAN7gA0z/9iRCTtpceQGTHm3445dI/DrZfAQHw
HkDRGjLSLsrSPyDirm9LSB9AJ4GD7pev0j8xDv7dlaAfQJCtR7BwldI/OiHZ
6RmkH0BGre1YaJTSP7b4j3c=
          "]], 
         LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAY28TC/MtIEAyl27czG7AP6Z7zofh
XyBA0GHip6tVwD/W92hlvo8gQM2t/vz/PcA/RNaZdG68IEAt7uUzQijAP7G0
yoMe6SBAZlU20toSwD+McSyifkIhQP4Dxf4M0r8/HCQaQbzxIUCJmm/HKTW/
P0dv03nYryJAgv6aH8+Uvj9rQ+Z4QWEjQFk/DSaPB74/KrDEEYkhJEDjZB6Y
yHa9P8NVzQxO3iRAlsnk11LwvD9VhC/OX44lQJG3HTUuebw/gktdKVBNJkBd
QTmpQf67P6mb5EqN/yZAHj0+ovKQuz+qJJbOR64nQE0dCnSBKrs/RkYT7OBr
KEDg+yuZPcC6P9vw6c/GHClAXVe7/1xhuj8LNIxNi9wpQKGMcVPW/rk/NACI
kZyPKkBODKQKoKa5PzcFrjcrPytANNrPEnZTuT/Vop93mP0rQGw0UU67/Lg/
bMnqfVKvLEBbvsxg2a64P56IAR7rby1A4C3pr5RduD+qgEIgAS0uQIEkw9DE
ELg/rwHd6GPdLkCM2uG1ncu3PxeIdkE0DS9AYIy7o0S5tz9/DhCaBD0vQLOP
3sEVp7c/55Sp8tRsL0BFgZNvEJW3P08bQ0ulnC9ALhB3DzSDtz/2A3PVSMkv
QBM6Dbyrcrc/nZDs9AzSL0Cs2aSvcG+3P9Up52I=
          "]], 
         LineBox[{{16.089744897959182`, 0.}, {16.240160666080904`, 0.}, {
          16.32563190065213, 0.}, {16.49657436979458, 0.}, {16.86750136712245,
           0.}, {17.21362348471778, 0.}, {17.310217523793437`, 0.}, {
          17.406811562869095`, 0.}, {17.503405601944753`, 0.}, {
          17.59999964102041, 0.}}]}, 
        Annotation[#, "Charting`Private`Tag$21507#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{1.3191292573544355`, 2.1332641800959085`}, {
          1.3360697750427661`, 2.119146862465288}, {1.4217320427240296`, 
          2.05431363841329}, {1.5146548251660357`, 1.990301126623507}, {
          1.6075776076080417`, 1.9319222803266844`}, {1.7005003900500477`, 
          1.8783964433336877`}, {1.793423172492054, 1.8290864679956664`}, {
          1.880144735000925, 1.786405239125231}, {1.9102551020408163`, 
          1.7722702244157742`}}], 
         LineBox[{{2.0897448979591835`, 1.1575303286858973`}, {
          2.234291499797152, 1.119461337383918}, {2.3282735770667653`, 
          1.096634768428882}, {2.516237731605992, 1.0548802964852741`}, {
          2.6085058338404297`, 1.0360557121677072`}, {2.7007739360748677`, 
          1.0182042343371924`}, {2.8853101405437434`, 0.9851055472047925}, {
          2.9713770228450462`, 0.9707337636146472}, {3.057443905146349, 
          0.956973180675336}, {3.2295776697489544`, 0.9311210584940792}, {
          3.602887257997135, 0.8815636604118345}, {3.690013435126045, 
          0.8710940392984143}, {3.777139612254955, 0.8609887896151158}, {
          3.8642657893838654`, 0.8512272549723745}, {3.9102551020408165`, 
          0.8462067202152844}}], 
         LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAxt4mFuZbEECdPiiLcFXhPxB2p5Wc
1BBASuiWQNYW4T8fJoLhEiwRQPdhwjYZ6+A/fKJCeviKEUBIk1NHGL3gP9ge
AxPe6RFAyQkv0YaQ4D+QF4REqacSQO6CM71oO+A/9Bo5NNkJFEBJsTKPx1Lf
P45PhVfGiRVAIxuoQpE23j/c9SU/rgIXQPg2dhEJO90/HK55sy9iGEBPX5UE
S2XcP5KXZFtu3xlApHW3efuQ2z/7kgKQRkMbQB4Y+b252to/mr83+NvEHECx
7TZLWCTaP+xdwSRsPx5AUE2PyrR+2T/9iRCTtpceQO3G8APQWdk/DrZfAQHw
HkA4qa2diTXZPyDirm9LSB9AvmIrN90R2T8xDv7dlaAfQIWJsprG7tg/OiHZ
6RmkH0CJVA30Y+3YP1g/i4U=
          "]], 
         LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAY28TC/MtIECIZMFJZHbMP6Z7zofh
XyBAvfJUpt1KzD/W92hlvo8gQAEiaP/dIcw/RNaZdG68IEDiDzzGNfzLP7G0
yoMe6SBApnYBNSPXyz+McSyifkIhQEtzu9ivjss/HCQaQbzxIUBaSSt70QbL
P0dv03nYryJA53APkvJ7yj9rQ+Z4QWEjQG4EHx2fAco/KrDEEYkhJEB/EQYA
PoTJP8NVzQxO3iRAQPmu48sPyT9VhC/OX44lQOB2XJCdqMg/gktdKVBNJkBF
tNUAKT7IP6mb5EqN/yZA2T+j/X7fxz+qJJbOR64nQCkteVHHhsc/RkYT7OBr
KED8rboWwCrHP9vw6c/GHClAY8dxi5XYxj8LNIxNi9wpQIvPshFCg8Y/NACI
kZyPKkDz57c83TbGPzcFrjcrPytAOIB/ldfuxT/Vop93mP0rQINNWWy7o8U/
bMnqfVKvLEAa0terSGDFP56IAR7rby1ASM3FR+cZxT+qgEIgAS0uQERTMt5h
18Q/rwHd6GPdLkC5KoCHfpvEPxeIdkE0DS9AUdEfv5qLxD9/DhCaBD0vQBYA
EoDbe8Q/55Sp8tRsL0D6fic/QGzEP08bQ0ulnC9AXQATdMhcxD/2A3PVSMkv
QMaB1yZ3TsQ/nZDs9AzSL0B5SiDoqkvEP+Hu45k=
          "]], 
         LineBox[{{16.089744897959182`, 0.}, {16.240160666080904`, 0.}, {
          16.32563190065213, 0.}, {16.49657436979458, 0.}, {16.86750136712245,
           0.}, {17.21362348471778, 0.}, {17.310217523793437`, 0.}, {
          17.406811562869095`, 0.}, {17.503405601944753`, 0.}, {
          17.59999964102041, 0.}}]}, 
        Annotation[#, 
         "Charting`Private`Tag$21507#2"]& ], {}}, {{}, {}, {}, {}, {}}, {{}, \
{}, {}, {}, {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 17.6}, {0., 2.1332641800959085`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"H1\"", "\"R\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.800488672251485*^9, {3.800489593388812*^9, 3.8004895993825617`*^9}, 
   3.800541847777121*^9, 3.800547940466118*^9, 3.8005628285298758`*^9, {
   3.800644890457984*^9, 3.800645021459906*^9}, {3.80064505265304*^9, 
   3.800645070602989*^9}, 3.800648828846257*^9, 3.800841953028199*^9, {
   3.800992839885976*^9, 3.8009928877061*^9}, 3.800992956539716*^9, 
   3.800993814503764*^9, 3.801223521522999*^9, 3.80122387815774*^9, 
   3.8012239209136257`*^9, 3.8012316208313637`*^9, {3.801231655989319*^9, 
   3.8012316650797787`*^9}, 3.8012477140298862`*^9, 3.8025240280902863`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"54ac2c4d-9832-4416-96f8-8b9416dbc16c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnk2T", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aNIntHVTrunc", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntH2Trunc", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntAGTrunc", "[", "a", "]"}]}], "\[IndentingNewLine]", "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0.1", ",", "200"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"MaxRecursion", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PerformanceGoal", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<HV\>\"", ",", "\"\<H2\>\"", ",", "\"\<AG\>\""}], "}"}], 
       ",", "Above"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.79616860999851*^9, 3.7961686980270033`*^9}, {
   3.7961753209673967`*^9, 3.796175321573962*^9}, {3.7961753927881193`*^9, 
   3.796175415699346*^9}, {3.7961757941393337`*^9, 3.796175798322241*^9}, 
   3.796175869855794*^9, 3.796241786534403*^9, 3.800486126625565*^9, {
   3.800486260813016*^9, 3.800486305513883*^9}, 3.80048866596203*^9, {
   3.800489094889885*^9, 3.800489096599697*^9}, {3.8004895794779787`*^9, 
   3.800489606858796*^9}, {3.800561842854093*^9, 3.8005618429488173`*^9}, 
   3.8006453532747593`*^9, {3.8006456828529453`*^9, 3.80064572981822*^9}, {
   3.800645778849305*^9, 3.800645781176115*^9}, {3.800648234475688*^9, 
   3.8006482386735764`*^9}, {3.8006483413995447`*^9, 
   3.8006483506613626`*^9}, {3.800648552606925*^9, 3.8006485527016087`*^9}, {
   3.8006505067139063`*^9, 3.800650522050118*^9}, {3.800654145352293*^9, 
   3.800654164853498*^9}, {3.800992972929009*^9, 3.800992979175013*^9}, 
   3.800993849495327*^9, {3.801231605847165*^9, 3.80123161593396*^9}, {
   3.801231671107854*^9, 3.8012316770530853`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"f3586498-09f7-4ac2-ab5e-3d0600a75e70"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2xmzC07qF6Azl1nd1kxYlRs4t7RE+H/O6Foc
          "]]}, 
        Annotation[#, "Charting`Private`Tag$21689#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
UNDjBAc7gxbX1nzxkb7Sk1cFTvA/0FcimA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$21689#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$21689#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.1, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.1, 200}, {0., 0.2368381893014983}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"HV\"", "\"H2\"", "\"AG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.800488749736415*^9, 3.800489380711316*^9, 3.8004898120454807`*^9, 
   3.8004915404644938`*^9, 3.800541965469482*^9, 3.800548051176538*^9, 
   3.8005629577772923`*^9, 3.800645350931843*^9, 3.8006455184673977`*^9, {
   3.80064567912542*^9, 3.800645718610511*^9}, 3.800645769191904*^9, 
   3.800645821463901*^9, {3.8006483386230373`*^9, 3.800648355516017*^9}, 
   3.8006486339678993`*^9, 3.800649890140758*^9, 3.80065115282967*^9, 
   3.8008421696102962`*^9, 3.800993009227598*^9, 3.8009938426706743`*^9, 
   3.800994891677493*^9, 3.801223817503191*^9, 3.8012238920337877`*^9, 
   3.801224263689672*^9, 3.801231675386312*^9, 3.80123172318082*^9, 
   3.8012477763287582`*^9, 3.802524047920887*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"28482904-2db0-4aee-963a-2ed4d1293dc5"]
}, Open  ]],

Cell["Discontinuities also occur at \
Max[\[CapitalNu]vals]/P\[CapitalNu]prods", "Text",
 CellChangeTimes->{{3.800657039942938*^9, 
  3.8006570759534483`*^9}},ExpressionUUID->"46cfe1c8-1010-4852-98eb-\
0523615c4cca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnk3T", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aNIntBDTrunc", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntCMTrunc", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntAATrunc", "[", "a", "]"}]}], "\[IndentingNewLine]", "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0.01", ",", "200"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxRecursion", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PerformanceGoal", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<BD\>\"", ",", "\"\<CM\>\"", ",", "\"\<AA\>\""}], "}"}], 
       ",", "Above"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796168631597066*^9, 3.7961686344933357`*^9}, 
   3.7961686653177137`*^9, {3.796175456226139*^9, 3.796175460176566*^9}, {
   3.796175811690637*^9, 3.7961758685679293`*^9}, 3.796241788022134*^9, {
   3.796242932745275*^9, 3.796242935128635*^9}, {3.7967278601042013`*^9, 
   3.796727862326756*^9}, {3.796748256199194*^9, 3.796748270254163*^9}, 
   3.8004861372253323`*^9, {3.800486282676053*^9, 3.800486308321712*^9}, {
   3.800489622923545*^9, 3.800489623706079*^9}, 3.8005427897820997`*^9, {
   3.80054753738033*^9, 3.800547537484605*^9}, 3.800561840903202*^9, {
   3.8006576533195047`*^9, 3.800657653982339*^9}, {3.800993876334422*^9, 
   3.800993876572629*^9}, {3.8009946322793093`*^9, 3.800994632445224*^9}, {
   3.801231555610058*^9, 3.801231567362311*^9}, {3.801231730465576*^9, 
   3.801231730754944*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"8eab891d-c383-45ef-b6ce-e7d92da9481e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.010004081428571428`, 0.3937739229477952}, {
          0.04689994308572974, 0.9172661861288007}}], 
         LineBox[CompressedData["
1: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
sPrfP3v1r8Ln/v2XA7d8aSW194fRf3JIiAI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$37105#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.010004081428571428`, 0.49660062409199723`}, {
          0.03507192761658, 0.9172661861288007}}], 
         LineBox[CompressedData["
1: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
riXy29ISF2OvvnIoLED4H3Gsv5g=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$37105#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$37105#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 200}, {0., 0.9172661861288007}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"BD\"", "\"CM\"", "\"AA\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.80055231779362*^9, 3.800578583937296*^9, 3.800859804187559*^9, 
   3.800993886229466*^9, 3.800995352360289*^9, {3.801231552251536*^9, 
   3.8012315578106327`*^9}, 3.801231828312715*^9, 3.801253657071693*^9, 
   3.802524821246023*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"1795b4ef-289b-40bd-a328-14dadf24ce2b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.800993911456777*^9, 3.800993924491424*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"cae4b9de-07db-4c5f-b5ff-55a31b399a9d"],

Cell["\<\
Note that the barplot *seems* to differ from the the following for k = 3 in \
that the barchart implies AA > CM but the plot as a function of a suggests CM \
> AA.  This is due to the fact that AA >> CM for very small values of a, as \
well as for large values of a.  It\[CloseCurlyQuote]s only at intermediate \
values (evident in the functional plot) that CM>AA.  In other words, the \
barchart is correct.\
\>", "Text",
 CellChangeTimes->{{3.800994079133922*^9, 3.800994185621262*^9}, {
  3.800994224247025*^9, 
  3.800994251054221*^9}},ExpressionUUID->"4192e768-b84d-47eb-bfe0-\
84f03a69b6e9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalAlpha]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"aNIntBDTrunc", "[", "\[CapitalAlpha]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"aNIntCMTrunc", "[", "\[CapitalAlpha]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"aNIntAATrunc", "[", "\[CapitalAlpha]", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.800993901627866*^9, 3.800993949761714*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"767c1031-07c4-4abb-a766-eb93e7903c71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0234033488471887`", ",", "0.02745767628192976`", ",", 
   "0.0585579437462257`"}], "}"}]], "Output",
 CellChangeTimes->{{3.800993932760152*^9, 3.800993956392251*^9}, 
   3.8009943394851227`*^9, 3.802524822469349*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"b5eab43a-d776-4b27-916f-ab8c37495f95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalAlpha]", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"aNIntBDTrunc", "[", "\[CapitalAlpha]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"aNIntCMTrunc", "[", "\[CapitalAlpha]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"aNIntAATrunc", "[", "\[CapitalAlpha]", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.800993901627866*^9, 3.800993949761714*^9}, {
  3.800994194849577*^9, 3.800994209927602*^9}, {3.8009942577672358`*^9, 
  3.800994258005763*^9}, {3.8009942970698233`*^9, 3.8009943452984943`*^9}, {
  3.800994406746397*^9, 3.8009944077281313`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"93d8746b-7df4-408b-b2db-d6d3d88a727d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,128,6,31084210629258636344,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.800994300001446*^9, {3.800994330857545*^9, 3.800994346531395*^9}, 
   3.800994409125374*^9, 3.802524823132601*^9},
 CellLabel->
  "During evaluation of \
In[127]:=",ExpressionUUID->"4d5d5b31-6ec9-4c20-951c-7ccd101ff471"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,128,7,31084210629258636344,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.800994300001446*^9, {3.800994330857545*^9, 3.800994346531395*^9}, 
   3.800994409125374*^9, 3.802524823907508*^9},
 CellLabel->
  "During evaluation of \
In[127]:=",ExpressionUUID->"e4a7fb71-8d6f-4da7-b4bc-f7f5bfa046ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.00047353740564816697`", ",", "0.006908872172389785`", ",", 
   "0.3602606468277523`"}], "}"}]], "Output",
 CellChangeTimes->{{3.80099433002115*^9, 3.800994330968028*^9}, 
   3.800994366169963*^9, 3.8009944661153173`*^9, 3.802524825151485*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"0b0bb4b0-d505-4fa9-9d5f-eb3163eeceff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalAlpha]", "=", "150"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"aNIntBDTrunc", "[", "\[CapitalAlpha]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"aNIntCMTrunc", "[", "\[CapitalAlpha]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"aNIntAATrunc", "[", "\[CapitalAlpha]", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.800993901627866*^9, 3.800993949761714*^9}, {
  3.800994194849577*^9, 3.800994209927602*^9}, {3.8009942577672358`*^9, 
  3.800994258005763*^9}, {3.800994435320633*^9, 3.800994436326973*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"8c896242-5b97-4cef-843d-2996bec6343b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,130,8,31084210629258636344,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.800994203055173*^9, 3.800994211467532*^9}, 
   3.800994259057993*^9, 3.80099458028506*^9, 3.8025248263912992`*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"2ac6f539-dccc-4307-83ed-a98416d51516"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.000021559363531953246`", ",", "0.0009360000541502674`", ",", 
   "0.0867576365540743`"}], "}"}]], "Output",
 CellChangeTimes->{{3.800993932760152*^9, 3.800993956392251*^9}, {
   3.800994203441895*^9, 3.8009942179376163`*^9}, 3.800994297979122*^9, 
   3.800994663531149*^9, 3.8025248264519243`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"53a80085-f021-4108-b0ec-9f01fc489c32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pnT", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pnk1T", ",", "pnk2T", ",", "pnk3T"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", "\"\<Attack rate\>\"", "]"}], ",", 
      RowBox[{
      "Style", "[", 
       "\"\<LN\!\(\*SubscriptBox[\(\[Integral]\), \
\(\[CapitalTheta]\)]\)\!\(\*SqrtBox[\(det\\\ \\\ I \((\[Theta])\)\)]\)\
\[DifferentialD]\[Theta]\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "20"}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/FisherMatrix-2_Output_partial_numeric_a_Trunc.pdf\>\"", ",", 
    "pnT"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.796161591756052*^9, 3.796161593499509*^9}, {
   3.7961756731360893`*^9, 3.796175708269072*^9}, {3.796175884455531*^9, 
   3.796175900973771*^9}, {3.7967490025062943`*^9, 3.796749062774382*^9}, 
   3.7967490990591373`*^9, {3.79674913198139*^9, 3.796749142579796*^9}, {
   3.796749217842654*^9, 3.796749219496274*^9}, {3.796749257896325*^9, 
   3.7967492860772867`*^9}, 3.7967493177807713`*^9, {3.796749399633634*^9, 
   3.79674943239974*^9}, {3.79674958232307*^9, 3.796749588657757*^9}, {
   3.796749630762241*^9, 3.7967496708625727`*^9}, {3.79674972461436*^9, 
   3.796749761979142*^9}, {3.7967498778406267`*^9, 3.796749878694523*^9}, {
   3.796750566398038*^9, 3.796750567057413*^9}, {3.796750656537052*^9, 
   3.7967506568406277`*^9}, {3.7970161004982*^9, 3.7970161046487303`*^9}, {
   3.800486194958091*^9, 3.8004861977099113`*^9}, {3.80048631197788*^9, 
   3.800486322336968*^9}, 3.800486772992684*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"3fa7ba9b-cfc3-46a8-8127-6d54aa9948e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       InsetBox[
        BoxData[
         FormBox[
          TemplateBox[{
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  
                  LineBox[{{1.2902031730710206`, 2.1332641800959085`}, {
                   1.3360697750427661`, 2.095468500713145}, {
                   1.4217320427240296`, 2.0313596929627504`}, {
                   1.5102551020408164`, 1.9709270533865126`}}], 
                  
                  LineBox[{{1.6897448979591838`, 1.6379410032706168`}, {
                   1.7005003900500477`, 1.6327528815073438`}, {
                   1.793423172492054, 1.5898913201974618`}, {
                   1.880144735000925, 1.5527916442095757`}, {
                   1.9102551020408163`, 1.5405051079573804`}}], 
                  
                  LineBox[{{2.0897448979591835`, 1.0716648443937318`}, {
                   2.234291499797152, 1.0364198070682926`}, {
                   2.3282735770667653`, 1.0152865107208764`}, {
                   2.516237731605992, 0.9766293813400951}, {
                   2.6085058338404297`, 0.9592012028090285}, {
                   2.7007739360748677`, 0.9426739458228939}, {
                   2.7930420383093058`, 0.9269725732690328}, {
                   2.8853101405437434`, 0.9120305159996349}, {
                   2.9713770228450462`, 0.8987248298822971}, {
                   3.057443905146349, 0.8859850056124954}, {
                   3.1102551020408167`, 0.8784309222449329}}], 
                  
                  LineBox[{{3.2897448979591837`, 0.7258718149917361}, {
                   3.322905066811, 0.7222408981709799}, {3.416232463873045, 
                   0.7123072041741395}, {3.602887257997135, 
                   0.6936105788059924}, {3.690013435126045, 
                   0.6853731249652041}, {3.777139612254955, 
                   0.6774223570325317}, {3.8642657893838654`, 
                   0.6697420226475781}, {3.9102551020408165`, 
                   0.665791887024753}}], 
                  LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAxt4mFuZbEEDW4h3G8dbZPxB2p5Wc
1BBAdft8MJ952T8fJoLhEiwRQNEzTKFrONk/fKJCeviKEUA+24qc1/PYP9ge
AxPe6RFAzdv3Y2ex2D+QF4REqacSQN7w9KiEMtg/9Bo5NNkJFEBaaXNq2FjX
P45PhVfGiRVALynolAGF1j/c9SU/rgIXQPCIsXmGydU/HK55sy9iGEBOwnUM
NirVP5KXZFtu3xlACKIBzfaL1D/7kgKQRkMbQDPf/C0eBNQ/mr83+NvEHEA6
rmnrLXzTP+xdwSRsPx5AjTQAN7gA0z/9iRCTtpceQGTHm3445dI/DrZfAQHw
HkDRGjLSLsrSPyDirm9LSB9AJ4GD7pev0j8xDv7dlaAfQJCtR7BwldI/OiHZ
6RmkH0BGre1YaJTSP7b4j3c=
                   "]], 
                  LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAY28TC/MtIEAyl27czG7AP6Z7zofh
XyBA0GHip6tVwD/W92hlvo8gQM2t/vz/PcA/RNaZdG68IEAt7uUzQijAP7G0
yoMe6SBAZlU20toSwD+McSyifkIhQP4Dxf4M0r8/HCQaQbzxIUCJmm/HKTW/
P0dv03nYryJAgv6aH8+Uvj9rQ+Z4QWEjQFk/DSaPB74/KrDEEYkhJEDjZB6Y
yHa9P8NVzQxO3iRAlsnk11LwvD9VhC/OX44lQJG3HTUuebw/gktdKVBNJkBd
QTmpQf67P6mb5EqN/yZAHj0+ovKQuz+qJJbOR64nQE0dCnSBKrs/RkYT7OBr
KEDg+yuZPcC6P9vw6c/GHClAXVe7/1xhuj8LNIxNi9wpQKGMcVPW/rk/NACI
kZyPKkBODKQKoKa5PzcFrjcrPytANNrPEnZTuT/Vop93mP0rQGw0UU67/Lg/
bMnqfVKvLEBbvsxg2a64P56IAR7rby1A4C3pr5RduD+qgEIgAS0uQIEkw9DE
ELg/rwHd6GPdLkCM2uG1ncu3PxeIdkE0DS9AYIy7o0S5tz9/DhCaBD0vQLOP
3sEVp7c/55Sp8tRsL0BFgZNvEJW3P08bQ0ulnC9ALhB3DzSDtz/2A3PVSMkv
QBM6Dbyrcrc/nZDs9AzSL0Cs2aSvcG+3P9Up52I=
                   "]], 
                  
                  LineBox[{{16.089744897959182`, 0.}, {16.240160666080904`, 
                   0.}, {16.32563190065213, 0.}, {16.49657436979458, 0.}, {
                   16.86750136712245, 0.}, {17.21362348471778, 0.}, {
                   17.310217523793437`, 0.}, {17.406811562869095`, 0.}, {
                   17.503405601944753`, 0.}, {17.59999964102041, 0.}}]}, 
                 Annotation[#, "Charting`Private`Tag$21507#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  
                  LineBox[{{1.3191292573544355`, 2.1332641800959085`}, {
                   1.3360697750427661`, 2.119146862465288}, {
                   1.4217320427240296`, 2.05431363841329}, {
                   1.5146548251660357`, 1.990301126623507}, {
                   1.6075776076080417`, 1.9319222803266844`}, {
                   1.7005003900500477`, 1.8783964433336877`}, {
                   1.793423172492054, 1.8290864679956664`}, {
                   1.880144735000925, 1.786405239125231}, {
                   1.9102551020408163`, 1.7722702244157742`}}], 
                  
                  LineBox[{{2.0897448979591835`, 1.1575303286858973`}, {
                   2.234291499797152, 1.119461337383918}, {
                   2.3282735770667653`, 1.096634768428882}, {
                   2.516237731605992, 1.0548802964852741`}, {
                   2.6085058338404297`, 1.0360557121677072`}, {
                   2.7007739360748677`, 1.0182042343371924`}, {
                   2.8853101405437434`, 0.9851055472047925}, {
                   2.9713770228450462`, 0.9707337636146472}, {
                   3.057443905146349, 0.956973180675336}, {
                   3.2295776697489544`, 0.9311210584940792}, {
                   3.602887257997135, 0.8815636604118345}, {3.690013435126045,
                    0.8710940392984143}, {3.777139612254955, 
                   0.8609887896151158}, {3.8642657893838654`, 
                   0.8512272549723745}, {3.9102551020408165`, 
                   0.8462067202152844}}], 
                  LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAxt4mFuZbEECdPiiLcFXhPxB2p5Wc
1BBASuiWQNYW4T8fJoLhEiwRQPdhwjYZ6+A/fKJCeviKEUBIk1NHGL3gP9ge
AxPe6RFAyQkv0YaQ4D+QF4REqacSQO6CM71oO+A/9Bo5NNkJFEBJsTKPx1Lf
P45PhVfGiRVAIxuoQpE23j/c9SU/rgIXQPg2dhEJO90/HK55sy9iGEBPX5UE
S2XcP5KXZFtu3xlApHW3efuQ2z/7kgKQRkMbQB4Y+b252to/mr83+NvEHECx
7TZLWCTaP+xdwSRsPx5AUE2PyrR+2T/9iRCTtpceQO3G8APQWdk/DrZfAQHw
HkA4qa2diTXZPyDirm9LSB9AvmIrN90R2T8xDv7dlaAfQIWJsprG7tg/OiHZ
6RmkH0CJVA30Y+3YP1g/i4U=
                   "]], 
                  LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAY28TC/MtIECIZMFJZHbMP6Z7zofh
XyBAvfJUpt1KzD/W92hlvo8gQAEiaP/dIcw/RNaZdG68IEDiDzzGNfzLP7G0
yoMe6SBApnYBNSPXyz+McSyifkIhQEtzu9ivjss/HCQaQbzxIUBaSSt70QbL
P0dv03nYryJA53APkvJ7yj9rQ+Z4QWEjQG4EHx2fAco/KrDEEYkhJEB/EQYA
PoTJP8NVzQxO3iRAQPmu48sPyT9VhC/OX44lQOB2XJCdqMg/gktdKVBNJkBF
tNUAKT7IP6mb5EqN/yZA2T+j/X7fxz+qJJbOR64nQCkteVHHhsc/RkYT7OBr
KED8rboWwCrHP9vw6c/GHClAY8dxi5XYxj8LNIxNi9wpQIvPshFCg8Y/NACI
kZyPKkDz57c83TbGPzcFrjcrPytAOIB/ldfuxT/Vop93mP0rQINNWWy7o8U/
bMnqfVKvLEAa0terSGDFP56IAR7rby1ASM3FR+cZxT+qgEIgAS0uQERTMt5h
18Q/rwHd6GPdLkC5KoCHfpvEPxeIdkE0DS9AUdEfv5qLxD9/DhCaBD0vQBYA
EoDbe8Q/55Sp8tRsL0D6fic/QGzEP08bQ0ulnC9AXQATdMhcxD/2A3PVSMkv
QMaB1yZ3TsQ/nZDs9AzSL0B5SiDoqkvEP+Hu45k=
                   "]], 
                  
                  LineBox[{{16.089744897959182`, 0.}, {16.240160666080904`, 
                   0.}, {16.32563190065213, 0.}, {16.49657436979458, 0.}, {
                   16.86750136712245, 0.}, {17.21362348471778, 0.}, {
                   17.310217523793437`, 0.}, {17.406811562869095`, 0.}, {
                   17.503405601944753`, 0.}, {17.59999964102041, 0.}}]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$21507#2"]& ], {}}, {{}, {}, {}, {}, \
{}}, {{}, {}, {}, {}, {}}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.01, 17.6}, {0., 2.1332641800959085`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
            FormBox[
             FormBox[
              
              TemplateBox[{"\"H1\"", "\"R\""}, "LineLegend", 
               DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> Automatic, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ), 
           InterpretationFunction -> (FormBox[
             RowBox[{"Legended", "(", 
               RowBox[{#, ",", 
                 RowBox[{"Placed", "[", 
                   RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
             TraditionalForm]& ), Editable -> True], TraditionalForm]], {
        193.5, -189.}, {Center, Center}, {360., 360.}], 
       InsetBox[
        BoxData[
         FormBox[
          TemplateBox[{
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
2xmzC07qF6Azl1nd1kxYlRs4t7RE+H/O6Foc
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$21689#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
UNDjBAc7gxbX1nzxkb7Sk1cFTvA/0FcimA==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$21689#2"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$21689#3"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.1, 0}, FrameTicks -> {{Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.1, 200}, {0., 0.2368381893014983}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
            FormBox[
             FormBox[
              
              TemplateBox[{"\"HV\"", "\"H2\"", "\"AG\""}, "LineLegend", 
               DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> Automatic, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ), 
           InterpretationFunction -> (FormBox[
             RowBox[{"Legended", "(", 
               RowBox[{#, ",", 
                 RowBox[{"Placed", "[", 
                   RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
             TraditionalForm]& ), Editable -> True], TraditionalForm]], {
        580.5, -189.}, {Center, Center}, {360., 360.}], 
       InsetBox[
        BoxData[
         FormBox[
          TemplateBox[{
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  
                  LineBox[{{0.010004081428571428`, 0.3937739229477952}, {
                   0.04689994308572974, 0.9172661861288007}}], 
                  LineBox[CompressedData["
1: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
sPrfP3v1r8Ln/v2XA7d8aSW194fRf3JIiAI=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$37105#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  
                  LineBox[{{0.010004081428571428`, 0.49660062409199723`}, {
                   0.03507192761658, 0.9172661861288007}}], 
                  LineBox[CompressedData["
1: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
riXy29ISF2OvvnIoLED4H3Gsv5g=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$37105#2"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$37105#3"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.01, 200}, {0., 0.9172661861288007}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
            FormBox[
             FormBox[
              
              TemplateBox[{"\"BD\"", "\"CM\"", "\"AA\""}, "LineLegend", 
               DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> Automatic, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ), 
           InterpretationFunction -> (FormBox[
             RowBox[{"Legended", "(", 
               RowBox[{#, ",", 
                 RowBox[{"Placed", "[", 
                   RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
             TraditionalForm]& ), Editable -> True], TraditionalForm]], {
        967.5, -189.}, {Center, Center}, {360., 360.}]}}, {}}, ImageSize -> 
    Large, {PlotRangePadding -> {6, 5}}, ContentSelectable -> True, ImageSize -> 
    Large],StyleBox["\"Attack rate\"", StripOnInput -> False],StyleBox[
   "\"LN\\!\\(\\*SubscriptBox[\\(\[Integral]\\), \\(\[CapitalTheta]\\)]\\)\\!\
\\(\\*SqrtBox[\\(det\\\\ \\\\ I \\((\[Theta])\\)\\)]\\)\[DifferentialD]\
\[Theta]\"", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], 
       BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], 
        BaseStyle -> {FontFamily -> "Arial", 20}, DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    GridBoxSpacings -> {"Columns" -> {{3}}, "Rows" -> {{0}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"3", ",", "0"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", "20"}], 
           "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], "}"}]}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{
  3.796175619673294*^9, {3.79617567751947*^9, 3.796175708714641*^9}, 
   3.7961758050689487`*^9, {3.796175874626905*^9, 3.796175889721938*^9}, 
   3.796727863266328*^9, 3.796727957713179*^9, 3.796732490661623*^9, 
   3.796748950544079*^9, 3.796749010535569*^9, {3.796749040872921*^9, 
   3.796749056097867*^9}, 3.7967491007156973`*^9, 3.796749143336748*^9, 
   3.7967492204296217`*^9, 3.796749261480402*^9, {3.7967494036263437`*^9, 
   3.796749433003957*^9}, {3.796749583622953*^9, 3.796749590350462*^9}, 
   3.796749680333535*^9, {3.7967497339438868`*^9, 3.796749762556945*^9}, 
   3.7967498798534727`*^9, 3.796750658070445*^9, 3.796760714411499*^9, 
   3.796918747276516*^9, 3.796921566402261*^9, 3.796921680852386*^9, 
   3.796928407867881*^9, 3.79693108997118*^9, 3.796937510912303*^9, 
   3.796945888303831*^9, 3.8004890214631653`*^9, 3.800489507498128*^9, 
   3.8005426973643208`*^9, 3.800552317940415*^9, 3.800578584237507*^9, 
   3.800859804339787*^9, 3.801231885889929*^9, 3.801254689891569*^9, 
   3.8025248270113497`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"fd1a3d5d-84ea-4685-bd2e-f2a29d466568"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.801223888618012*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"e1ad5102-069e-4f0b-862c-5368163da390"],

Cell[BoxData["\[AliasDelimiter]"], "Output",
 CellChangeTimes->{3.802524827653886*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"5c45272c-3a1e-427b-8049-124432418447"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partial numeric Integration - Non-truncated \[Lambda]", "Subsection",
 CellChangeTimes->{{3.795133285932665*^9, 3.795133294711598*^9}, {
  3.795280876157503*^9, 3.7952808766935167`*^9}, {3.79528092598785*^9, 
  3.795280950913701*^9}, {3.800486164343046*^9, 
  3.800486168288897*^9}},ExpressionUUID->"8e00745a-f4b3-4372-81d3-\
0db4b20caa1f"],

Cell["\<\
Fix ' a', integrate square root of Expected Fisher Information Matrix over \
remaining parameters , and take natural log.\
\>", "Text",
 CellChangeTimes->{{3.795280928852249*^9, 3.795280932318766*^9}, {
  3.795463246906925*^9, 
  3.7954632510188007`*^9}},ExpressionUUID->"2be96c5c-de5c-42bc-96f1-\
4b2cc915683a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ParmRangeB", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"ParmRangeA", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"precgoal", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pnk1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"aNIntH1", ",", "\[IndentingNewLine]", "aNIntR"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<H1\>\"", ",", "\"\<LR\>\""}], "}"}], ",", "Above"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.795136029707966*^9, 3.795136047222406*^9}, {
   3.795136122100698*^9, 3.795136176777763*^9}, {3.795136218905382*^9, 
   3.795136287773806*^9}, {3.795136380233365*^9, 3.795136425894341*^9}, {
   3.795136609264336*^9, 3.795136639797893*^9}, {3.795136730698585*^9, 
   3.795136731850418*^9}, 3.795136773010551*^9, {3.7951368051694317`*^9, 
   3.795136816184485*^9}, {3.795136901895876*^9, 3.7951369045958557`*^9}, {
   3.7951372535272827`*^9, 3.795137253629999*^9}, {3.795137485814694*^9, 
   3.7951375029884443`*^9}, 3.795215173159231*^9, {3.7952180059577417`*^9, 
   3.795218053754533*^9}, {3.795218151152787*^9, 3.7952181519426937`*^9}, {
   3.795280861319553*^9, 3.7952808615262327`*^9}, {3.795281021367886*^9, 
   3.795281021575576*^9}, {3.7954632855547333`*^9, 3.7954634452741423`*^9}, {
   3.795470424854619*^9, 3.795470434540783*^9}, {3.795476034457754*^9, 
   3.7954760420396423`*^9}, {3.7955388793856163`*^9, 3.7955389321427*^9}, {
   3.7961571033107147`*^9, 3.796157144109008*^9}, {3.7961613256941566`*^9, 
   3.796161435794482*^9}, {3.796161586189435*^9, 3.796161586812489*^9}, {
   3.7961685815119343`*^9, 3.796168621877433*^9}, {3.796168651981846*^9, 
   3.796168655580513*^9}, {3.796175824250135*^9, 3.796175828312983*^9}, 
   3.7961758715999107`*^9, {3.796241588308408*^9, 3.79624160141306*^9}, {
   3.796241638212008*^9, 3.7962416387081757`*^9}, 3.796241785311227*^9, 
   3.796727889591301*^9, {3.8004861242901573`*^9, 3.800486177806629*^9}, 
   3.800562259477647*^9, 3.8005623144596653`*^9, 3.8005793979099207`*^9, 
   3.8064883088089*^9},ExpressionUUID->"26c047ce-4192-4ee0-a55d-19c5dae52881"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$84122#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$84122#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 3.521363407904759}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 3.521363407904759}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 1}, {3.521363407904759, 21.047770543942676`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"H1\"", "\"R\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8008415153293123`*^9, 3.801254736892462*^9, 
  3.802524827792246*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"284bdd0e-246d-4fe6-b758-390cbabdc00e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnk2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"aNIntHV", ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntH2", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntAG", "[", "a", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<HV\>\"", ",", "\"\<H2\>\"", ",", "\"\<AG\>\""}], "}"}], 
       ",", "Above"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.79616860999851*^9, 3.7961686980270033`*^9}, {
   3.7961753209673967`*^9, 3.796175321573962*^9}, {3.7961753927881193`*^9, 
   3.796175415699346*^9}, {3.7961757941393337`*^9, 3.796175798322241*^9}, 
   3.796175869855794*^9, 3.796241786534403*^9, 3.800486126625565*^9, 
   3.800562258013567*^9, 3.800562305956307*^9, 3.800579397021989*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"ee85f192-b9ae-4ed6-a046-e4664f10c6cf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvZf/8d/HVS32dc/uvTs+1dJBwEp0TrXBFDjf6Y2F
ZavyPDi/WCK/gOv2Sjj/yMm/DKu/bYTzHZTkhdqfbYPzz3yabtfkuAfOv3v9
25L6BQfg/Jgi3x1nQw/D+cGzLr4v+3cUzq+2OCKWWHkCzl89Ken0Lc3TcD5P
cn7+1DVnEe57cGV2qOAFOD/l7XE3jfSLcH6eaVGm9LJLcH5N9Kega/8vw/lu
Hp3n7IKvwvmaBdcPHu+/hgifst/VEs+vw/n826+t7VS/CecLXWtfdqjpFpx/
abe/4crrt+H8VXfOGW8QvQvnt91W/luXdw/OrxI1sMvbcB/OF+1e2cFa9gDO
z/+19Kq54kM4P4y9Lu7XAQTfnvngKYW8Rwjzk/gZ5CQew/mR8ZaFq7ch+Hre
547OSXoC5/dfsQuTY34K5/sd3LW+bAGCzz934Rsj72dwfqxYSmr9KwR/bd3E
g/rTn8P5nS2zIgssXsD5h9+u29V+DcH/76r3n6npJZx/3Lqznk/pFZw/UcH/
ce15BH9nhoLAkcrXiPj0O1sxS+INnK+q/PTIlSMIfsbUGz7zU9/C+ZzZ1+c6
ML+D89foO15yXYfg357Y5nTb9z2c//3etdlvlyH4wjrqX///R/AB39nbHQ==

          "]]}, Annotation[#, "Charting`Private`Tag$84271#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3MKq9ZQF5MmfKyvUfdGzJC/l/wEykjVy
          "]]}, 
        Annotation[#, "Charting`Private`Tag$84271#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EjoqzS9b8MzYovhteZmEUzThZVue/weITQaV
          "]]}, 
        Annotation[#, "Charting`Private`Tag$84271#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 1}, {0., 25.58508198682693}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"HV\"", "\"H2\"", "\"AG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.800841533351935*^9, 3.8012547581853037`*^9, 
  3.802524834558897*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"dff639c3-e969-4592-a080-bd03fdd58fae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnk3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aNIntBD", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntCM", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"aNIntAA", "[", "a", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0.01", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<BD\>\"", ",", "\"\<CM\>\"", ",", "\"\<AA\>\""}], "}"}], 
       ",", "Above"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796168631597066*^9, 3.7961686344933357`*^9}, 
   3.7961686653177137`*^9, {3.796175456226139*^9, 3.796175460176566*^9}, {
   3.796175811690637*^9, 3.7961758685679293`*^9}, 3.796241788022134*^9, {
   3.796242932745275*^9, 3.796242935128635*^9}, {3.7967278601042013`*^9, 
   3.796727862326756*^9}, {3.796748256199194*^9, 3.796748270254163*^9}, 
   3.8004861372253323`*^9, 3.8005622573740396`*^9, 3.800579396110374*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"6c5fbfd8-00b2-491a-b65f-b2e5bf7635d4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$98021#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
xeF/hw1TdA==
          "]]}, Annotation[#, "Charting`Private`Tag$98021#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$98021#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 10}, {0., 79.75971869579705}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"BD\"", "\"CM\"", "\"AA\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8008419522793827`*^9, 3.801255204724112*^9, 
  3.802524958643938*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"2d921797-d029-481b-9cff-5554fb6733c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pn", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pnk1", ",", "pnk2", ",", "pnk3"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", "\"\<Attack rate\>\"", "]"}], ",", 
      RowBox[{
      "Style", "[", 
       "\"\<LN\!\(\*SubscriptBox[\(\[Integral]\), \
\(\[CapitalTheta]\)]\)\!\(\*SqrtBox[\(det\\\ \\\ I \((\[Theta])\)\)]\)\
\[DifferentialD]\[Theta]\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "20"}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/FisherMatrix-2_Output_partial_numeric_a_NonTrunc.pdf\>\"", 
    ",", "pn"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.796161591756052*^9, 3.796161593499509*^9}, {
   3.7961756731360893`*^9, 3.796175708269072*^9}, {3.796175884455531*^9, 
   3.796175900973771*^9}, {3.7967490025062943`*^9, 3.796749062774382*^9}, 
   3.7967490990591373`*^9, {3.79674913198139*^9, 3.796749142579796*^9}, {
   3.796749217842654*^9, 3.796749219496274*^9}, {3.796749257896325*^9, 
   3.7967492860772867`*^9}, 3.7967493177807713`*^9, {3.796749399633634*^9, 
   3.79674943239974*^9}, {3.79674958232307*^9, 3.796749588657757*^9}, {
   3.796749630762241*^9, 3.7967496708625727`*^9}, {3.79674972461436*^9, 
   3.796749761979142*^9}, {3.7967498778406267`*^9, 3.796749878694523*^9}, {
   3.796750566398038*^9, 3.796750567057413*^9}, {3.796750656537052*^9, 
   3.7967506568406277`*^9}, {3.7970161004982*^9, 3.7970161046487303`*^9}, {
   3.800486194958091*^9, 3.8004861977099113`*^9}, 3.800486779466518*^9},
 CellLabel->
  "In[139]:=",ExpressionUUID->"002d267f-8e6e-432f-9d61-5ff22e4bab6a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       InsetBox[
        BoxData[
         FormBox[
          TemplateBox[{
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwVkHk81Akfx0U2Woxl+Y0jDLkaY8wRtYvvdySS2BV5lA7GuCpHtWm7JFuE
VrGLyhWFqGSRI5TZmZDIY1yLyFFC+BX10IHt+ePzer/er9f7rw+NH7bdX1pK
Sir06/7PZ4mpm020y8BktqbkB4X1OKrrIJvLLgN7m50rcpe5KB2RKH81tBw2
ffhPYd0uLgo+S457RZfDdtegvJmfudgQRUwSqeXgF/RRyHDkYnzC9ebUunKQ
rXzT1cXhokpOacKfCvdBvBAmeaLIRVpLt+LlovvgJhgSGoo5iPq6KrFjFTDu
pKsztpGD0bLtS7OfK+CK8gh/xoKD4vHoN3u/q4TICT8TGRMOOt0bE1taV0Jr
mdXfbuoc3G5dfGwsqRJMSzatiZpjo5+nzcBmmyq4qtT/Vr6EjTHx3rdW/lkN
XNWjHkYsNjaFKKaEF1ZDm6YbedGUjavdHp19/rAavnQbyS3S2HiJMPAun6gG
5SVz/48qbLxyc1JRAA9AVufbMp8PLCx8ePyIaPIB1GqOR/XWsLBlNs02mlcL
GQt2aouuLKx3esyO2lELY/rnnwxtYWH59VmjyOBaGLb/9K7ZjoXpri6UE0m1
QI1yPFxqycL9RdJDh4ZrwYD//mOLDgvl+CFnfc/WQbDDniajtxa4qd1OjMKH
wCv/fNo4zQIHev5388z1ekj1mB19Pc5EB7b9gMfteihJ6++MHWRiycUktXUV
9bDq1vIAq5OJ53hmMZ1P60GytnX+xiMmmt32DTSdrwe1gK1xS6lMPBXZYtrh
IoSP8TdSzjgyUdswt9josxCMeeezne+Z4+7DLlWtO0QQnft+l3UaA79E0/eE
+4hgZenUdu1LDMz4Q15a9YAIlo7lL0jHMvB5+WNnrygR+Dq/MXkZwUDveZsX
I0Ui2GfpSfvgycBdp8y/WVj+6gPxrU5UBnrFUDz0i8RgFbfR4ly2Gbpfaycj
lh7D/f0BvhkP6dgiCLnCl2uA29K/FOyuoqM9U57nqtIASs2xa2mldLQUY7Kh
UQP0NgyUVOTRkTpzj9vp0gA8Ue4l1d/pOMBLPM7KbIANvdSgy7vpGDixVWbq
x0ZgaGyQ+nVpHZ7cIFb3Pd4EKgJVHV2XdXg7mf+0z/QpxHd2qOrNm6CCX1hY
yp1WCCisozeNGOORoc70Hd/9F076bdsxN2eEgulGB5PAdkgyfqknr2SEoesP
B2vlS+BROqfRzNUQT3nPbu9e7gDRhacXWpPXosOWuGe27l3wiLts9cuUAZqG
9wgbL3XDaAFlvmqvASpHfD5Jfd0DDMmq9vR2faRUdt+NM+6FBmujeEsvfVTp
js3/O7oPbhBtd6IGaSip+YlV2NMPRLFxrjiMhkXPn3FK1AYAFdrq/Ck0jOk3
WIwMHQTFOzVmBXf18ISahW1oyQvYs0kjT9VLD9USCi/IRgxByH31zC9yehj2
Ka/LijYM5sFBdN1wXfRcFbn3U/0w1Kw4aRM0rIMgI2zWCx2BLOv2tkVXHYzh
U6R0qKOw8DI7YKRhDe7ct/HQ7YpR4P1VJs90XYPmzs8eZ/BfQn2bR2NiuzZe
6rT11JF5BZax4b0FfG10FT64F3H9FQTOSdMLPmkhJTNniu08BhkJR+PLErVw
j7rA/8zkGJwLLCqzM9fCu5FJQmbaawieqxlWbNbEuHPXdoZvGIcTT+ypW8M1
UTRd/CC2exyOJEuas7Q0cXmz+bJ09AR4M/L3OIo0sPHHuDNK+pOgnyOfOnFE
A5P0fho93TYJ6ydWOFBoGlgdpKcsPv4GAkY4YZUSKoa6tv56jToFAp1qP5OL
VDQ0eCXuFE9BRnn2Q1s7Kgal/LMt238abnJmNBOWCZQ/0JOJMjOAl8c47HoC
7zB5ks3FMzDqPtGXe5rA/qQYu34XEuomuo8d5RFo/71b142fSciaPth3EL/2
qVpBB91J4CVt8REAgZHpJb8vepGwKPiry92GQP28vn90BSQkRocGcDcSGFxl
HiY4QYLRrSbqFwsC5we706fzSQh4tzohT49AH98c84pCEqbtPR1zdAlsGj0g
jLxDgjLnnWGmDoHXxqVeU0pJ2F8775SiTaDt7Do2u44EaZWjZrFUAs/LnmmK
6CDBtvmmxyFlAmdinbyhmwQ8GcAOoxDoufr7mVW9JNQ4SLFDlAg0oRSqXh0k
YSwjKzVYgcAWasfemgkSPkoq3/vJEbg+PfPdb1MkNHceGOKvIjBrTdC5bSQJ
P3xbN+37DYHh+ouFA+9JKGrVCPFZSWDvzUbr/HkSqDXqL/bJEGhnnNwW+unr
H9l/HN4nTWBR4W6+1SIJOew4430rCFQ1M/6wvEzCb/S3i3ulCPwXC28tQQ==

                   "]]}, Annotation[#, "Charting`Private`Tag$84122#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$84122#2"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.01, 3.521363407904759}, 
              FrameTicks -> {{Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 3.521363407904759}, DisplayFunction :> 
              Identity, Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.01, 1}, {3.521363407904759, 
                21.047770543942676`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
            FormBox[
             FormBox[
              
              TemplateBox[{"\"H1\"", "\"R\""}, "LineLegend", 
               DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> Automatic, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ), 
           InterpretationFunction -> (FormBox[
             RowBox[{"Legended", "(", 
               RowBox[{#, ",", 
                 RowBox[{"Placed", "[", 
                   RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
             TraditionalForm]& ), Editable -> True], TraditionalForm]], {
        193.5, -189.}, {Center, Center}, {360., 360.}], 
       InsetBox[
        BoxData[
         FormBox[
          TemplateBox[{
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvZf/8d/HVS32dc/uvTs+1dJBwEp0TrXBFDjf6Y2F
ZavyPDi/WCK/gOv2Sjj/yMm/DKu/bYTzHZTkhdqfbYPzz3yabtfkuAfOv3v9
25L6BQfg/Jgi3x1nQw/D+cGzLr4v+3cUzq+2OCKWWHkCzl89Ken0Lc3TcD5P
cn7+1DVnEe57cGV2qOAFOD/l7XE3jfSLcH6eaVGm9LJLcH5N9Kega/8vw/lu
Hp3n7IKvwvmaBdcPHu+/hgifst/VEs+vw/n826+t7VS/CecLXWtfdqjpFpx/
abe/4crrt+H8VXfOGW8QvQvnt91W/luXdw/OrxI1sMvbcB/OF+1e2cFa9gDO
z/+19Kq54kM4P4y9Lu7XAQTfnvngKYW8Rwjzk/gZ5CQew/mR8ZaFq7ch+Hre
547OSXoC5/dfsQuTY34K5/sd3LW+bAGCzz934Rsj72dwfqxYSmr9KwR/bd3E
g/rTn8P5nS2zIgssXsD5h9+u29V+DcH/76r3n6npJZx/3Lqznk/pFZw/UcH/
ce15BH9nhoLAkcrXiPj0O1sxS+INnK+q/PTIlSMIfsbUGz7zU9/C+ZzZ1+c6
ML+D89foO15yXYfg357Y5nTb9z2c//3etdlvlyH4wjrqX///R/AB39nbHQ==

                   "]]}, Annotation[#, "Charting`Private`Tag$84271#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0nc41u0XAHBllYasUl7z8Xy/RGZKGefQzqiset+kiJKyS6GQGZU9yooy
sh+S9SLjIdnKaqhEdp7yKiL8vr8/7utcn+u+r3Of+z5H0srRyGY1GxtbH7X+
H6t4h5aGPPzBYKogh+udIH4++jxOcFsA2HnE/fTZJYQcgUHKB8oDYD5wSb0g
XAiP/pGzyZgLBEEfk8Fb2puxd+xqq+3VYEiIdHHi8t2Cv2mHLjwUCAHG4fYo
vfYt+NfZrWzNRSHA7XjyVr+wMFr1VKnK/bgLfEbfd3NkCeN0LVfCN/tQUG/O
2r2tdCvyL/XvFNsQBmds70VsnduKauo57Ya5YdCzkebfqLYNtfvIVaeuhYNy
ZqS9UcE29Ddo3Vn+LAKMFxIVNKNFcNNeoURPpWjgfCvo7icvio9PLo8J+ERD
38lCR+fToqh6bVQttyMaZMLFAkOCRdGMUd7xwSEGElLC9pkMiWIiYcGunRcL
TK2t3b33xVBh/6HjvX9ige9M4xZGiRi+sFRKctCPAzVLgd0fPorhl8TVux9N
xkFezvlPWjvEUVYg045t+0MYeO6lE1MnjhVK4aUP3B/Cstq/fVdHxFHf0J1D
+dVDiDbT7P7CIYFOwXrJlrbx0D2Zv3yelMCSFVZXXUYCcNg/jjK6JIG6U+p7
AmjJUGzjdEfgiwSa3u673uGeDKkbz2pd/CGBtpvdSrZ2JoNAideKN5sk3sdn
qvk3H0FZg3kvp5gkXmneHDdplwLppecm/c0ksUQsIkKQmQo74rmWD1RLIlz6
zNjDSoWij+8SXJslsemZYqfFtsdQbi2qer1XEt8fbt+Y5fQYRP77+oB9WhLZ
XNfd0xJ9Arvc+CUPiUjh0ZcBgRfc0qDw0ysVYUcpfMPXk343NQ3WjJgOLN2Q
QnNz6QZGaxqYZeT4Mn2l0PFHHfuiVDr8EX/0/VeMFEaLsN0O60iHZ6c41qxU
SOFHRw/PMplMUFXQ+MTNRsOLFa/iB4wzIclP5av6Ghp+59hasdqb2l/ptjDa
REP2+NJ5/Z5MMPG/p4oSNJRhzl4bvP0UGM9uJ/IBDV2FHZ143mdBuVYBR98N
Gp47+jzZmD0b8kLE3+z3pqH+zcXWRLlsGE66lP04gIbSn4NkFW9mQx1/yEnF
SBr2ZqZ8MRbNAaW8obzIbBqq735tknQ2F9I3BCjl91PnLwn7jQTlwsXgcQ21
jzTkS7AoVGTkQmdFmnPBEA0nlic21LHlwdq901xe0zRMaGR/OZKaB0Oc/52+
wy6Ny6Zqe5SG88EyjBbhKieNE0GeF93XF4CUZcFbUJLG3vLamLqdBfDkzP7s
VWrSWCBqOGMSUABGResuXNCWRobLsx5NAQYciX9SWXpcGq32toZaFjOgoa9y
JspVGpmvlthyfhVCjeTIoakiaSSO6Trb8RRBwiWfh/dLpPFOd+CgrFgRWH0q
+U1WSKP+J966pweKIEDVTvlwrTR2z0r6ZUQXQfcHV2/1DmkcEj/I+VjlGVhc
dn0zOi6Nq91C1z50KIb0p+rJrG10tF587X7KtxjCZ9Z9eS1Kx0afLRNbYovh
074UqUIJOobcTWmOrSoGmRCNFguCjvypRXej1z8Hg6H5tT7KdJRs7d0Qnv0c
SBElneGDdEQpcf6gkRJonUuovulAR1/OruWZxRLgVLS6xe1MR+aY76QFXync
+HX47X1XOh4pGGHu0iwFl7i1Ufdv0NFIM//6SEQphJ9dpfyPLx3Pm2kNHNAq
gxYfRr1SDB0DQ04/5YguBzGTjlL+Mjo22W+IccoqhxNkiAetgo48J17c/lBd
Dtv05OeUKukYtoV2uni8HLp01DR0a+j4IG1igzVUwOxW1efaTXTMqnZ3rZ+o
AJuYYxfS++jYOhOn7atTCec54zNNZ+lYc6RBxce0EjIXPHS+/aRjccoM4XWp
Eor0ZnN95+iYYGjA6xFRCVdizddmLtDRLnv1Z+fBSnA2v3m0l43ANVb2ty1v
V0HPqsOWr9cTuK9Ll4m11ZBWEf/gHxqBu2ScyrR7quHa6q/MZ9IEbvdOytUc
r4aKX8G71hEE8u+Yj1bnewGhr9V/FcsQ+PlOno2S5QsQcviuMbuDQJC4xx7O
VgMss/tO0uoEDvT9SvNOqYH2GI88Cz0CD6rsHzDJqQFPntU5yfoEMu5FCG0v
qYHoZhuuAQMC/XXkA7tbaiD4fewXk+MEyudYXpSdqwF+xvRtZVMCb3q1yr4x
qAWRZpmuFAsC/6I/zicWa2Hj1Rk+OycCA71ZI4ucdeCe2r/e05nA7281xbs2
1cGhL2fLQlwIZIb2hXkSdRA5vGt7xlUCr8yvd+48UQd1+ZolbTcIrGy5rurx
tA4+nJ8/MuhDoLmLQVmbaT14yRL6MuEE/vGVO+N0rh7C7Uo38EYQmBi1drXA
5XqQO3OraZbyh+IGvVM+9bB4fKtSVRSBp+e0Pn3Jroc1g7//04kj8J+bClzz
K/XAWG2c+VcygacCeU2kspnwX136mEQOgfOx3+aZxUxwaLUrGaf8ILMl6eIL
JgiUHskpzCWwvyloNLebCRven+GFfAJPrmPz3L3CBH652KFjhQSahX9P1Tdp
gEjus81HSwk0ju9iuS03wEOe1tC8OgJbre0fWK1pBEayX+mJegL3K67VMeRv
hCqtHt2flHcxMZJONIKdvJ//3gYChacLdnYbNEJGoE1z1Uuqnzqh7spJjTCm
2rTxaSuBF8ePsk9pvAS60XDOpl4CPdWZmy3dmyC6uJ/91CiBw4WxS1L+TfBk
4Pmlr5T15S4ND4c2AT226LDLGIFiYhuLbNOaYMi9+WrIOIG17KcMnDqawMHZ
5UHxJIHcHZN+3vRXsNAznfqdRWCUjcCPpK5X8NPtsMz6eQJzIq1a3sm2wOT4
7x0/uEicaph5/lW1BQZtZrf/w02iwm/flO9aLbBuYamrjnLR2SfXuIxagE2i
WjxqDYll8sPiKh4tYBNixFTkIZHZaHM1uLkF9nds8ft7A4kfFmxF1S+3gnO2
5iFnARLXn3d0jMltg3cij8fqxUj01w9vtC9pgxmhsjPC4iQuqhWKHqxpA4XY
qqgrlCfW/Nfy600bjJ2P2ycoQeLLfDeZU4ttEFZ1rfycJIm+C7cGtx1th86P
x3ZO00j8HXHPOGW0HZa3b+QZkCHR9XN3gilfJ2zOY1hvViExI9dnJHdzJwg9
fvvWivK7G/LKHH91wqqIFcECyrp8/o1FRCc4mSh/PKhKIr+u6g9eTcqyaXWu
O0lkPIk42HyhE3Lmgrnqd1H/dcHwh3ZlJ7C9Nlu1R4NE628vD8pc7IKdM6tE
QveR6KDmckkk4zUMs794sv8EiTdPzxj1rryBP1w354fPkHjwcHC7tnEPCMrp
6V23JVHWqa/2ZVgvBIewR6w4kbjJbdFTeLQP5Hn7lXndSeQt7c0LJt+CxqTc
eLo3VV9vUEad7ztoE8sWYgWQ+PrfY8pZfe9BrdMIz90lMftDuypDaABucMUK
jYSRGPietuTl8BHi2XHwcDSJHkJK2g6MT/A3+59HP+NIFLqbdYfT7TM0+5kf
VE8g0XEhvWe35CBY96pwXUkm0Yzby2KhZhCmzYLMpVJJBPbaZgmHL6Dllwgd
T6j8VrxsYsJDMM8ppaWaQeLfZ/c455QMwYerM4e0n1LzpNfekGg1DPrbdKUP
ZZMY1q1tJsb+FWQX2+25ckk0rK0ocEv5Cuz2R+QS86j3JqVOqeiNQImLgr1q
AYlnNlvbeE+MwGdTV/soBol5XhG1inGjYBXy1fNnIYnB/vF/O6mPgenejRky
z0is/5ZfEdQ7BiPrZzt1iklcOaCwstp3HAbdJi5bPKfmSSPYe6PUBDgpxkea
lZAYIXFs6FbHBBQ5/NxqVEpiua3EJqb7JPidXjurXkb107DtRrzwFPwJdxBn
LyeRTvvK7GZOgfyRR5JdlG1j+vUf2XyD+T0V3IEVJK693JeE7NNwMqDYY8e/
JOYq6rw+kD8NGs3HRvspv48I1H1vwIKQpN8zjpUk7hc80fPkOAua9r73daGc
Gytie8WYBUd/iPJfo+yVwLi/dIoFDddfKnhQlkp/1y9uzQKfAMY5f8qXyhQc
rT1YcH03d+YDynMfexO+ZbBg8znyRQ3lc5apCiVZLGBphmrUU24aulzrlcsC
OXfz0gbK8WNso7xFLDj9RjGvmbL2zHYVlSoWTFmVRnRTDuD0bnJ7w4K2E1e1
xyhPBx05Db0s0Bi5WDhB2YxHcJr7LQuMPzXQvlGW4c0SePiRBTura7lmKLcK
v7H4d5wFZpbVDYuU1RKSfvhNsWC/Ic/OZcrJorb++iwWGIrUpbJVkegktZQ1
MMsCHn43T07Kb9NeambMsaD8ocsoN2VdMrLDYYEFnlXvjXgoZ2eZW+1eYsG2
3MKq9ZQF5MmfKyvUfdGzJC/l/wEykjVy
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$84271#2"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
EjoqzS9b8MzYovhteZmEUzThZVue/weITQaV
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$84271#3"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.01, 1}, {0., 25.58508198682693}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
            FormBox[
             FormBox[
              
              TemplateBox[{"\"HV\"", "\"H2\"", "\"AG\""}, "LineLegend", 
               DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> Automatic, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ), 
           InterpretationFunction -> (FormBox[
             RowBox[{"Legended", "(", 
               RowBox[{#, ",", 
                 RowBox[{"Placed", "[", 
                   RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
             TraditionalForm]& ), Editable -> True], TraditionalForm]], {
        580.5, -189.}, {Center, Center}, {360., 360.}], 
       InsetBox[
        BoxData[
         FormBox[
          TemplateBox[{
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$98021#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
xeF/hw1TdA==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$98021#2"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1: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
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$98021#3"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.01, 0}, FrameTicks -> {{Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                 Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.01, 10}, {0., 79.75971869579705}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
            FormBox[
             FormBox[
              
              TemplateBox[{"\"BD\"", "\"CM\"", "\"AA\""}, "LineLegend", 
               DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> Automatic, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ), 
           InterpretationFunction -> (FormBox[
             RowBox[{"Legended", "(", 
               RowBox[{#, ",", 
                 RowBox[{"Placed", "[", 
                   RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
             TraditionalForm]& ), Editable -> True], TraditionalForm]], {
        967.5, -189.}, {Center, Center}, {360., 360.}]}}, {}}, ImageSize -> 
    Large, {PlotRangePadding -> {6, 5}}, ContentSelectable -> True, ImageSize -> 
    Large],StyleBox["\"Attack rate\"", StripOnInput -> False],StyleBox[
   "\"LN\\!\\(\\*SubscriptBox[\\(\[Integral]\\), \\(\[CapitalTheta]\\)]\\)\\!\
\\(\\*SqrtBox[\\(det\\\\ \\\\ I \\((\[Theta])\\)\\)]\\)\[DifferentialD]\
\[Theta]\"", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], 
       BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], 
        BaseStyle -> {FontFamily -> "Arial", 20}, DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, BaseStyle -> {FontFamily -> "Arial"}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    GridBoxSpacings -> {"Columns" -> {{3}}, "Rows" -> {{0}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"3", ",", "0"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", "20"}], 
           "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], "}"}]}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{
  3.796175619673294*^9, {3.79617567751947*^9, 3.796175708714641*^9}, 
   3.7961758050689487`*^9, {3.796175874626905*^9, 3.796175889721938*^9}, 
   3.796727863266328*^9, 3.796727957713179*^9, 3.796732490661623*^9, 
   3.796748950544079*^9, 3.796749010535569*^9, {3.796749040872921*^9, 
   3.796749056097867*^9}, 3.7967491007156973`*^9, 3.796749143336748*^9, 
   3.7967492204296217`*^9, 3.796749261480402*^9, {3.7967494036263437`*^9, 
   3.796749433003957*^9}, {3.796749583622953*^9, 3.796749590350462*^9}, 
   3.796749680333535*^9, {3.7967497339438868`*^9, 3.796749762556945*^9}, 
   3.7967498798534727`*^9, 3.796750658070445*^9, 3.796760714411499*^9, 
   3.796918747276516*^9, 3.796921566402261*^9, 3.796921680852386*^9, 
   3.796928407867881*^9, 3.79693108997118*^9, 3.796937510912303*^9, 
   3.796945888303831*^9, 3.800486514022455*^9, 3.800489040029694*^9, 
   3.800541847094657*^9, 3.800547939773658*^9, 3.800562827806592*^9, 
   3.800841952422138*^9, 3.801255204864097*^9, 3.802524958776155*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"7c69c4d8-4a7b-4483-a0f7-5abb3f668bc6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Investigate better cut - points to avoid singularities", "Section",
 CellChangeTimes->{{3.800643424788253*^9, 
  3.8006434513266897`*^9}},ExpressionUUID->"028917d6-e9a1-45ac-817f-\
1b8965c92eb2"],

Cell[CellGroupData[{

Cell[BoxData["\[CapitalNu]vals"], "Input",
 CellChangeTimes->{{3.800491661649228*^9, 3.800491665978318*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"84fc4031-db73-476b-a147-68ea74524093"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "8", ",", "16", ",", "32"}], "}"}]], "Output",
 CellChangeTimes->{3.800491666256095*^9, 3.800541847853303*^9, 
  3.800547940537559*^9, 3.800562828604286*^9, 3.8009930321833677`*^9, 
  3.802524959238646*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"1a98d46d-4e11-4437-b37b-8c8a4909182d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pvals"], "Input",
 CellChangeTimes->{{3.8004916683551683`*^9, 3.800491668866248*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"76b76eda-7c31-453d-8091-e7bc041face9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.8004916691443167`*^9, 3.8005418478917103`*^9, 
  3.800547940574885*^9, 3.8005628286429453`*^9, 3.800993034852578*^9, 
  3.802524959273582*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"5062c4f8-52d8-46df-a696-57368b662dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "DetH1Trunc", "]"}]], "Input",
 CellChangeTimes->{{3.800643782862059*^9, 3.800643787308868*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"b71e51bf-930c-42db-ae8e-35683912aadc"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"15", " ", "a"}]], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"5", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"10", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"16", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"10", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"20", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"32", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"20", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"40", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"32", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"64", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"40", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"80", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"80", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"160", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.8006437878808126`*^9, 3.8009930364166813`*^9, 
  3.8025249593666477`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"1ef34834-1137-42c7-884a-0476edc4373e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "DetRTrunc", "]"}]], "Input",
 CellChangeTimes->{{3.800491704929062*^9, 3.800491705312557*^9}, {
  3.800643741407604*^9, 3.800643741702715*^9}, {3.800648630547391*^9, 
  3.800648632530464*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"6e115633-e0bf-47be-bbf5-7d6abcfb73fb"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"5", " ", "a"}]], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}], "+", 
     RowBox[{"16", " ", 
      RowBox[{"Boole", "[", 
       RowBox[{"0", "\[LessEqual]", 
        RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.8004917056200733`*^9, 3.800541847841611*^9, 
  3.800547940526659*^9, 3.8005628285919952`*^9, 3.8006437424132977`*^9, 
  3.800648635677487*^9, 3.800993040186646*^9, 3.802524959466591*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"e6df0408-ec91-4683-9a21-fcff0ee43bf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "DetHVTrunc", "]"}]], "Input",
 CellChangeTimes->{{3.80064875139198*^9, 3.800648774102027*^9}, 
   3.800993048821334*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"eb4c9487-e6b8-473a-813b-491eab7e1ca6"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", 
  SuperscriptBox["2", 
   RowBox[{"2", "-", "m"}]], " ", 
  SuperscriptBox["5", 
   RowBox[{
    RowBox[{"-", "2"}], "-", "m"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"256", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"32", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"256", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"512", " ", 
     SuperscriptBox["5", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"10", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"20", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"20", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"1280", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"1280", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"2560", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "-", 
    RowBox[{"20", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"1280", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"1280", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"2560", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"1280", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"2560", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "-", 
    RowBox[{"5120", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", "5", "]"}]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", "m"], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"3", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"10", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"20", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"3", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"5", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"20", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"3", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"5", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"6", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"40", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"3", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"5", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"6", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"7", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"80", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"1280", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"2", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"5", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"4", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"6", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"8", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"7", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"16", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["2", 
      RowBox[{"8", "+", "m"}]], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", "a"}], "\[LessEqual]", "32"}], "]"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"160", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"320", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"640", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"4", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"1280", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"5", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}], "+", 
    RowBox[{"2560", " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"6", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{"32", " ", 
        SuperscriptBox["5", 
         RowBox[{"1", "-", "m"}]], " ", "a"}], "\[LessEqual]", "32"}], "]"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "5", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8009930491801147`*^9, 3.802524959622555*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"f7a5d25b-47bf-4d2f-a712-905664749d85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "DetH2Trunc", "]"}]], "Input",
 CellChangeTimes->{{3.80064377335096*^9, 3.800643780476824*^9}, {
  3.800643943455305*^9, 3.800643946175128*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"f4750319-574d-4a9c-9c7c-94bb7499d706"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         FractionBox[
          RowBox[{"32", " ", 
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{"0", "\[LessEqual]", 
                FractionBox[
                 RowBox[{"2", " ", "a"}], 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "a", " ", "h"}]}]], "\[LessEqual]", 
                "32"}], "]"}], " ", 
              RowBox[{"Boole", "[", 
               RowBox[{"0", "\[LessEqual]", 
                FractionBox[
                 RowBox[{"4", " ", "a"}], 
                 RowBox[{"1", "+", 
                  RowBox[{"4", " ", "a", " ", "h"}]}]], "\[LessEqual]", 
                "32"}], "]"}]}], "+", 
             TemplateBox[{"898"},
              "OutputSizeLimit`Skeleton"], "+", 
             RowBox[{"26843545600", " ", 
              SuperscriptBox["a", "9"], " ", 
              SuperscriptBox["h", "9"], " ", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], " ", 
              RowBox[{"Boole", "[", 
               RowBox[{"0", "\[LessEqual]", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "\[LessEqual]", "32"}], 
               "]"}]}]}], ")"}]}], 
          RowBox[{"225", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "a", " ", "h"}]}], ")"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"4", " ", "a", " ", "h"}]}], ")"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "a", " ", "h"}]}], ")"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"16", " ", "a", " ", "h"}]}], ")"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"32", " ", "a", " ", "h"}]}], ")"}], "3"]}]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{73., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 31084210629258636344, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 31084210629258636344, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 31084210629258636344, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{92., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31084210629258636344 === $SessionID, 
   Out[146], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.800643714178793*^9, 3.800643997008658*^9, 
  3.800993054046114*^9, 3.802524961062887*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"3b652899-c511-42fb-87de-24657cad8ed0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "a"}], 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "a", " ", "h"}]}]], "==", "8"}], ",", "h"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "a"}], 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "a", " ", "h"}]}]], "==", "8"}], ",", "a"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.800993126197115*^9, 3.800993139203003*^9}, {
  3.800993189080414*^9, 3.80099321096605*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"3b425b4e-5855-43a5-a026-ae2f1fb87d2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"h", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "4"}], "+", "a"}], 
     RowBox[{"8", " ", "a"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.800993134027029*^9, 3.800993139732767*^9}, {
   3.800993189726244*^9, 3.800993212488637*^9}, 3.8025249616119547`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"59b39efe-6e04-4477-be5b-e6ee28a4c031"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"8", " ", "h"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.800993134027029*^9, 3.800993139732767*^9}, {
   3.800993189726244*^9, 3.800993212488637*^9}, 3.802524961642941*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"fbe163ba-dbc2-4e20-a53c-d5bc395a4d57"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Compare non-truncated and truncated Sqrt(Det(FIM)) before integrating over \
parameters\
\>", "Section",
 CellChangeTimes->{{3.800490530856985*^9, 3.800490577772744*^9}, {
  3.8004906826087713`*^9, 
  3.800490719879005*^9}},ExpressionUUID->"8b5529a2-fbcd-40e9-a12c-\
f0b80bfcb9a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DetH1NoTrunc", "=", 
   RowBox[{"DetEFisherTrunc", "[", 
    RowBox[{
    "FisherH1Poiss", ",", "H1", ",", "0", ",", "Infinity", ",", "subs"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[149]:=",ExpressionUUID->"737352d3-5087-4534-aecf-4a8b1aa6f659"],

Cell["\<\
NOTE: If we don\[CloseCurlyQuote]t truncate things then everything is \
identical, but things definitely change upon reducing \[Lambda]max to \
Max[Nvals].\
\>", "Text",
 CellChangeTimes->{{3.799374547788354*^9, 3.799374573069031*^9}, {
  3.7994339515858307`*^9, 3.7994339589334297`*^9}, {3.800406240287795*^9, 
  3.800406252519047*^9}},ExpressionUUID->"829d6374-05bb-4745-a846-\
2abaddde99b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pH1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sqrt", "[", "DetH1", "]"}], ",", 
      RowBox[{"Sqrt", "[", "DetH1NoTrunc", "]"}], ",", 
      RowBox[{"Sqrt", "[", "DetH1Trunc", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Orange", ",", 
         RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}], ",", 
       RowBox[{"{", "Blue", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799352138967574*^9, 3.799352152669475*^9}, {
   3.799352191826827*^9, 3.7993523673634977`*^9}, {3.799366732740671*^9, 
   3.799366782812234*^9}, 3.799369988928152*^9, {3.799370029790286*^9, 
   3.7993700633270187`*^9}, {3.799370243159878*^9, 3.799370288258534*^9}, {
   3.7993703474452*^9, 3.799370350792797*^9}, {3.799370460910602*^9, 
   3.7993704677017307`*^9}, {3.799370710587698*^9, 3.799370710802099*^9}, {
   3.799370793546833*^9, 3.7993707971559973`*^9}, 3.7993708282316217`*^9, {
   3.7993709108407288`*^9, 3.799370912713422*^9}, {3.799370945560124*^9, 
   3.7993709980456448`*^9}, {3.799371043167148*^9, 3.799371060581955*^9}, {
   3.799371105039177*^9, 3.799371110708858*^9}, {3.799374030108392*^9, 
   3.799374050695136*^9}, {3.7993741037302923`*^9, 3.799374124949483*^9}, {
   3.799374233750486*^9, 3.799374233787491*^9}, {3.799374268875184*^9, 
   3.799374271115733*^9}, {3.79937432853981*^9, 3.799374356429256*^9}, 
   3.799374642306602*^9, {3.7994287526578827`*^9, 3.799428758844068*^9}, {
   3.799433914021573*^9, 3.799433914963208*^9}, {3.7994339824388247`*^9, 
   3.799434016094284*^9}, {3.800400512765314*^9, 3.8004006087593613`*^9}, {
   3.800406005505869*^9, 3.800406094357314*^9}, {3.800406147741016*^9, 
   3.8004062055612097`*^9}, {3.800406274824114*^9, 3.8004062819266987`*^9}, {
   3.800406415675232*^9, 3.800406425872918*^9}, {3.800490777878585*^9, 
   3.800490778836985*^9}, {3.800491352065098*^9, 3.8004913566551323`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"c5ea870b-41a3-467c-9431-00109fbb9765"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Thickness[0.02]], 
         LineBox[CompressedData["
1:eJwtlHk01Asbx2c0M3ilJIRchGxRI64S7vPYsiX7+NlabFkja7rS2ElUyHKl
UpekhYhWKhUtkqS3xBvGTsk+lmFe7/I95znf8znn+89znud8t3gE23nzkEik
9NX5jzthpl5DwXr8qmDWwVbiRdJ/JYRn7I3yC3l48b2gNj/FXQizBrQki+tp
2GYpnN8SI4Rctz8Hyspo+DVtXLHgohCacNx6fmXRsJ963Xh7lxCm5O58pO1L
Q87yJibhugHDL1WwU0VpqDq+MHfLWRj3hY0Wu5+gIl3tn0lR0cLIzZxv+XaE
itr+VSKGBcLoKnY/OcWRioaD/ju/fBXGr7OM0EANKjp/7wwiExtxFy1Nz3qM
gqktdf2ODBFU2lUA330omLn2rzDZSBF02ThSssKgYI5FJM/YBRHkf9HVbWRK
wcuN22WZn0XQpPR44R5lCtbWX3YtdxDFMlPjwLdja3DgTlzbip0YXvXetkiN
XoOGZ02eXbcWR4ODKT/ZZTzItLh3o+2oOCZKjZgIFvFgPVU+ezlDHGvbWY46
53lwTwzJx75ZHBujz8e2R/Ogpt9jAa6ZBH7Q0vJav48HFYw0nBiGkhi1vrD+
wAwZaWypccrvUvhtk8TVj3ZkNK5K/7LDQQqro3S9Tc3JGB+0+MwlTApbG3o6
moGMK31fsivvSiEfdV6Npk5GdmuWjtv237C9WHNKnY+Mw+V8SdVK0vh+cqlk
x3PS/+8pi+7F5o08xiT03rEoqCEoizLS8fco+iTc15lSIi4tizeMLofHapFQ
K0VUn7RDFnW6w7KpaiSkdNMDP9jIYlBZsofuZhJezTzyNihHFr+JFaolzHCh
+2d7cvnmLcgptbyxO4ILzrcquPKqcsgPe+PiUlYACf08AV05zF+78S4jegWU
Ke+2T1vK4d579SkQsALzroPuDUFyeF+fHmFpvQK5Ar89OXRXDk2YekxT8RX4
5H/6eNFueVybdjj75u1lsFLxnhQzVUCZr30jYgMcWEyPePwvhgI6ebQOdndw
oGw8KelvHwX85Zg7XNPCAcq9UomdyQroeCU2N/UBBx79MWxg9UoBj53l//nq
DAcUHQKyEoy24rvd/L3puzhAOnVMcwIU8WlRcOfNC0twpzduudZaEQO++oWP
pC+Bq3FW08mDijjl9f2wRvwS1PJXuwqcUsTLz+5Odh9dgsCcmQTFekX0f02d
rjFbgo4bUe1uekooLVcWpb2yCFXtJyPe7FbGTlnjSImQRShL8vJgmSujxQPr
e298FuGStqX1kosyVj5TbkhwX4TT+eIq6ieVUbGwkk/UchE83aq7zj1XRndN
Vf9yxUUQ6R82IixUcCnQzSKrewEip+2Fh1xV0csyO+qH0wLoCqtWUE6poVcB
X2/fwXloIbu8eX9WDUmd9fiQmIdDk2l9uVfUsGpiYTzHdh4SW0c2qTSoYeqy
ovBBo9V85g2mFVUdP9IyIvSVVvMCKna56eqo5umyLDnBhkSK8qxS/nZszvWb
lk5mw//+jY5MVbeJeB42HFnKKioh6HjfsINb/nwOcvb/eBF9iI4VL8+P6DyZ
g2fFJqNWvnT8Yv/hQXPtHIibzWvPRdFX+8VmdvnmHLzOcW/dm0fHjCSGT2bu
HKhsV14z/JmOH7m26Bk4B2OH6nxV7TXwrTaD96nkHAQ3DmlWWO3EbmudLO+4
WTjtQtu6HKiFWiE53addZ8Cz6U8fDV9tfEoL+fg+eBqe80rYBjjvxitvb77W
KZkCjQ3M3JHwPYjLgajeNwmHpvXV9gfq4eP3GZYTBpNQfOmVFDvjD2xRPqyz
rmQCqjP3dLbZISrt6xDSl5yA8Ef6NkX7DLBCPLoyz+wXPH1bMpXmaoixNXKe
dgfGwc9Up86PMMKmTxc99C/8hItlGjUB/sZIXmL7CTT/gPPTdXEhUSYY2GhX
xBD9AYPlEZG+oXtxy5RJfl7kGLzcm5UfH2+KCuW31n36PApk62+ss0wznPjA
P25kPgokg1rylWhzbHN+czWxaQRSN7Gt2lIssKuu8vaI4QiEuHg2sBMskd76
4JdUyzD0xml5wYV9GIctRUcYwyCSXfAtrdgKk4bignSHhqBUSDW6qXA/6leJ
xj5KHILnoTImSjetUcGcN1lSZgguyV6R0newQU3lXVvrXg5CXcwiybfVBiPn
xT4KhgzCFktejryTLWY4fbbWFh+Eex9U0jvabTHhExx482YAzjSu0GXd7VD0
bAaf8/EByA4b8T/UZYeDR6sbg3cMQIyo9Ho5Z3tUb+zSqB7thxsq1LfhPfbo
IKFXRbnWD7QZssTzAw6oJlicWurRD9fpd2MvDTlgZc+LqBiZflDxKN+/HOSI
6Wfcr5N7+qDT/GGV45gjkt+tudxZ2gdt106oQxgDqxlUQ0pAH8xX2+rJTTFQ
bB2lnu/3PuA+CK1JPuqEB78nNr8m94Elfa9JzKwTrttcozvzjgVN7jv8AsII
NLDuMbMqZIGwp+/joggCOf4CHlF/seCAb7FgaxSBK2xKfnEBC+ZCN1ZpxRDo
lmHuMpfHAoVU9uJyIoHntnntKs5hAbPq6ZlzuQRy1xju52SwYA+vTWXNQwLD
/WQampgsSF6bxjP8mEB27UPf2VMs+LihwUGynsASptM2+VX2ldJaiG0g8M/b
iZRTJ1mQpyFuaPaOwNZONnX3CRbMuPZ8+tZF4BPLTqgIYwEellAU7Caworzp
2vdQFqT72B2HXgJ/sh3k162y3LGXUn8PEGjB0YkICmGBbXKZd9A4gbTgBE/1
IBZcTO+9f3mCwPjZ5mvugSwYPif5j7YpAqU7krkZAav7FJ65o80m8GqWJv8v
PxY0X3lF8lsg8LqL5H2ZVd5UumJXuEQgj5cz08aXBR43d5W8XybQ69aoV9wR
FtypDGFzuQQ6aL72qvJhwb8BsjL6GQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$142489#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
FtwrC2YvLxNop/HWq9yHBf8AkMP52Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$142489#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[{{1.631887755102041, 1.666723984215806}, {
          1.6868383589963147`, 1.6393515386410527`}, {1.7175081102359508`, 
          1.6246485548080511`}, {1.748177861475587, 1.610334208382519}, {
          1.7788476127152233`, 1.5963916745014983`}, {1.8401871151944955`, 
          1.5695596813589692`}, {1.8708568664341316`, 1.5566412891494572`}, {
          1.9015266176737677`, 1.5440367123790564`}, {1.9321963689134038`, 
          1.5317334479813196`}, {1.96286612015304, 1.519719679364523}, {
          1.968112244897959, 1.517692874486117}}], 
         LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAeDkFL6cgEEDSMD27PAbaP1M9X9/3
OhBAQiTwNxvx2T/NDTYJBF0QQO/sLfwP1tk/0ksSmM58EEBjfwBRG73ZP9iJ
7iaZnBBAjAoUbG6k2T/kBadELtwQQFX82afmc9k//P0XgFhbEUD99df3+xXZ
Pyru+fasWRJAK0SrSrll2D8wLNaFd3kSQHinbVmyUNg/NmqyFEKZEkCYWSlp
4TvYP0LmajLX2BJAjUBY+t0S2D9Z3tttAVgTQKn9lAs5w9c/iM695FVWFEAG
Wh2RxyzXP44MmnMgdhRAIfeFoL8a1z+USnYC65UUQKzkAoXhCNc/n8YuIIDV
FEDn2XRNoOXWP7a+n1uqVBVAaBoFFfmg1j/lroHS/lIWQPPhcSObHtY/Qo9F
wKdPGECFXBSERTLVP4BKtKnSbhhA10l6NLwk1T++BSOT/Y0YQGRD8rJMF9U/
OnwAZlPMGEBkGirVufzUPzNpuwv/SBlAw9saGbzI1D8kQzFXVkIaQHdUFSYg
ZdQ/Yv6fQIFhGkB11spWEFnUP6C5DiqsgBpAOx/E1BVN1D8cMOz8Ab8aQNJg
2b9fNdQ/FR2noq07G0ChCZK86AbUPwb3HO4ENRxAzFOKoJ2t0z9EsovXL1Qc
QOnEcm7HotM/gm36wFpzHEAlTfEPA5jTP/7j15OwsRxAmpa/C6+C0z/30JI5
XC4dQD11ysDUWNM/NowBI4dNHUDkbk0AiE7TP3RHcAyybB1A5hqUoUtE0z/w
vU3fB6sdQH8dD10DMNM/6KoIhbMnHkCzgF0jMAjTPyZmd27eRh5Askke2GH+
0j9kIeZXCWYeQNzvcqWi9NI/4JfDKl+kHkBMahDwUOHSPx5TMhSKwx5ANcnK
Ib7X0j9cDqH9tOIeQGdB99Q5ztI/2YR+0AohH0ANSTMuXLvSPxhA7bk1QB9A
xPjGjAKy0j9W+1ujYF8fQJ6Q0N22qNI/lLbKjIt+H0Cy8MX+eJ/SP9JxOXa2
nR9AEEOUzUiW0j8QLahf4bwfQBbsnSgmjdI/TugWSQzcH0DahbjuEITSP4jG
+tBY3x9AR4UemRuD0j/tsW75
          "]], 
         LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAvJyCl1MQIEBO4Cu87H3AP0zbh6UY
HiBAnOYOxN92wD80hxU9AC8gQDYImC5EbsA/BN8wbM9QIECskig3NV3AP6KO
Z8ptlCBA+tkiV7Q7wD/f7dSGqhshQN0eIcAU9r8/Wayv/yMqIkCDSY/ZjwS/
P0BYPZcLOyJAnjz9ACv2vj8oBMsu80siQOfKyR/a574/+FvmXcJtIkA2+xiM
c8u+P5YLHbxgsSJAb1WYO46Tvj/Taop4nTgjQFte6ps9J74/TSll8RZHJEDb
9fJQc1u9P/qLdbvdViRAHgp2XQ5QvT+o7oWFpGYkQGu/JqS2RL0/BLSmGTKG
JED9z0Z6Li69P7o+6EFNxSRALl/Nj7gBvT8mVGuSg0MlQNn1Z2chq7w/AH9x
M/A/JkDitLJMqga8P67hgf22TyZAisCR67/8uz9bRJLHfV8mQBqWOwng8rs/
tgmzWwt/JkAn3kF3P9+7P2yU9IMmviZAaUklJHm4uz/ZqXfUXDwnQPyQB3/I
bLs/stR9dck4KEDr/ZNbZdy6P6iFZGLiSShArdAhde/Suj+eNktP+1ooQHgT
roaDybo/ipgYKS19KED9exZMyba6P2Ncs9yQwShAe4uwgcmRuj8U5OhDWEop
QMBzcSmOSbo/dvNTEudbKkCZIqewvL+5P2ykOv//bCpA9/Ox7Wa3uT9iVSHs
GH4qQBxhnz0Zr7k/TrfuxUqgKkATgz3ilZ65Pyd7iXmu5CpAGCWa2e19uT/Y
Ar/gdW0rQC4H97QNPrk/OxIqrwR/LECXOZIXvMO4P84BWsnNjyxAPmYtHHS8
uD9g8YnjlqAsQDTkIokytbg/hNDpFynCLED3Tq52wqa4P86OqYBNBS1Awpxn
ni2KuD9gCylSlostQOcrq00pUrg/8vpYbF+cLUDaBEubQ0u4P4TqiIYorS1A
RMDQw2NEuD+pyei6us4tQH4gjoS1Nrg/8oeoI98RLkDILVrhnRu4P4QEKPUn
mC5A3gvXH3vmtz8W9FcP8aguQBgDf17v37c/qOOHKbq5LkDL7hn7aNm3P83C
511M2y5AwZbwMGzMtz8WgafGcB4vQLgansWxsrc/qHDX4DkvL0DmPvcpUKy3
PztgB/sCQC9AvV02s/Oltz9gP2cvlWEvQCcG3RhKmbc/qf0mmLmkL0DnDdZy
M4C3PzztVrKCtS9AZPwMQPp5tz/O3IbMS8YvQHILYPzFc7c/YMy25hTXL0CS
pk2hlm23P/K75gDe5y9AxzVgKGxntz9EY31orO8vQKScaLuPZLc/T9DC6w==

          "]], 
         LineBox[CompressedData["
1:eJxNz30s1AEcBvAfFq1lJZmXXeIqdaa6y40yl6PuHOeOO+QwdhH9zhEdkroZ
aiKUEDUvuZWX2CRSyS6dvDRq6dQfYYs2Ia015Lx0VFv7fnu2Z88+fz72UYni
GEOCIPh/+ncjhZpB2kY6m/iXYE5nPcUUbcsaZmZZoKeYs5rJHegWJyN/Xwe0
F8VZZu6KPr1aXFUrQZcKv71Ml6JfqDhfBSTairfkspiGflUaMcQtR9MO7DOa
/oCelapJx0AGOLFvyvmB4BD4apjxHn08ExzdfzGWQbqANSbWInnoYTDDLLNs
JsUNLJ1nOQnj3cGq6l6KrvAouO2a26hWzAanPGMFVPl5grsGaufywr3AMu8j
apnkGLiygdEujzsOvjGvzkpK44C/NKaeIxVccA+3+FZ2tjfYwH/k8/VMHpjw
fGxQk+4DzrXUCbRXfMFJYdHdukt88EQW85THTT/w9pLbI3kqAbhuq2N6f4UQ
rFHs5Oxt8gdX29VQWEEBYLVyhSCH0PZ8k1+7QkTgR29p+R/fowv61uh2EWJw
SfJMnHQMrbSw3UINDQTfp20YSBlHGy8YWGsig8D19IcZ1VNoWlSjUJ8QDB71
6WgNnkVr717Y75F8ArzUJnKnzqHXnyrac86EgPl0Lkf5E90fcVAmT5aAt0WT
nVWp6EhSZTqUhl5UmLcylejduboV/WV0ZmtXQVEZ2s0koKW9A52zOc9wuhP9
zqw7yOY5mqQwlzO60eUMKy/eIHohfHx4ZAzNPmntYPoJnR8rPu8xgaae7aHc
m0SLchpiEr6jK/Mnntz5gZ4ustmknfvvT0VBs4sO/bqml5Atoy3r1sQVq+io
JtfaN3p0c0uSbn0d/RuG2gqd
          "]], 
         LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAA8HIKXk5BAECpr3h+mGPxP4DBDCI8
gABA+REIOVBC8T90Yrp1VMQAQC0KKl0gH/E/aANoyWwIAUDHTohYxPzwP1yk
FR2FTAFAJd1N/jPb8D9E5nDEtdQBQNu6/LpXmvA/OIceGM4YAkD+MJeH/Xrw
PywozGvmXAJAVF6+XFJc8D8TaicTF+UCQE9k4lrwIPA/4u3dYXj1A0COoDAd
wWLvP9aOi7WQOQRApYCEQL4t7z/KLzkJqX0EQOdcJIHE+e4/snGUsNkFBUAb
lKulypTuP4H1Sv86FgZALB+oluXV7T90lvhSU1oGQBbnHdZQqO0/aDempmue
BkC2dbKHinvtP1B5AU6cJgdA2gVoblEk7T8g/bec/TYIQLdUE3CTfuw/FJ5l
8BV7CEBdrWKM1lbsPwg/E0QuvwhA9Ab/Hr4v7D/838CXRgMJQEWjksVFCew/
74Bu615HCUBxdTlHaePrP6omjztLWAlAuMybLxja6z/7dqZo
          "]], 
         LineBox[{{1.031887755102041, 2.3844019980572724`}, {
          1.0734433342035918`, 2.3377934893215495`}, {1.104113085443228, 
          2.3050955274064284`}, {1.134782836682864, 2.273732278879766}, {
          1.1654525879225002`, 2.2436153429209824`}, {1.2267920904017724`, 
          2.1868058293634185`}, {1.2574618416414085`, 2.1599728836075993`}, {
          1.2881315928810446`, 2.134104052927779}, {1.349471095360317, 
          2.0850377059031726`}, {1.4721501003188617`, 1.996271746116552}, {
          1.5028198515584978`, 1.9757966507994578`}, {1.533489602798134, 
          1.9559389205978328`}, {1.56415935403777, 1.936668141710815}, {
          1.5681122448979592`, 1.934225628950387}}], 
         LineBox[{{3.231887755102041, 0.7323402600065407}, {
          3.2595975880799175`, 0.7292208046478543}, {3.2928471128985555`, 
          0.7255298098935676}, {3.3260966377171934`, 0.7218943002639373}, {
          3.3593461625358314`, 0.7183128994069391}, {3.4258452121731073`, 
          0.7113071531739518}, {3.5588433114476588`, 0.6978894140830997}, {
          3.5920928362662963`, 0.6946519645779112}, {3.6253423610849342`, 
          0.6914591558190228}, {3.69184141072221, 0.6852034263881338}, {
          3.725090935540848, 0.6821385676391996}, {3.758340460359486, 
          0.6791144709599095}, {3.824839509996762, 0.673185008683794}, {
          3.8580890348154, 0.6702779327354662}, {3.891338559634038, 
          0.667408196080962}, {3.924588084452676, 0.6645750061771473}, {
          3.9578376092713135`, 0.6617775938336018}, {3.9681122448979593`, 
          0.660920267927352}}]}, 
        Annotation[#, 
         "Charting`Private`Tag$142489#3"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 100}, {0., 2.8945157027379587`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SqrtBox["DetH1"], 
       SqrtBox["DetH1NoTrunc"], 
       SqrtBox["DetH1Trunc"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.799428765379191*^9, 3.799433994466734*^9, 3.7994342918877583`*^9, 
   3.800400493471135*^9, {3.80040052404865*^9, 3.800400534875798*^9}, {
   3.8004005652348413`*^9, 3.8004005974767017`*^9}, 3.800405986920558*^9, {
   3.800406063899938*^9, 3.800406099312757*^9}, {3.800406159304858*^9, 
   3.800406173154413*^9}, 3.800406212617456*^9, 3.800406287538125*^9, {
   3.800406410209395*^9, 3.800406431081956*^9}, 3.800406657301697*^9, 
   3.800408423083309*^9, 3.800458252656312*^9, 3.8004587752078323`*^9, 
   3.80047878174072*^9, 3.8004829377391653`*^9, 3.80048416713692*^9, 
   3.8004855159193783`*^9, 3.800490963266704*^9, {3.800491353695787*^9, 
   3.8004913582008247`*^9}, 3.8005426981290913`*^9, 3.800552318932629*^9, 
   3.800578585070269*^9, 3.802524962485072*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"3c243109-f039-4e44-b296-2509f2d02ad4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pR", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sqrt", "[", "DetH1", "]"}], ",", 
      RowBox[{"Sqrt", "[", "DetR", "]"}], ",", 
      RowBox[{"Sqrt", "[", "DetRTrunc", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "1000"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799522105997098*^9, 3.799522168445315*^9}, {
  3.8004063824597692`*^9, 3.800406386066654*^9}, {3.800490781942046*^9, 
  3.800490782476675*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"ce09e22c-c403-4d20-ac99-e26e20390b63"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$142575#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QMHvOlNlzQ8I+B9au6r3
          "]]}, 
        Annotation[#, "Charting`Private`Tag$142575#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0HssFAAYAPALlcvyKk3k1a11cXXySua8Yx65EYaF8rrO7I48OucVzisu
z/R2R6FJsZriQsUtrz88ViKPhjS1LhyHdabH1r7v2759++3b923fZxTO9o1S
IBAIvn/zX21S48tqfEwdCP8j0FUtwnsGrd/H0RulnAR/cZ/76J+Kbhz0LJ/o
R1sN6e+ejTYDe4+Jl5eE5uDMzyFBquvolsX1txRPC7CGnFzBlKHfG/At592t
wMFMf+6Y1BrM2FpQ7HSxAzuU5aicSXTBfasBLWUR3mC7VxyfdHU/sDCh68lU
YBB4xn16VO4aCo7y5ErChy6CHUUbSkOsSLBK2yxBdzYabLLixrItYIJt2nXe
0BRiwc3uYUfesVngzj3q2xqFcWCdtvrJlp548OEcebxIOwEcakYsz2ck4n3H
zj4UC5LAbBqdHStNBrvczqfwTnDAYs2M2l25KeArccdrvT5wwTVa+yoV1NKw
P/7CjhSRjvNzpZPPhRm4f4SkoDyeCW5jieLmK6+CC7UzJrhmWWDTEWG12zR6
WS4gr/OywbEeosfnjXLwPw3mRZsD6AFyX4QXkwde0T29I1spFyzRI8p/NKHr
nNckah55YDOOHe3SGjp1+EEupyIfPH1noTyGWgDWSszbKhtHE+OdwuKTC8Gj
aSH6eUbXwK2//GrT+tHn7jEMTKKLwL1eE5uq6sXgdcPowcanaHvGUDjZgw8O
7bgZMClFW1umOruWXgePpToZ76xAJ3UTNcQ30M/ot2Yc76IpMa0ptHq0oWCp
2aIDTSRGHiItoh/RTRTnvqNdq6TfhBI0j5T1Un8VvU2r9tXZRksvjxdo7C8B
l7YL2MMH0FQCI6DkIDqWLyPtNUB/bdB8rWyM5v2cqOuloEmWNcV5VPSFbmqw
kiV6W3nDoecU+j6962i2Ddq2KlfVkYb+NOUl+22P/gPxhCu3
          "]], 
         LineBox[{{8.318877551020408, 0.21927929678137298`}, {
          8.894248267657748, 0.21206811286409344`}, {9.20094578005411, 
          0.2085036970152273}, {9.814340804846832, 0.20188285053398788`}, {
          10.121038317243194`, 0.19880049486657977`}, {10.427735829639555`, 
          0.19585514533191087`}, {11.041130854432279`, 
          0.19033699881219868`}, {11.34782836682864, 0.18774726379836054`}, {
          11.654525879225002`, 0.18526043965781666`}, {12.267920904017725`, 
          0.18056954846221673`}, {12.574618416414086`, 
          0.17835389088805986`}, {12.881315928810448`, 0.1762178424962095}, {
          13.494710953603171`, 0.17216632223411898`}, {14.721501003188616`, 
          0.16483671433648903`}, {15.028198515584975`, 
          0.16314603898411684`}, {15.334896027981337`, 
          0.16150634087839352`}, {15.641593540377698`, 
          0.15991510868236583`}, {15.681122448979592`, 
          0.15971342482898407`}}], 
         LineBox[{{4.3188775510204085`, 0.5271147602435615}, {
          4.907180606505049, 0.49450945747999914`}, {5.213878118901411, 
          0.4797447001069237}, {5.520575631297772, 0.4662280953803608}, {
          5.827273143694134, 0.4537931493684049}, {6.133970656090495, 
          0.4423028889233191}, {6.440668168486857, 0.43164345575868546`}, {
          6.7473656808832185`, 0.4217193214804852}, {7.360760705675941, 
          0.40376556113478634`}, {7.667458218072301, 0.39560786213244614`}, {
          7.6811224489795915`, 0.3952558248199954}}]}, 
        Annotation[#, 
         "Charting`Private`Tag$142575#3"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1000}, {0., 0.7370821859227206}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SqrtBox["DetH1"], 
       SqrtBox["DetR"], 
       SqrtBox["DetRTrunc"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.799522114628316*^9, 3.7995221690129128`*^9}, {
   3.800406386968121*^9, 3.800406392098816*^9}, 3.8004066894589567`*^9, 
   3.8004084233162413`*^9, 3.800458252874259*^9, 3.800458775455718*^9, 
   3.8004787819455633`*^9, 3.80048293814524*^9, 3.800484167302925*^9, 
   3.800485516170203*^9, 3.800490964749468*^9, 3.800542698290388*^9, 
   3.8005523191324387`*^9, 3.80057858524922*^9, 3.802524962642541*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"b870a938-7386-4061-b265-bdc1f823f642"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p3Dk1", "=", 
   RowBox[{"GraphicsColumn", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pH1", ",", "pR"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/FisherMatrix-2_Output_preIntegration-3Dk1.jpeg\>\"", ",", 
    "p3Dk1"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.8004913749516487`*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"8658c474-5858-43a0-b9bf-b5381b0b882e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pHV", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sqrt", "[", "DetHV", "]"}], ",", 
      RowBox[{"Sqrt", "[", "DetHVTrunc", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7994289539105787`*^9, 3.799429069823216*^9}, {
   3.799433254035104*^9, 3.799433285300692*^9}, {3.799433333854372*^9, 
   3.799433375087038*^9}, {3.799433500788445*^9, 3.799433500964443*^9}, {
   3.799433533925202*^9, 3.799433567968049*^9}, 3.799433631635578*^9, {
   3.79943370496087*^9, 3.7994337327055397`*^9}, {3.7994340939797783`*^9, 
   3.799434128365823*^9}, {3.80040673640632*^9, 3.80040678635528*^9}, {
   3.8004907874378347`*^9, 3.8004907881085167`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"858007f3-6c19-4ef9-a01a-7b7e0463bdc6"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJx8XXVcV8nXBqQ7FQsR7O7WGX92u+ja3brq2rq2rt3dGGu3a2C3YrdigEoL
gkiDgPKy3u8z45wLr//w4XGYO/eZM+ecOXPm3OID/vQZbGJkZHTR28goX87P
+5U2RBxK299I+7mx0eiC98s82Vqem1xYnj06MJJRPGDAUzY6MFWH/54cO2tN
CWNOcXY24eOoQHMdXnZqKmu1xlaHL9n+vcOaEk46PPvnPxcdPqG/yYlRgfl1
ePQN036BfgV1eJ8SFo6t1hTR4S/mW13zG1VMh+9JMquzpkRxHd73Zz9eOrzQ
75ZR2dneOhw8a7wGMMozxcEzxcEzxcEzxcEzxcEzxcEzxcEzxcEzxcEzxcEz
xcEzxcEzxcEzxcGzxl8ka3LYpMWRmyUEzxQHzxQHzxQHzxQHzxQHzxQHzxQH
zxQHzxQHzxQHzxQHzxQHzxQHzxQHzxpPCWx66y0TMl55CJ4pDp4pDp4pDp4p
Dp4pDp4pDp4pDp4pDp4pDp4pDp4pDp4pDp4pDp4pDp41PlJZ2LEzVkHVCwie
KQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6eKQ6etffO
YmtLWEZW8HMSPFMcPFMcPFMcPFMcPFMcPFMcPFMcPFMcPFMcPFMcPFMcPFMc
PFMcPFMcPGvvZ8xHjh3878uJNoJnioNnioNnioNnioNnioNnioNnioNnioNn
ioNnioNnioNnioNnioNnioNn7T3y8dlzDiTt/MdM8Exx8Exx8Exx8Exx8Exx
8Exx8Exx8Exx8Exx8Exx8Exx8Exx8Exx8Exx8KyN15zf++fanrmdjQXPFAfP
FAfPFAfPFAfPFAfPFAfPFAfPFAfPFAfPFAfPFAfPFAfPFAfPFAfP2ris+F6v
kGO+tbMYeKY4eKY4eKY4eKY4eKY4eKY4eKY4eKY4eKY4eKY4eKY4eKY4eKY4
eKY4eNaeb8uPFRrSPF+nNMEzxcEzxcEzxcEzxcEzxcEzxcEzxcEzxcEzxcEz
xcEzxcEzxcEzxcEzxcGz9hwHfqfRxUmTliYJnikOnikOnikOnikOnikOnikO
nikOnikOnikOnikOnikOnikOnikOnikOnrX+nPgC/0dWldbEC54pDp4pDp4p
Dp4pDp4pDp4pDp4pDp4pDp4pDp4pDp4pDp4pDp4pDp4pDp61v3Pmg9sOKrm9
b6zgmeLgmeLgmeLgmeLgmeLgmeLgmeLgmeLgmeLgmeLgmeLgmeLgmeLgmeLg
Wft/F+5c1+SJ3bQowTPFwTPFwTPFwTPFwTPFwTPFwTPFwTPFwTPFwTPFwTPF
wTPFwTPFwTPFew6znDUmMMDw018XX6L4pUsW00u08uYUR/8UR//a37nwwcEL
G5T//bOYX4qj/7zwvMZP45BoT3G0z4sf+lz7299njM95H+2nn3ivGEvLamv2
eHOKo732/y48M2yhzbQB0QztKQ4e8uqfjh/95zV+2j/a5xW/pc/FePIaP33u
l2V3fOdteFXfyPAP/ZwdFeg3KmedAn8xyDc6qHRxA54q8Jjdi//NbuHAW60p
0eq/dQp85IMTzdaHpDOtvbkOL/nzD2wF3vrljGrryoUxrR8ngddePPuxbcZD
w/NcdbjWf34dPvo/OGedUlx7bhEdHvRf85x1SnFtPMUFjn8lfv6Hlw43/K8O
B88/H/NLHBi8nTXgdY9F9Z8zxpiDH+Bdi263WPM8UfADPL1Lg9JmIZ/F+wL3
drK2HrnlnnhfiuN9KY73BX56858Wg1ddZnhfimvvFWF4r0hW9eSBNf/FXSE/
+BlYoPFfV1p6CPkBnpD9+vulj7aEh0gW2meTZePrJhzyA3xuxLZVxpYZTOUn
ki3qVTl82bFUwk8km7JlbsdeLvFCToBbXt5WsXetcMJPJGtW/vv8+Ihgwo/E
VX4iWVvvY9dK/vmK8CNx8KP9XQL77f3J+//FS9EudzxV4Bcs/nj4+2s7wQPw
pb0Cn9i8yxQ8UBzrBXgl80sBkz9+EjxQHPJDcfBDcfBDccg/8E8nM+7uePmE
yEkq6777e+3/4pmqnFA8VeBrthwbu+2iPZGTVNblzx1b5hwxInKSylqW8A/r
VeY7kROJq3KSylxWL5//uUac4I3iqvzk7G9qn1x6MyOarDuJq3IlcVV+Utm0
gw//OPbkNZEfiYNPioNP7TlZzLnvb1n/xS3BZ+54qsBNjt9OsixvLfgEvnjj
w6fF4ySfFAdvwMv+SLasVOyr4I3i4I3i4I3ikCvgPiX3p1QcEyZ4A77aevX5
if3eCt4oDt4orq5HY97s7M7r/8Uh1fVozJsreKrAm7xx6DbsWz6yHo353Xxb
Uys0/UbWo8TBG/Dl9zf0Hbc9kaxTY54cYulUMeYrWacSV9ejMe9eeVPrZqXo
epQ4eAPu0CKydJGMj4I34Fv5pRr7e78j61fi4E37f1M+yxBXVP0EiqcKPMzS
5Hgd12zBI3DP4E+es/akEn/AlL+v1Kz1v15JxB8w5WvPtSo/d1YM8Qckrtp9
U14g68yzWmc+EbsvcdXuS1y1+6a8+tha9atZBwveKK7afYmres+cn7oVvPW/
OKGq9yieKvAGW03/GLYvXfAGfMb6/22J35nAVL0ncVW/mfM/ZybW8fg3nOg3
iav6TeKqfpO4ah/NeYTT5fjAZyFEv5nzzTN33h7Zl+o3iav6TeLgTXu+FR9o
Xmzdf3E/8JY7nirwQZ5z6p6JSRK8AR/qd8wuwTVW8EZxyCHFwSfwdvcCyv91
IUzwCfy3RV/bFbjzUfBJcfBJccgnxcEzxcEz8FFl0tqvbPpK8Am8yr4SZ0Lb
PSP2wpbvDN9f+r/4nmovKC7XZf+sBd+G9o8XfAKvXNljUKM3Uo4pjt8prtoR
W+6Z5ZP9e/+PxI5IXLUjElftiC1PeXCmzcnPbwSfFFfti8RV+2LLtz1LG97R
/imxLxJX7YvEwbP2HAcee+pWl//ie+A5dzxV4G9GFKnyukeM4Bn46j/mDz0R
Fyp4pjjGQXHwDNyq0eQe6WveCp4pDp4pDp4pDp4pDp6Bf1rW4NiQhBeCZ+CF
zqy4tzH8ruCZ4uCZ4qodd+JVLtt/rrgmXvCcOy73B/3XLKuz3PuT4Bm458JX
nVZ++Ch4prhq3yWu2ncnviJz4ZHDzV8R+y5x1b5LXPXDJa7afYmrdl/iqt13
4oetrTdeLnef2H2Jg+djv+/zTC3lxDv/UXVJ/Ts3Bc/a3znzJdfPfvLtGyt4
zh1PFbhFm+ZVn9wJEzwDz9eq/OkKZQIFzxQHzxTHuIHble30PfH7M8EzxcEz
xcEzxcEzxcEzxcEz8J6Da4155ntb8Exx8Exx1Y9y5d2nX1v7X3xG9aNc+Unf
Z5GF7UKIH+XKu7wJ+ezY+zWJt0hc9a8krvpXrvxIlU1PbZ48Jv6VxNV4i8RV
v0viqt8lcdXvkrjqd7ly/mwbS69zg/hdElf9LokjTqH99GfbH2aVzX+ptIH3
LIFXttxzfL+djeHvTTnw2fXf9muyJUX4ExTXxu8m8OXHajwPbvDAgHsKvPHi
hc4bxl8V49HeL4R1+Htu1Ys1y/CiI1cltvTNYu3/LDVtTcEQ9nRWrcMec+3E
eNC+f72z/3vq9EOMB/jFR08dXlXNEOMB3j7g5bnujT+J52rvHcuW3zjSv/J7
qX+BT7jUaWKFE0li3QI/kZmxwuFgjOg/d9xT4A/2Z1mdGfOcaf5ucR2ujS/B
MG/JrMsYq0v3WrmKeQHe68P1zPqvrQQPwHfVflh2YJSRGD9w4xbWWbU90sU4
gT/PaJYWXTJOjBP4ndGz/nc5MFCMk+IYp8b3N1Z8f+u5f5WxF+ME/qOA6fbV
a63FOIGX3v1iw5pT+YQfBrxJ6QbzX9X4Juw9xVv/fG5hgY/u3nDe+LGRYvzA
b42zPjPt7HuG8Wj/n82KnIkKLPbEXIwH+OmFm0bMqfZdyA/Ffz62lbvA6yze
+4fbg89iPBQvsr1V9JJ3xfmEKaX2lh+RzW6tKTqmYPAHIj8m3K2fabV5X74S
+THh4V4Z/l5TYsRzKa7Kjwnvt7pvKK8fyNT3MuNx5Uf2eJHj54NP4KEHmxec
cC1ePBf4uNvFK8x88Em0155vyS0nXgv73O+rGD/wEu7Ns267hQpc48OGLz0W
8mTA4hAxfuBzf2tjdMUxSODaeO15VYvd9fewIMP4PQQe6by/f48GAQLXxuXI
GyV/eHmj2Wuxfo0M/2h8HnrmVnAF+33/FOXqflOe46j7Sqn3IOfQG+MqlXk2
+KQjWY9GRqvvlzNv5mRK9GcAc2te5rvrXxZknco4P3j+//WqjG+r61qeC4D/
KhsOdOtT+Q7LP/3HtRO1HpD9rNTDaE/1IeaFtgeO9qONFxduMDVMyD9tD5y2
xzzmZReMyD/g6CfruHPr6vcvGsbjLfpR/6qEDlftnYzDY36hh9u/73X+YCsn
vuPzxPMzF2WxA/uPrXTZFsvODJp2zsPWSviFlDd1HmW8HfzT9uCfxuHV9S7t
iMozjcN7ChxxdegHyhtw2h585sUztVOqHyt5g5wDf+58edh2LyOxLsA3jdvT
9uAT7RG3V/1Vvf1FexqHR/sCKVWnthj4nuiZZNbafWtW5SPhxP+k7xsg7K/1
Id/My6cKkfiexDEO8OQwq2eR1hNkfBPtLS49HrFwkLSDwGGvwSeN56v+qmyv
6g19PF+8r8/cSwM3Jgg5hN1ctmbTZBvvRCFvlB9VDmXcXvVXKZ8eOnut+rHS
rwD/wBtPL/P4/pYAIYfUvmNegPc9uzohvb6rmBeKg3/qh0A+EQ/v/+jCtMk2
FkI+0X7eRMsguwdZYl5o/F+Nj0m/BfxTntV4l+QHeiD3cwQPnb+BdU35gX5A
+6QyDYpYvvsgeAN+2KZF2Umecr1Rf0nVkyZ82sXzS9uuNRZ8Un8JfNL2ahxG
tlf9bRNu6ehTrnRiCrFTMs6v+i2SBzU+I3FVP+jPC/Ly66jfBf4pru4jTPgN
C1PfbB9LIYcUV3k248V2cpdz2zKJvypxrGvKD+QQP+l5AW0POczd/3QQ/eB8
QY0D6P1S6jeq/rAZb79x6/Oz88OJHtbzmXt7T4EXuLb47vrOcj9CcdVOSX8Y
OG2vyr8Z/71Z49NPffKJ+aI45gt+76L47qvSC6eSOKT0tzGPtL0an5Tt1XUh
/XPMe15+OOUfepW+L/RqXjygf7f8Vl2L1soWfhLFwQP8+ZhW5ntjzBOFHNJx
4r0oDjkEjn0E1inFMU4891uVo9e2bP0mxklx8J/XOIG3MLd+96ZJtOCZ4lgX
FMf46X4H8k/3O6r/YM/HumYkVPgthez37fnbK1/CXEK/iPFTXF3v9nzfudVj
d14LJ+tX4pAT4NhnqfLvyC9PrDYoOT1BjAf41S9dplYsFk30ksQxHuCF79fK
vtolRPSvrVcnXmbThXrXd8WJ/oFvmJJWd2ifCNE/xdE/8LjWh3m+/u+J3Lrw
bxPNjP7LZ1PXqQvvtGP79mrdQwn/Mn6I/SDapxv6gd4AvutTVbOXj24KHP0g
nqb6ewGsi1v4+L4DXUieEo2POej2d+p8yTwr4GiPvCboYeDIU1L9NIlD31Ic
eoPG5dT9hcxrUnmQ/1QeIln+xrsHVXd3JfviSBYYV7my3RzoNXehd5F3BH2l
9Sf3I9C3Wn9yv4D3wvPh/2OcwJFvo/JJ81s8dP4t+qF5JphH+Gn7QisndHmb
IvjMyx+jeReq3dH7Y3hv5FeAT4qr+yaZX6Hux2X+g8obzZfwFDjyIlR9pc9b
gP01LZmv8LLQb0SPyfbqvk/6J+o+SPohkBPgyENQ9ykSx3tRXI0zyDwE+BUU
V+Vc4qqcyzwEVc4lru7L9HkIucffPEV7nPvjuXmd41M7C3ua+/m4sc6uQV9R
HDzTc2F1/0vtGva50h7hfXO3R5F52CPjPOxLZB72xTgPexGpsxfQM1TPq/Ij
9bCqB6Q+xHOhr9TziIK6OBj0A9Vvmvx46XDsU6o1uXXT92As6/3hWicn3xCy
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
T3dulvNIcYyT4trzCubRXsop8iExTrRHPAfrkJ5XbqlW63OnICdetP7ehwWz
LflGzwbjiyQGk/i2jHvAXlB9pfhLOetXvXfjL9bXscAThU+VL0fieM+YedfS
28ZUsRL2Hu23Xns9s3lcAeHfU/0AvZR7P1min4r/9Fo4KNxMvD/VJ5Cr3PWM
lQ6HfOK5iDMIe2Z47oB7z2KfVZD+JY1jq7jUV+r+l8SfWxUVegbxai2+48ln
ra/316ftfsz4/NPYPXWvkTwTP3bra6vdHetcI/kw8t/PVl+8dHEP+L2537vB
7+Hs9dEjF7YPLyXmF3iJVZUWRw6zIfMewrb4HBj56i87Me/QV5WP3hkSsEHm
B6M98i5U/uU9UDX+Q++HOgoc93Qg5xRX8y1l/Fw9lyfnejnzSPvBes/rufR+
EPQntSPqupM42tP+oU8gP9W++5c5/CVc6BOMf8Mk04qzg0OFPqS4eh9T4pA3
x8Kn76yyCGc1/vEyNfZ4LeQN49zz1+bep71eE79Of+6JcSIeBT1Gceg7yEk7
i1PvTqfJ+wjAce4A+aHtIT8Uh/xQHH4hxaEHYU9TK7St6RUl77dSXLW/cn+E
+aL2GvKTFw5/Ss2HLCp4nt5qvvO8OR+FPskLx3hwfwrzW6zSh17nlsSyqgc7
xnad8Jzcd5bnuRoPJXT7MvSLuNaSXv98bRoi93vANw61c0t47Cxw6ofg3LbL
wbWT44ansNqPB9i2drck5yDy/Bpxnsk/z3mTWL31L+sWCrIifl0ie3Zq3dNT
daWfSecL7en9LO19TXXn1Gochs47/BZ6/8teh6vnDjIPRLXLElfjxvL+F9pT
HOud+oHAaX6sej4l45+QkxkGnv/HKyZvDQkU65rGM4GjH+W+uYg/y3thwMHz
ypGuDY7ZBojzx7ziijTvBfHSyEdBVi6nvjHzOz+S/tlkLeQh93vrsF8/mN/V
mNrnRlgKvwL9j8p0617rsqXY39Lngv+84q40zqD6/zT+4K6bF+gN8KPGmQvq
cFXP0/w6nJtLvxfzkTsPJrp4hYY75xGXcNX1r9o7PZ57HKOADlf1obz/pcaN
ZXvoSbovgDz7Xu5ht/VPI75gY+u3e7uECD2m/V0+Xndsxr8nv8j8ZugDxI3x
O43TqvH5fPyGuU9o5ja576M49APw97/7LFk4LVng6H9PX7uXhSISiH8iccgD
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
r2XLWdlzgU4f0gQOfbui7Ppy5XP8d1We6X1V8OnA29i6nLiVlkTGac+7nDAa
M/1dsiqHunushvGk5ux/1xwb7BUVr/az1ZFP2DHm+MitCaIf2EH1fqsfa/nf
AwY58w6TF5b1/SzPrWAf7ft7vV5qI/NLEVeseyyq/5wxqD+bX3eert7flOcO
8BtpfB79YzzmF7YMWnoikOhneb4Duw//GXE5jI/64ao/KeNvmh731tlZTZ/q
99fa35vmUQ/QVPhLyCvD/oXi2nt6CX580lx6WUXLfRziV6jniX4wTktHn3Kl
E1PEeLC+EHf6Wq+eTY0zprpzavV+Af0umxW/HVP/n7PjzHjpsHcvC4UlCb+F
2kfYY8z7led3u6y6VFT4P1h3dR7tajfJKUDEo5A/Y9PjydMSc16S7whL/wT2
FOui3swesca7Xqnf3fgFV/0QWR+1mZVtAO/tyqv0vGkd65nKNr/J/0fXQV9J
/WH5/TW8F92/wJ/Qfj7X7VOov6TuC+Q+Rfs9VrTf5dYksMk9xENxzhDI1h+s
PH5vD9RjlfYcdUfhP1BczZ/Zx8weVq5TdtFDkv9wna2aFWiz5eADkp/wli2J
X/vsfs17Qk7gb6j1k63FeJFHqt6Ll7haJ0Hu0yFv8DeK1jUvNMorg9ll5S9Q
tbUld6jmW/KU5Tfm22vgjcj8GaSOLv2uXzEdrvDQ05S/X9KrzYKgSHX/kuNX
HC/0Y1XJZrRuucwn1/SbIX/hSyJ71HFWTLelBv+kp4e4x1p+Q5/g+9Neknxs
WrfWT+TBqfVa/XT5acjXovsprBd6HgQcehH3mqEv4MeiPgDel+LQw5q/7Mw3
947gY3dLHH7vxW5Xe3Xe81b1c3LaB2xc/qnAmxh1//glx+99GXzxao03qp+T
o7cz3O6NmZVZjPiTtN4FeEtjG8dX6e04Ij/xc2i9Cz9xHjH671M9upVwIv3Q
ehfwN4x5sbh3dVrvsib903oXsNem/Hz3QfMbm5uR59J6F/AfLPijEz43vYOl
v5p7vQv4Cdb8x/GnffMtylR51tW7MIwzh+cXkwqb9HmYquK6ehfwoxx43Wp/
TevulaTua365B6fw5uPE30asuLSyUTzZr8k4Ks7XqD8AfUu/n6LJnx7Hfg3z
iDqZ4Bd2DXVl4W9QHO1hJ99Xatb635z31XBvEUdBvXH4JxTH+KG31niEX7LY
+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
3KrrKY8Fv1nx87ZdPNaaPWedxw9Ic2xkxJtOWXm4r78Lv2jj3b5N9Gs2rU+o
b5TtS5Y4/eWTxIP32B/fzUp3aVWajzvQdXvP3/Lx4uU8bq3q+JAFb6j/eXVE
MrtRc3rG1ouufO/Vb6HLfzxlUy26FXk36j4buGBhQpk+75jHsr+mhjXJ2U/+
XS+29YMyfNj0l9NjOpnxr9XStk/6FsRGWgUvXFvQiDds8a9p2l4rvnCsb6rT
6VjWz3rt67GuRpxbFpsef92B99hXOexVdAyztwzd29UkmWXc+ONRixeFuM3u
9vlaTohh60NsXap7hLLXl++lzM1OYLVHHD24cE0S489rmMRcd+XT4q9b5PTE
Ijv+u7Nu52SWsNUibP5XF37DQuvf/Xj7vv6Hk9izA7uyO85LZ5/fTV1f3smN
F21ZaEJ08yRWYWZjVum3r6zEq+cOc/e78dE3a24cviyJ2Te7Mr/TxzhWy2LM
xTpzi3OTIT7OFbYmsgEnb/JEjw9suuG5v1cYZu9mk8EKb3zRecdBO75/x9v8
75Lz8WZNB8V93vONVSsY3n6Nfz5er2XlqVF9rfju0Y36P7bLYCZG2/rXvJPO
3lz4t2xDVzfutvBP849u31h2u6pHnSI/s1bGd3cWOJqjv975+HYI/sEcZ/mv
8RxhwReu7rm78Uhn7lwq8P3t89ks1XnuspdtE9lNw/v+N5otTcz4/bqDO183
TmAWVWMbeB1x4NM+LQ6JK2vJg5dm2/15/CtzPV6129+jXws7ijhq5xddWh54
GcAePXo+7dik56x38hWL1utLcl/+30H7LoO/LOvRXVu8+VLaunj2dMvxVxVO
h7Cpl7ZOsJ3oyL0N/uJ799C2rZvvYilXNvuPWpePP68Z/bKUkQMfO/js3C+j
b7IW+Zf4tndIZU0/bVryw9eBT/w8p2GV7rdZlxnPb017lCLi2+82N+3/n13u
EnPu/pe6iezhkrRqvhewH5ffJX8V+W7h9jIOvGbij139twSzSZWPHE85FC/0
6suQkjWrlHnCGj6dXfrLrvtsRVuTT7uKuPMeiSx1W0AIO1S8/ckqJcLYi73e
wXb9C3OvpmW+7K4WzDYMarTlTUKYOK9xOv9HL9PRYwV/V/zu+UQ5pbEvf3oG
HqsWyliFjPj3zJGfMdiLm9HuTxrtD2F+3676ZuTM65TjLqPTTtjyzcuaty/i
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
ntcIyzD4KTrIFSYUwwiXj3I+PSuB/5brvC27cawSVta0TdzNYCK+M9D5ZH6w
UTnslvitb/xxkNgv3vnexzx4nhJ+7nxdn9peG7ZDZ34R8n3rGG2z6Btgx4PW
p4HtzdAWbz6yz3kxrmLj5vSkjBL8go9TE9uVWbnRpciVV1yTF7POnJ/JSGuB
6o8zD0TIA3P+AwsuU4+zdH3YBSwMEj8++82d/0fHhTsWlyB7fh/IFdcqX6bZ
t5Nz3/XG58gm89eTsO+t0pZZC/a5+IAw2m/1hbYtkzBxkMxp9pqGP1NesVHW
SaJmMXdQhNMMrPbcm6SqsoAP/87HQp/1hqDcs1y2sviL7lMusysZja4pdFS5
VcNbVvZlhsfFkOXV7duHI6pg38oLptOCOcS8PQ9rWUM98Am2riyuC1yUQfSX
MU6+4r7WlAm9nVm58eHpBB5gCJ36Ovm8DZQz07Ya+pcSfcGhwtaZa26NgOq7
JZmPjnSCo9VQ9v0tMigtXO0XbjcNi0tPiizXrQC1hNw7b31kcJV0tfH1e9Pw
5hG/3ibGCsJuztt39/Ueki8/kgncNf+9v158lJLxovsHjzHg6D5ZjpJN06CS
8Pc93VNRwfwsPfIETLJuE24k7j/fd2U9+HO4jG+CkM/3e7k377Br3jn6Dw5h
wyg/fv74/kEIebNHkPSRHnfrrcmYejIIyyZKfJ8qk/GOSv22myL0GCiRUJZK
80cvnmAfGT1AQoPnv4TWjMhjh6LtOf0Ls2CVXNNdmVBK1B25ef6g7Ws6ZHIo
Z4zQroGHN8SzzSdk/k+/cN3NTrLHXVlcIlBbLO1LxpN8RZeGzKohovd1supu
YdT78VXeR5gDba6kGWd1VsKjXA0l1jQ57BkYeyJ7i4Qr+QXfOupWEnVTO9bb
6jg30XDUi6GMeLMKAp+IzeUxl8ofzJCoryD6Mubt7fw57J1kV5LUIwnUFjPJ
s5vkwqAfAukZ+6uI+J76OSObSh9W9L263WZFVCnMiBnVn+/sJfbh+cGpD8Ak
gnoZu6QGcrqh/pL+Ma+QxzAzS99z1UkYryhfclrqyYg6eSE3p1oqQDm6pvCc
zzTRX3/ttkzjlPwnaG+ZXhnbP/IP/imDid36ioyNncQ8L+v0OfSV/wt8veFv
fX8wHcwyM3ymNzaC8PMPn2cNWqF8b0V2SqQCTnlIDy4fHoHwVe6auZvq4L1D
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
MOx+uuTWep5+UI86oe9Nw0s6xvvy+1KGIb0uP26vcSXx/uI3dv7JM6qunrpj
nlkP36sSPiuE8qGkpu3NDZkzwLje7zVdShd8+yX6GPmFceLFhRcGjJNwKkqN
U7m9H3JX2Cx+YSuI6dwrhrNMJuDFhNXDwFsDYLj2kX6BMpngR8mifzSismEc
SikZCdcjyKiZqPQtwJ6Ecae89cOuj0HayFfvWNp6Hpk6sOOO0yy82f5FNiJg
ECR5lQpvOfCgzoBF+NrwGdDaVxrWa0cF51+kdyTn/+pvceo3Lx0Wp1Z8j28d
IOy4dy3PGVZ+FnRomSpI6egD3hviFaXkQTi9zW63UFEBZLeoG0SdEETeeJXM
g9ZUkFrETHWdLIEHB1hr7Bv40YJytW0mhw4bqV37EhtywG//rMPJNnqcx7cF
O+8xKy/Pg4x9HF17PtLjz7MDOq9TuBE2joewbM0BBYXM6JQtwxB+VoHM9IIH
P05WfFOUyYEl9Q1Dxqm9RJ+giLKQ1nXfUjhpk38mSYoKehyla9vFB+E7VTlN
pKUVnDIVz+wLF0Abdv8Z5mQ65I0wqYucbYTkukIb45PTUGX8REDjlgjmPNg5
ydNA85O1FcUPa7fCLdN+iy+MckjerOVfdIOGH/y/7JfSKoNAJ7zO4S6DR+U2
CDVS++C639NSgdYicG72XGnvyYBrfPdcnt4zAvv5vu6LkCEht8AzPZkCfmws
/3gj/fAQKEQmJ3/36YHiyozoYhtxPHDh0qHTzcPAGS1XymjSBRXrAoR/XRDF
IA4msV6tCTidrkKf39wKu7+QJvfdEUH+rvh7ye8m4cjunMqebf3gZLmMWuRG
h3uc4kQ+s9Lh+yurJvRhCnwPOq1/u5wHeYQuiAql0PR88zkmn60Lff1/+zTp
kGfIX8f/7ThIWqmb8WpK44GG3zcqBmnjk5Jn1AQ7YcVTmiMwJIWifom37vyY
BcZres/NtnfCYhLj+N4pGSzl393A3kZG5X1rV7guawJrvtgHLgMy2N+881ZA
Mxl7ZIN4Elc0wSe+LrMvLfKYcUvTSCOHjDMVdQdSgquABT3S3/bJ49Pn23i9
lOjxgiRdsZN3JeTrHzDxS5NHBm2Nsndvybjqu+gX4eYqEFONrSfbyWPLzark
5AB6vGEi73ygpuEfP44FN1u3NI297yXkKX/8OHZ85X3Dru07hZCf/ePHceG5
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
8r3PeXsedMhwqzFc3AwGCvetpI73AtOF8pe12UKYv+O7i3xgO6zTc1ysf7ke
HlF5vT5T40pqtc10jZWbILwlr8qWYjc+fe095Pu7AUYtPspL6JbAndVlHTMp
IjgjO/HV0KoWLGwDp9gLG0BxrYotQxoZRYQmva6e+gPBsSVTOh+7oINZZSWu
40ahgB9Gv4d+QGtqv7vI1BCMxo4plIRSzhEGjhs6JqtAMJRcJ/smHfTa08oy
9khj30/+X3daGuH31lfZquFxsHXrnx4tZz60DHp9zv5pPjA4G6s/XpkJ4vr+
PyzyBqnn2WEg3TgguvUSGVNcL7NIcjMR/jUStS0SN94Ow/6Tj8I55Mdg7v1x
WoDhpecjNjQ/b5uZeGEYjnRyKm8kjcCMg4lhykkufN3geIfFfATsXzcw3reh
rKPMqdY+7ly4wTrIYXBNPQQsWTQ9mko5f2w265xOl8WMrAvGeEAcB/1PmSvf
5MY3qZa7+IsLqPFIUniZbzSuapqE1+1/8F/4mgkWbc8UDotKYYDa6N6IUhKa
2h8W5dqZRVnP6zyY7aRR3s9QXUGXjJlrtZykEjPg7tKNVxdnk/ENs+C+OIrd
tU/m3M5fPI2wR0spkEldDLfJPW10UufG/DO9TDco56O7+lrWTSQJ5F71bNJJ
gYTBsf4SuO0PTCY94yeb8eHF+t9uLH7sePMgi7BEcy1IrG12CV0liGf7X/gw
cHDi4ZxX24c2VUNFoW1LzMlGYGfwlfvmUgGsaKJuIiWNha8uNG/VFMfVTSWV
auPcOKqnUH3gXSmED74Ry2qTxg1PDJgvHiMjg3/Cpj/rMyDx2dqEpqR6WM60
pZhpsgDss16MdMvK4oF2PddJLj58Onh73PYsO+pZ9j7/KFMHAdKBDQpj0hjh
d6Uc5Mi4tSKz3TTjB0zVhZ4ZjJ6C5Vlfz6T7ToHlc2afvhZG3NCw0+WqlwSy
Wf6yPs9DwplST9GvF9Pg6d7NpZa9IrghvGGj2TIu7MyxzszrLIJHu9YUlgty
4fNc3993aZixvMK+ezkvZV/46u69+kAb6DYo3N9KaoDcWAOr9y/EUOuswE9Z
YSksDvlU4/uIhJHvnbzfvPwJoWIpf5ZmUc4JLOUp51posDfq6bOkWsr+sOLN
k5vF4uijd3yYNpwbw5R2Gyx7VADu3tXOmlYNkPGs0trsVzoYxV70ZdokhnfI
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
DxtX+qw71UZG/uzeWK2VVYT8Blfeu3FbS4A7Iy6Ow2h+3Zvdd/J48Kf+555j
58uJebGPe2fEhtc8uKi5QV91phxOW1lurKDIqfRK2TVqPgy1GvoFZsK0uNBP
chhMA6Y0KlcKEPi/vHYL43Tm+esWypnnr1uY14kVD1H56xbKn/e3Xxh3MAm8
VP69hfg8393CeIR5vruF8uf57hbKmee7C/9yXjfyXi+EpikPfP7QBf3em78J
ZFPOAfpFop92dMENjT+3xTx6wNv17sg5VwlUon36R95DFHdd9YmODG+DA1oP
Hf/crYF8Xxd1xc+LUCu4iLvk1BAsz3XzHpjpgHNPv+kkX5DALxHMZBu5PrAV
mWA1OlALnRPdy19ZzYBH2stvTGKU9fVY5q7OEUZU4yW/kDGegezt2xhvHfwC
1u0Oo1vT6fBCEmhLHZRG2cX2O6qbBiCYSYlGLa4Y/C4Mj4yQJXD0RYSOpwAd
qtklPE/7Wgl77ymvC90oiNEWMmVr3DiwsZVRlXOsFN5YruZtoJQ/Ui0scWTH
MCjcDv/T41IKO5xJYizMQnj4iZI/Z/UEtJ9kr3OV74XbP4qnT1LOuaITLFe9
yoYg2PD4NcnqehAxljfoT5XAjetuXbfdzIJ9P4siRnkKwdlrkUFQkQgGHxFf
ES/BhCzm09/bZRqgyz3txW3vIq05v9w5/5O/eJNWzD9+MnP4v3qysPwwmFD1
dg7/l79xoRxa3EjV5zn8X31eKJ8Jo6j6PIf/y8e48Lvz+jmH/6ufC+szr59z
+L/6Oddvf+s5zyO6sJ6//qc/5+LbRql5nRb2f8w/5Yu05niidt5yWhGvrrAQ
f8uLJz4G5Fw90kbImePr9kgJO7y8SpIoP/fufJCax20O/zdv10I583nZ5vAK
aj6svdT8a3P4HE8kHzXP2hz+b561hf02nz9rYX3m82Qt7B8yylPzZM3xnOjZ
Xc9q0uiHevrVD150FMBC/ZnPl7dwfPP+p5/neNLm8owvlNMIJR/C4l6ekvtH
39rg82gxgxtKE/hc3DDjvejSjt0dsAA/2wPLPqSdKPaWIMp7UuOpjajx1Au/
Ow3+Hiaxa31I/+j/fHzZwvrMx5Et1Nv5eLGF+s+GcdR4sYX6yYmREyJLhrYM
L5xHPCR0Unq9Zce3/oX9fJOM5uul+Y6W9xD4HJ+ev8v+78ydPP98dz5OduF3
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
vZ0DzzGNHrhUR8+R4SSMoVLTQwedyfAES4x775chAs7Umed3E0ZmZpnFWDIy
1EattuC9PaCgvNt7Jk+Y2M/eVfDI9f2ePdARVnN7rlwcf9d+CNn9hRwlV2cU
Kgi/N8PUWlcgRByrEl9V7gokR2X43PHrZzsxL6C2fj/x6vr9xAMPjV58HCfs
L2WfPlv9Soj2iyMn45+GIv5VuzU7MeS1z8kczSyH+49Iz+oXZcDeMyUWtaRc
yPUmjVnEvg+cV793bx7sgpUDsi8aeIXxkchqsUd8J0w+cT/Bm94Jg0wJEjNB
nHjRmqfvtvEsJARsJit/NwhTQkZ/vjnRYe/SZJ4H0xIEUkrM+b+cA6dCqV3S
H+kwx0Mulvf4Mjznl9gWsJ0UZRYVrB1u8KNsjsPg674lKI9eOppGwHVXgni5
hQN5MHrngctfc0mwnrv/dgB9P2wOuFeQX82OvKY01gwZZCi+0FVbfG4MisI8
zw9piOKhI7tvyIbQ4J7tWk53df7AwKkXyTHJoqg4vsPP3poW+2ViVLqbayDb
Q+OD6RVRdBq8krdVkRbvZIoP8F6oBRYBrr7ibaKoZkbnTetHgh2SF3M/0DSD
geLT89+URFEn+XSBoiApJjtW0tvQtcMu9Uh7PZIFOOk5+9HueD2cWLh/e56F
GpMfscvLt270H26AglC/+2+iqNA/pyHf7CI9fjrr3tRzMhFmHb1O892YgzMx
Ndm0tjQovemy8bfeJghYPkJPab4MaZllYc6xIqhUb3R/KNifGI8yVZIWszKb
B0qxc/GhU93wuna3zZ0TTFjh5nWzYdsC5Bd4mft/6oIbDJfG5aLpMWq7wkdS
AWE8kNOoI8o6C0zFTFm8XzqJ9u3Nuv/NkGdJf03/nz6R0TmeRL1lMiy8tFfs
7MtRIPzHA3/mxPBbSm+o+5deSA2ove7uUQOsU/Fuym1iqC7U+6HYphsiShul
v1f8gC6HHJ9qM0GU+NKyWdBvFh4fdmZt0x8Eye30A80k5Cgd/eJb/tkpWNGy
ipFwIsWdZtXZXVtF0bYzV2+MnRSHsyK6H/C3gyrrx2mGh7zovsg250rwmwUu
Q0ZbDvXB2PWk7S6i3Pjxa9TBh+4MuKzHcvjj3TbiuSDWSazny8p/FJHGDc+A
4PyxRGayP6A0Q3GO+gMNEQecidabC4juhielnK43O8jxRaybpf3IArBTGDI8
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
wfliEmp8ouG0exRa4EadogTsp93byIYTOjfBW4PTzesllAk9J3RuhKKQii8O
n2k4P/o4Vn0c27863LP09qkDKoSez+oKR8fq+CiYhx+6ITmZzyyi5gmXTsln
Hphdp/CG4v82z6eCk/5LUfVvhVOFfLXqNP8pOk/o3wLhcx0/LCH8l6fq3wRf
L6RfJfwfWy+P698INbXaDoT/Y/e/jb/3euAyuISE/xSdy+Dmx2kU/7VCWsUn
/SdDogm/4hXVHsAiRWNFdckpOnfDqKU7m52sFKFzw/j8uQsSc3M/PRKUJnSm
/X8n183ybGSTIXQWXzx4V3VFJyzKPL9Ip5+G81PfSwcMmlb3H26m3U8hhEvH
81Tt8C4N3ryukCN0tqTmCY9PyWdO4D1wV0swWYHwX4qqfzdse+zgY0vzn6Kz
9/j77QJZ9W9LJ/2Xx1tPymzG/C9+qDDaQPOfonPM+HvvhNsqbu+1af5TdP46
LffumP+b7+UcJ/yn6Fw43h7aQUZBZ96k/2SI5BE5daB4ECRtpGSqdgkTek3o
PwiblXi6gsRECJ0n9B+A21VDaabfaDgbTujfDyUPWx6yuYgSOk/87Qc5+3KP
BFUxQucJ/ftgm2aW5aEcMULnGeP690JY05dZaj7ihM5LqXnCiin5zAl8ELJq
+hMrCf+lqPoPgkhU403Cf4rOE/oPwPp9pYcm/Zen6t8PN2b+XkH4T9F5Qv9+
yG9NUib8p+g80e/6QPLFi8GDNP8pOn8Z178XrJ0f5Ewj/CfDylqeQ6opTEje
E5by0JmX0HlCTyZ8EG2w5egRPkLn8fmGMBPatZNblh/mJ3Se4I+Cip7faQkn
2nkqElX/EXD6IMrdNY92nwU/YS/zz651W94IEjqLjes/DHNY3oR81ZvMZ86g
5gmvTMlnjr8viv8arzmXTfovhfeK+1rH/K8biMpzoflP0Xm8H1H8j4TVeyf9
l0fHcf1Hwd6nZVCc5j9F5wn9R+CanUlyJ81/is4T+o9Al+8tQcJ/is5Px/Uf
hg1RDZsm/SfDx7F2+4AVLwtVJXFu5SB0Htd/BSvutrfVcpTgJHQZHx+bWXDR
x6qbOZk0nA23j8/3WFBY3I51YQDX3zrrsWDdfrLjveW09s2PLuN5EmZM/GJX
xMnMTeg88ZcZr0lXGzm+4yZ09qfmCR2m5DPHcYr/6wvUbSb9l6L2F1bU1IlK
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
Q7VPffqayPKZ83dufPukhfbDO0ESf5vfsZUefgv3iJYY192x7JI6Lgo1/fLp
fhLlG7FDfPDTTpcnQ1x6ocJu1MRTdE/aPI0rpzj/HS3sWj7/hO8kEi8qonGq
XUIeWkIP8ZuW95k5Ndk6ieIkXnTL1d2ppwH4g7HC+U7zhjO7De8aTduT/b10
nGMzzWSwY8cbvSruWJmK+nxzuLF7AeSROCLo532vA9zGXY6g4+0v6OcwzVl2
liTOz+EXxw0YUff4L/Sr+8Sfz6fAeb2G4j/y0Jz2Z2r1DwqT0FOM6nrt257d
KY+2J+eG+f59rn4IjKY4if9vHjpyxZ9gkFvSz4arwQtuhcB6V1PY2xUo1+3D
l64zY2Ef/zuPTSuQcZcvDr2XxlH84l+/MlYVB3fbcmvYlgTKn/sKv0ANjyxZ
kbbYAPI2EPnx6Gwc1kpb2Ef+9jPzhb2JszruXrrqQfTMZLADBXuy66zIkNR4
0BsKP8JLGzfacsdp3zh4V97EPc/x2xYtXPdxrxmth8C6rnT0dBnB2Zl+N2YX
b9gVSfvZnBZW2EnHGBsPiRzfujSN4uR8rSosbNvHlpJ7JqvrYvtDEZnhorrs
5Dxr9p3zIeunS+/5SOxJ6o/IcRPh/OhxrNeQi+EfKK6j+I8IpL534/f5qh8k
/UQiW6HeGZETfp+NR3fQ9+iQSjh3JvqzPOXBOpdXjTDByfnCuEGtjHvctaA4
308BOv/dv7n/LfKuygLbCH799el/3retkyWhR36vicQBogMvBVsuhv2J/12G
4kKXtmhTYCKhpxSNzx4+bdoVUwn+B7muHhvbqRm8HyHnTU92b87oYWIo6b8K
/bfPxd/xGHmfQs61VbHpRv9fs18Ru8UMLxTiDJ4N735M3gXnFKT9wY+FZydc
hPcUJC4RuuKiQV5dXYoTv+nbtwHu8RECTu+xyOPtDwU/3bz8hr2dLrwjIOcg
GpPKDB2T1SlO6iDcX3530eUl8J6C9KNye4dZyU6w20k/yx8UmP2+CXFy0s/S
i69VF3pmsXLuoI1nOXe70yEF7tuT8wWvNvr+azUB5+dXG9cL9XqTskSFpUd6
X4vqZ228qSTBt6464KR/F7GfSOVZG+9d+r617thUSiexGw+curPi9x7RfXXB
boz1LdEtciynODlPfNKpz+ihiWA/SOtzEXmIF/aFsZ3vr43whDiJk3BekNQ9
/khFtST+zLVv8Wta842fiyX6oTY21vGo7fXpN8UPCvcNfCssWvweVMzSI/su
2X8l36XnL1AvjMfJuVUdrLX65Ox9XWIl/KmDuyztMCLFtpCV87/3q0dmjfvP
tUDCZ0O8tfXZQcOeFrDrepQRXtpuxOPbCO6fkPOR1z/ymhn3ktwn/JuPpK+t
6YxYCf7CGAdddEh6EwPnocR/r3abvNAjIpvt/4cx1tzzIDpnNPihrQX96S/W
n1QP5KHELt3T1LqT+w1mQhypCHU8YNNpTx24L03OtW2DDhdNuJoukQc1fJyJ
Awv22HtN/C4/Zpx9JbHDrem5mEHPQcW7jCBe5CzMY4c/KzXaWX4Ce0yxfg1w
WkKlWv9RH2n/KsIPe29WV1Zfg4x3sTAuZ/Wzq7Z8aEBxUod0z6RzP/slk3tH
RrQ+6UOhziDbnlsnVqtdVLzr0n5I3ZNzu1xfauca034IHjRxZse0D5LzR87e
C1L3KW7dr0wyj2p4s6NbM5ez2rR/nm/quNuy8ru+P7Ro/wR/pTUqpeLkD4k8
a2LfWbYxnp/VJHRq4To7NKtGOANOzkNHWSzZEbKkSiInuviA1dcHW67+oTix
G0fETK57TQPoJ3VbLm0xmP1oUSmVb2n9QYYP3Lw7RXbK2zkgneJk3qddNFhi
NwTOvchvUk9K8Se13yT3Cug6VcGnfsdkHmxN/n8yjyr4wLeFl253JXHIIlnd
Bx6vQkGrix3fLVTBb1rsNokfB/nNzgv23oqQoibdnqjRfsi+1lioE0HaK+wr
J3XcW2vQmFXbod7PRB8UkvNAA2cWIrMGg/5Q+Z8k4MGTnnd665NAx+sv7GuP
v7/5sSNSEk/g9rXj478cOUPO3+m5qvS8sgo5jLp57ZytFn6Ss3XxO5Nyyn+y
H51+7VzrfmM4d+B/S+6/0biEdL0b0bo/lkL9SjqucJ/MLU20sP9AzzqrcQzF
s8s2n1Dn7NhOwwzHr7oC80jkwbl27SmD4iHvA6lHaadlFTxrThHb3scQe9pk
r3x6Es49+TiqIZ4R8t/2bViC6xpjj1LzsA214TyUt2eMcd6EDXMc1oE+VH6+
byHYS9rYjdnHLWT1Fpl+uH2n55bx9weVg33eQXVlZplBBGppq307UeMZqw85
O7n37p3GR1Y8l+g9qPdE+K/03h2N0+pjv2lX3YIc4b6rtA476Ucp/Zz85D7f
Nc3wuTE2GN9+UcACYoc0qIE/1jWcdzdQ3j89x5fc0+ZwP+GcpWBHn+YvzUNY
uZWdzxJ9ootHh59q4P4NcOX3N6xpP4vEcVpu3yF2wpFWRmXXqqNpP2R/v2N9
vmVARQLbPydXK5w9Tn0Kh/tgJI5K6jcxOLe/+/YYrFdwMYYdF+dndWlp/X6n
X7SE/ro4+oTH3NstoD35TepqsXIC9Z6Y9n/tDWOLO/YXY1mcs3/WLXdu8PRp
MstPbn2tDUrNSq6U6HNR3Trmu5xd9B517fRv92+Unya1+iweOigBnQp5MeJg
APgnZH9k3mWowDtg5p0FOUfm5Kqn+N0EOS+Wvncg58Ky9whVNdzzr1J+f57D
CT+Z++okzuBQC187Hrpy70WQW8LP5y235r1NBDvHX+BnW+OQzW+GwbseYmd6
36u3bNu/5LxFyIfpZoS152Hn92cSKU70VemgBeVH+8H9q1hBPnfG7P5yamgQ
xQ8I8qmJso6eavWO5Rsnb17v9sxtpZHCjje8Ln454EItq3+S6XeJ/Zm3bKJB
XvNYipM4wNFHfi2m9gX99lCQ8y0Hp+4I6vmG4uS7dp9U74+d9ZriV0zP3u3h
X4J+Xjee8+ZMEpUf1555FS7zuf3Re2Lj4Ilgf5J9kPHvqD2jovJl5qms+GZw
DkXsvZS5VTN/zaiWyIN8H1duJ+jK6tyR9krjcn/fUSo796FyLj3HqarhXKZK
+bkMjQOHoZcLW/moFYDeI3UkxyztcmhWn1IqtwWnuu9aWysNaXfsHfjhx2O6
T/Hx7Z/I41jKkee3s+i8kLjEIO8/dkMawLwotXvp+VcZesvc2yH7iwp+kap3
53JXOFdVGh/g6BkixPdS1bS39P0N909I3C9bjHPjIvdYTjxfa9ZlKcSxw8Z3
tVepqEbnEyf1G/oD7gmTcwfpPSUyri8OeTN7JUv8d07PDH0f2Wrd41TajzFe
c/onx++byKdFvQy43y6to03wR0Lc+7nF428VdmA/kHj7KzFO5Upy7kbPlQqQ
g07Y5fAZEP+sFuJCYeuttRsdj6TzpTTuwbVXag9geT16Iq9K9T/lpxG+Jn4H
xPXvLeyn4zqNbmTQCd43NRH2i/M7hxq82/ee4iQOee1j23xTu0D6XaX7Gr1/
Ln2nQ/wAyfsaeq9Pev8wDT0bEW8462cq8rr8afOhYZBXSvn7uyoUK9y7MPcL
/tarKfgLuqeNsqf6fEMlX6sCd5pDnmEib+w9OiP6LkNXHK+gcS0D7OPaYXzq
PlgX29zz6t8wzkPfvrv6OZ0A+d949km7LZyfNu5GuYFtBtxXJ+cCVjYTq/ac
DqXyQORndsIsn9udMiR+RBW6s3DrCLMNwLfB792nNTepg428Vv2cdPW9hJ8G
2NXtg/PHNsG0H6LHjHzP1l9mEyhZR5J1wa2fW2ONjpsFaOBekVYTAmKl+kEP
nwm52+p5INyLUCq39JzuJxqqfS/2fskfihM9Zli724rsBhWsHErvE1K/VR1P
fjV4fsMQyBdquTLjQvJ4XfzeMA93qQ5j9Y807kH8Kc4eGCe+p0HnHeras3xT
wd69OpcGbgX/TqldTe5Jcv7I/vjixLVbIykeK8QVP/UYXLIjDuhR/g7RiNpv
caubRRZEQnul727oviN/P0j0+bCjPuEPt0N8gf93VTwm8aD569mlFCf7LHtf
3YLeJz+yOLp/9adUipO400EGN1NOPycnl4LGb/9vsCEuLnvc2Or6J7re/SYZ
v/pzNQ6llbi+rGUu5Hnj8JjnT3sErQxCr089nobHNcKknzOZ605nPjLEOvMX
La4TBe8j1p7m/qGZMS6+PyzoYkQgxceM5X4O18WxrSseb7cFO6d9rdf2tfpy
dLZftnD9U1hHf+HXd4zxh0VqDaKHvKV4ypnsmw0P1cFhL+f2Mz1K9HAVqrdj
Wv0dyXXxel27zff7JFM+TC3a23NvgwhkFdmzq8mf9yz/VfLQwUOVISmNIC8N
v47y0cfjJ581mAznodFCnEpl/tWw+nbg/w4W4jnF9UbuNEmKpP37C/GZrekn
PVV1ymn7t2v1A/Q+FKFGPTs32JgMeu/xGq0Pu1oXopv1KloOmAv5Ky626G15
9kEJ0mp8ueDZc+ifxPm3z9bc+3Mr2FE2wnn99uRT+21fkntiJH5YhMLL+5dk
NYF7Ixcjoqe3jylFr9zCumloFbLyY6yCa7fuaPr5K5wLOAt6+3t+/29Ttgv2
5N/z3B6jYrvaf0Ee58yNtVs8o/T3HrOnbcVhdXzHqueJI+FwDut65O2JIa38
0YVp6T976wfT/jton5jc8N8stCKrbcM0V8iXqCqMT/vd9xktEuBcpnDHm4Yb
fS+iutO95z44SPRvGuLvw7xE811/54Q+g/opAdd67Ot59DfK3qM+NDtFm9Lf
wPSz2TwrI9zF5UM9p+7Sd7vx6O6NG5tMk2wEeqyxpxBX6dMgNSDLC+Sf6PnR
Hx8NfFTnE50X/rfkPSzX/vPLbVU6y1VwxImkA+qjkinfdNzWqup76mK3QV5v
5xwCvRqzseX6vrWMcNFILZvhOz7Q/g2M8oZ/rXcHtVDxeF/Umtzfs8A2jaJP
tR0Yj3YtyFj4NZ6sFw08+sPDra0CMlH9/De9G41So/Lx7XN63uTRoWhpv9lz
lywnesoM3+txfN3Cr0loVuCqn+5L4H74ltXqCb1/5KD67hbbr5D7Txx/fo+O
2+zsUI28HU0qfnX7RtufqOw+pdH2O0hrXXyq4TO4l6W1ovrxNI9UtMvfq22j
CXD+cvfC68MfhyWgIbFfnWyfplF8Rqu261NNstH6o/1Ptt9B/IUiZBIS/LpL
/m+07PQQc83hEJce8ryb31jNT6jSKb1O1W+ID9yd9cx1M8eHg66Dbwash7xJ
D/oen19+qwR5jglt0eMK2Pn/HvY2m76gFF3vE+B1JCqHjsvpbs7v7zu0cY+1
GxN+3IQ80nO/n1zbO74Ioc2pkY1DUul32/a56bY+MB1pTW2ZuP8V5JUa1jQC
63/6iWzCElpuugV5w95en9J21qBCVB20DvVxg3yJM9p55Pq+jEcj3U/Nb5EM
78ceVQbX//wuE+GAXbWO+pA8ita4qVPLL3uKU9CQi48txyF4p7Cy57UNx3NL
kGMd92ul60HPfB+5wTAlTgPfj9dPankln/Y/Y8vE5OlRUSiyXsLXBFvI0+h3
duPWN78y0ZeFn+zqrYT3v4tLVJb2KC9Cnj4/P+VcgHsjWprrmwacLkD968za
GlFcQPk8st1yjzqxBUj/yf0F1unwviZm0fSLwYlVqJOmtc2XOeBfBOy8fLhi
JLefLlx71D4A4q5P17ZfmmSnhgd4P69rdQDO6coCUmcZtklHaxe8cqt/orHA
TxPcurp11eJHmWj9i/oZkxb8pHz48Ui7OUqsQMuavnTd7QX+7y0Hi3UvXsej
9//13jPGAt6pNbwyMf9iRRaasSZtZloD0b3Wqm3Nx2T+Qv565/6tOAJxpE7H
XVWz75WhQyO2+J7qCnLoFdU9wytRDeubTyw41gf8nZ+DgzSX71fFqOChVmYn
yKuQ0mpeSLvy2nhx7lzHPQPA/hn5bf1EB8N8pP3o09aXv0MovrNiXKxqowLU
yDX45YUqiLO1epq8pFdmIQpR9Zoy0xHONTpoTwtY2LcEpXpvXfrQ6wel8051
v8wLmdrYNnBVkx1pEXTe97vfXBCVWogejrCv3vyeyKclflXq+49TXg56OPXa
xt4x4BebJJ0N7uNcioaG9dZ8dRz2o9sNTtg5Rqrgo/+gVuc2wvqaN+Tjuc+V
mvhG4bPN/vPALgo4pd+sznYDnO7xunJedxL308DJ6lvN7ZuHIK3EyH967oG8
Xnl5k8tqqaagHWPO7cqrA3bUm+qxm9SuqOM6IffO390P+b3XJV8Y2Nk+F03N
/nXVaQjkr9u4/4Dr5trq2LOrdbnHN9DzQZobk9/P/INe9Wtp8YXEhTh6FsyN
mnj9VQEqyF6vt1xfTZCrKlQre7deSHAxave+wbOP4YL/xo1rw/BtcZ1r/0Fr
/JvXWz4e7v9smlq7ML2BHh5y9n3eiGXEXrXGG+Ymex2eboi/r7t+aoMz8R+r
0PXSLSUj2lSjX9oXlrczBTvBfMmvzH8cNHCtE10u3cjMpvMYnZM0y2pebXzR
ydVbb0MCxe+O2uU+41stfOff2WkVI6Np//Ondg76h9t/fb9ljTtE31+bYM2l
s0uLPdNRSuC8mc9j0yh/1h37x+vKyp9o5JqboxIbhlG8+7DYWhvCqtHcfwIy
YtvD+fv0sOEjykapYPPSKV7TW0CepbTfU5oeuf8N1d0+yfvtnCCK95jWsX4t
Tq8+KFyh+Wcp3FfZ2aPX0G4xqnjif59u7Tr7g7af7toz0/OZKlY/+q/H1Q/p
dL5Wa7S2b3owHZ2NnXZsdDKcH63L/nR0SeR3dMTWp8eQT7De+13t6xKyoRgN
DPZUvzgE/Jqy3o06tWhfhProlszy8AR/tnZ4xqZ22b/Ryiefc1YMhLxV/5zu
3ufMCxWc7Hf3/YdzcN5xcViVQ1AHf7TYUG9qmR7EUbOcLbQ9TdPRo2Qd/7K1
oAdmzf6ulTUsDX2Y38V0Zexjip8yjTVKWZCBOuStLe58+yvFZ07r1qpJaCia
cD+9sOte8p49DVloXlj5LScG6SfdvfifB/gLmhu1jh9t+h1FOoxeO9IQ8ldb
LBn440JlJnJsvfSc73VYX7+611t1fVQJMjjq/aDlZIjDWOW66gbNVMcndhQP
KG+XTMd7/OW+21bDdXE7r/5F8xeCP+U1aVm9Ojuj0euB5pctV8J7Setr5w+r
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
+flmw8TXn98FQ74F0706i1xG6tC85AQndib/XXKPCfQte24rjRvryHB2viR2
oB/kvyX3i1h7G+ad4acIZ9e71J7JkOGM/IviPF5iv0OEs3FdwNk4EuDsvRTA
TRg6IY7E+jWwL7DnpICz9qQE/yG/hzBILCcinI1jSPZHdzj/cu797uGlokTJ
PQSI2zdl/FDAvRn7EPCBYr9GhPPfk9snrP+rhVedrDu2ckYZYr8L8Xz2u4Cz
3wWcPScFPbyQOUeW3KMQvZ8l+H1GrqTnYsmyfZm1N6TnCMkyOWH2fZHeYNqL
9D+jZ0R0LmTWF+grxh7j5OFtVt/SoZx+Zvgg+m68WH/KzscBJ3qM71dYL6J7
R4w9zNHzSrhHwZxfiO5XMHFC0XfviuN7XP+/bBMDQjl/gTlnFO1HrJ0D/Gfi
ZiI7gbHHpHxYJL83QuoV8f1L/W5ib4CcJ4jjvSL8FnNPtQzFCvLD2hUgV33E
4xXZPy/F/YjkhOlHKj92cjrtxHESER+Y/Vo0707i/VTU3onpH+yKB2L+iOSE
ue8kus/GnOfK7rkFyvjTm+GPdL8IlK07Bhfxh4n7icbrL/aXReNl9jvRuJhz
BxH9iWJ5ENlv7L4JfGPjGODPMutI5Cfm3E7I7XEM8nKo/ew3tu3iaqQ7r14p
JnESjj8ThTrLrP0P+qTnq13uEFeBcyi+zo38fhRzv4IbV4Rw/5OxD0X3Qvn6
x3AvXUMYL+sXGOGTGl7bQ38FsffTROf42O3I0pM71ITxpqHxFy4O/1ZcITmX
T0NmKxav9bqeLjk3l56f5srkisFF8sPyDexJtr3UT8mVySdjX4nsCqa9SD6Z
eeTwTlMn3Am+moUcxfP1N//lrK+fXnXPkMTtpfKTT/UYOXdbaP65T0sr4v/m
oXNzvVbHXM6WnDsA31h+ghx6vx6WE2okx1WYeYdzQ2a8In3O60/yjkkfn0he
q9Xm7HcUUwN+bXp48Z9TIP+zTt3aW76oWnKOAH4Ku76kdmwZlQdy/42Nn8N6
cblf3fvNa7hPtSlVvfHzGfFII+fezkdBgB+/WH70DIcnOuvd/NWT2P9lqODW
/qVDBmSyekl2/z/wf+s3Ed9YvxjWKf89OxnOnu9L9Y98PfqJ9YBoXTPxIhHO
x9lsaD+nhH76KfYReC+s8Wv++tLvQSw9Ir3K0CPSA5YKPwjy1DVY9CRlmo+5
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
/UCWb4D/Hzmmcqo=
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1: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
fQz2z0vgl4Lr7Hz45eDaukDXH+zDV8NvJWu91mC5zL69lj4n83zrXPKc0r0K
wVooL32UrivzXO0CT0nWa9XxycmaLm+/Ori2ViIv44scnXme/ApPZiwjrwrW
82PIFXjvR8Eavia4dleW/2T8Q10X4+Uze/7avJ6UXFfk5b4M9ucFciGzD4/w
r8Fe/VTyYZn3CAk+PLPPr1Pyt9KcevDU5Dokf/JLsG8/hfxmch2SP6mfWUN6
83p6co2UdtXLrOe9Sh5Vc7sHXDdzze0p/8nx75JPidZK7bOW61kE74NWwcdk
XoONGTsus840gY/PrC1N4RMyr/1mcKvMtWA4fGZmHRsGH5tZl86Au2euHZeX
1pTWyHdF1wDVmssYOztzjbgI7pC5LoyG22euIxfCHwd7m/1F1yfpxnmM5Zm1
sYP+nrl2XFNa49KiVnC/zLXs6uCaojryBLlqZq1ooTmRWU/awSdn1qvWwV5C
838Wn1szsz53ZKyYWd/a6J5m1upOqtHB/uRTjg+ZdawtY9OC97MrGP8k2I8d
KPqZyDfuke8J9mNfya/onkp7i35e0qIt8H/h06Vv8N/hetJe+FnpkTRWninY
D2yWv9FzkrbLrwTvi1cWvQ7kWzbJ72XW5AbBa0Va2ii4ZyC9bRi8PuQnvy1p
gubPMvidYD+8G14Q7J9/LloPtX6PJM8P9s8/Fb2e5BX3wfOCveWP8MxgL70L
XhjsvX+Bvwj2M0eQFwV7p8PIK4M989HkxcG+qxx5abDvOpy8JNh3ldc6idaj
k+Vjk6+7JnxY8n2vAX8WvYZVQz+B9wfvxz+PXsOqdx/D3wbv/V+Lfq7yAx9q
fxLcB1gUrWuqO0uj9V21b768e3CtXFzSFNWpBdFrXnX8i+jnobq5MFpHVOtn
wd8He543o+uK+gzTomuJeiDvROuR9v7vwXuC9/4fwfuCeyNrg/cXx5JnRNcS
9SimRtcGeZ734a+D+wxvR9ch9RmmRNcM+asPtL8K7jm8Ea0j8jlvRdcw9Ssm
R9ceebBt0Tol3zhb3jTYA8yBDwXX9Oeja5j6Ns9F1yH1f16JrjHyVBuj17x8
y4bodSvvuj56vclfLY/WMnmGF6Nrkvo/7ZJ98BB9TnSNVP+nbbI/GKw5El1T
5RUnRtc8ebx58I/B/mRTtBbIX22OXv/yS1ujNVdebk20P5anejW6XspDzoV/
CPYqr0evSfnGr6Lrn3za6midle9aGa3F8oTronVHvn1VtC7LH85I3v+oT7Ui
Wn/lFb+M1jLtuconr7GcsR0lryN/HpN7H9p7fhut1/LY+6N1U558Z7QHkoff
E6312gvsivZA8vBfR9eDPfAP0TqlvcyhaJ2qRt4eXcPkIX+M1izt46okr1vt
Ww8Sf4Orar5H62kVfX7y/O8J/xytj0XNweg6oX3KCclrXnve45N1QXvS45K1
Q/vWo5JrifZKFZO1WPvfvdF1SPuOY5M1SHv5ysm6pv1+1WQ90j76mGT90h78
l2idDeRKyXqnnoDMmLS4up5tcr9M+9wzkud/L7hxss700LNK9i7qM5yU7FG0
7y4m+xL1JbLk3pz2jCF5PatHUTd5vavPUJbcd9N+s2Zyr037wZTcL9MeNk/u
tWl/Wju5f6d+Ra3k/pr6EnWS+33qRdRPXu/as9dI7vFpn3tishZrv980eW73
gZslr5e+cJPkNd4bbpSsn93hhsm6pH5I9eT+o/bFrZJ7cwM115L7d+dIP5J1
Sf2QNsm9vHPhBsnaq95I82SN7Qe3SO4t9pcusherW/CcuVU6XvBcnRTtTcvI
v8/tSeRN+vHejuTLGP9T7v2a+lGnJe8R5eXvzd2TVB/svtw9PfW1xubuMap3
V47jZ5TOfwTne5DxlrwewzH/LLhHd2luzybv1j23J5Q3vBt+t+C+nK5lAXwt
730oN6tnOEDaAN+la4r2QNeSH8j9u4B6cffk7lWqZ/ho7l60+mMP5+7Pq4e2
L9p76fven7ufr97dn3P/1qDe3SO5f19QL+4vuX+PUO9uSbSvHaDnnrsnrLk9
NLcHkxerlvn7duU6f4ruxagWD8l9T/QcWycfNwheG+3PxKck9zvalrRBz3Eh
3qBach9K/aWjk3tY6oPpNxftrUcx1h/+Q8HzJzH2mj5L8yz5eeiaW+fuJ2uu
tsjdB9ZcbZK7xyLN6QDfUvBcuiB331h7xra5+96ab1ui9yfnkUcx/kTBNWVk
7v6z6k775OvQMf1y9701z3eXuTclfT4zd09b60hzR72+nXzf63Nfv3q2N+X2
wPLCXTlnU/IFjH9dZr8nn38APqvg/csNuXvR6gPfkbunrf7/ujJ7SGnXbbl7
1/qN4MbcPW31gTXfNSfrkreVfqORJ91aZs8p7/RVmX2ptO685HmpebinzD5W
XuvT6HWj8zXO3f+X7jXM3fOXJtwuf1Pw7xFbeO9pBe/X9P20Fi7mvePlFQru
k0/I3ddSD/zK3Ht89cnvzN3DV697d/S+XffnN7l/F1BP+6rcvxeoZ/5/C3sY
rw==
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtmmfAFtWZhl+7YsEuM/odZD5Fih0RsSHSBGwUC1hi77272USj6VWTmGx2
k93sGnvH3jtYwYYdsCFYsMVe97pyz4+Bc51n3vLNnPM893PP2+eg4ycet3in
09mMf5bk/0+rTmfjbrh0OptzfN10Oo/36nQ2IDa3q9P5CD6Rcx6FzyF+J7wW
fCJcwc9zXMB4G+aeJbY97zWK8f8wdyixZzn+wHgoc88Q/4TjbMYvMncesc/g
y/mcCXzmEoxX5/VfMp5MfHnitzO3LOcfBPeA/8T4Cs6fxDlLEpsPr8lxAvFe
xG9jbhn4QHg5eDbjpTkOgJeF7yHeB/4+3Be+G14X/je4gW+Bv+O994Y78JZ8
nw2I/wgcAw+Ft4TPg/eE7+X8Bv53uB98I/wZr58Af8H33IXzv0f8Nvhs4gs4
pjHem7kFfjbx5RgfzFxN7A7mesJHwCvDtzZe6E5nCv8tVnKvesEndXLP7iPe
Df8AHgDfBH/O50+Ev+Tz74J7Ez8TXo94D17/DvFR8NfER8C7Er8MPp745Zw/
j/hW8CvEr4XfgkfA78BbwvsyXpzXrM1rt2hyrbxmFTwY3sfvSryGr4RfJbY1
c6/x+qnw372WxHcgPhT+HrwUXOCt4P3hJeEuvxt8urcC3gLercnf4t80GJ7S
ZK2NhofBV8Gv8XnbMPc6nzcE3o/xEsTXIX4F/Arxocy9Svwm5h6D+7peiG3d
ZK24ZnoTGwYfBq8IrwffAH/I+eOY+4jXXww/D28OvwhfAr8AD4JfghdyTa9n
PIXXLyR2KceLxLdg7mXiF7lv4E3h5+EH4U/h3eHPjXP+c/Bm8AvwIvggzrkD
Prlkz7h3DuyVvdEDnsL4CI7V3Y8ch3LuCsS6+f7bwYe4t+AGXpzjZc7dkrlF
vP+2TdZiD+J9iF0Pf0B8LHMfttfrbv4/nLnViE3jeJ/xTsQ/YP5FvtN/Mh7G
658n9iBHX8ZnM7cpsTVr7jH8e/cAPJH3Oxy+F/4ZvBt8CHwX/GP47ZK94x56
m/fanfihjO9m7ifE5nH8H+OdmJtL/Gbis/g+/fwbzQ/Er2Q8gfgb8C3EnyDe
32sCXw8/DHd7z72WDA7j3Hvgn5p/4KeJbwj3JH4b/BQ8EF4JvhV+Eh7gGoFv
hB+F1zffwDfAj8DrwcvAU+FTeP+Z8B94/9fdc4x3Y+411yZ8ITwWnge/BP8X
vAP8AjwX/m94BPwyPAf+G7wj/JJrzxwJbws/517i83bimr9prif2MsdfGQ83
BxPfA/4dvBrnzIH34vzjiT3C3O+IvcFxBePdmXvdvQz/Ax4Hv2Iu4PzTGD/B
3AXERvM+R8D3wT+HX+O4iPF45l51L3L+6YyfZO5PxJ7j+CPjrZmbTXxP4scx
fpi53xK7zGvA9RsMz2F97UH8WOIPwb8hPhk+Bp4B/7pkjW3C8UmVtWfOMHec
QXw7axy8DnyaNQneDF4bPhUe4uvhGj4FHgwPgruq5KBt4G3cQ/B/wPvBT/EZ
g6tcw9Hwdt1Z++6BA+CbiX/B958Ef8X334r4JsR/6TUtueYjq9xT78V18Nuc
PxJ+1/zF+RsT/wW8K/Ft4e3hv7gn4EPa9dB4j81fxIcQP5+5vXw/eAbv16eT
erk05/Ujfo57piRnmjvNyYfBfevsJffUEfAk4kfD0+Ffwe+4J/zbmHuH99ul
ybX0Gnmt3i3JTQfC7zbJUVdZq+rkrmmc8xDfx7K2lLUCPpVzZ8F/5Nw32/Mn
Mjff2gPfAE+F32qS83u39XpYyd88qcprvBabEK/gk+FBrV6Yzuet20munEL8
ZOYeh39P/BrmFhLfEX6b671/k1rofhzJuTfy/5vEd2Buofm9ZG+7p93bl5bU
Dve8e//ikr1uTjG33FFSi9UEagPXgPf2oSprYwZH//Z+bKG+Klkr1nBruTVp
717Juebeh+GBnP9jztmKcx+CB8DnwlvCxzTJXeZUc+th5jx4f3hnc605q82n
apNf8ppnOskR5oqjmuRec6y59kj4zk5ysrn56Ca51xxprny6ST4/v11Pt5bU
CmuCteG2klppDbGWzOTYjPN/Zc4i9liT/fCL9n4+6Z6FfwuPgh+HN233y3D1
GsdUxmoitZE5ydxkDj2Q2F0lWkk9opZT36rf+rb54AmOQYx/wzkjOXcWvDn8
a3MqPL3J/lDvqYdv5xjfSc239vdo789zVbSp+2lIqwfVh48ytxH8U3OwerNE
u6pJ1aaPcGzI+CfmvJI9bm67tcreP9QaZm6Bx3N9D7amwPvAY60dTdauNcRa
cjL8WCdr2rVtDbAWmOMnldQAa4EafecSja5WN+eON5eX7EVzhLnCHGwuVrOP
K9HsQ9t6PRY+sUlutkb8q1Y0yb3mZHOzNX9Ym5/Mb9asHdp8OKGk5lh7rGkT
4dOa7H1riLXk9Ca1xBphrTi1Sa00R5grJje51l5zc90h8E3wvvA4+KKSWm6O
Mdfs1eS7+J3MzceqSTrJaea2CfDPO8mx5lprmrXNGjy11Stj2vxoPlVjmB//
txP9Ys02V1zW5vuJTdaya9pcb422VlujJxM/EL6G8Z7MjelOTbQ2WlP3Ib4H
/OdOaoy1Zs8mtcacb+5XE4xt8/MUzj+hSS20Zlo7N7eGwt/w968FHwRf63cn
vpO1tUkut2ZaO6+GF3DucObe6opGUitZ8w/i/a8u0bZqULXohhy7wh/Dq9gb
waPhRfAK8PvwkW39P5PX9oPHMH6P+IrEB1oz4H/CK8MD4J3hj+CecP8mWtL8
sRK8ZpPcbQ7/inHfJr3Lu/Dy9mJ1cp0573TruZqG8dfE1yS+H3xpJz2Ovc57
TfSJevOMkhy/W5s/TrC/aqK91eCrEdvI+wt/Aq/aHQ1q7ry1Pf8A+GrGezA3
mvi+8CXwLvCO8Bj4eHgNeEN4bJPezRplrRrXpFapOdQew5v0fvaAfeHxTbSI
GkWtcj+8HuMfMrchn79zE+2iplHbPACvz/gs13RJjbZWq6FPhHeEj2K8snmR
8/eBLzY3wMPVAvBx8OrwQLVjk97aHnsjeAf4cHgleH14JHwMvCrcHx4FHwuv
Bg+AR8BHw6vA/bqjCdQGaoiTSmq8tV6NfnCrP1yrrtnDraVNaq81eLnu6Etz
gznCfuGmktrtGnYt31JSX+1Z7V1vLuldrfHW+hvVUJ30iPaKN5T0ivao9qof
+vdW0b8/IjatpFe0J7Y3VoNa7y+vok0vL9H+9hT2FteV5HN7PHu9a0p6QXtE
e8VrS3o/e0R7xavgjTrpMew1rijpLewp7C0uK+lV7Gnsba4s6UXsQexFNm3i
lXwFr2G/VtJr2+Pa6/6T44wqels9roZSS9mTHgX3auL1zOT8b5r0qPaqehRH
Eq+a9FJ+/reMG47t4TfgZfi8bvM9PB9etjueht7GdZ3oxw+a1Aprhv5HDW/M
+BnO/47xOk16X3vgxdTqTXrROfpBaj14CDxXv0etrl6AZ8Mm+jXg3gwfhL80
VzTxLrxfSxH/GD6Lz3+hk36mD7wd49eJL038wRLvRA9HL2dqnev1FHOfE1ui
xO94okp+6tFer7/CnzOe15Xvd2WV66dn4udfVeV6eU+8N+akFUp6ZPPbnVW+
3/Lt9f0b/EWTnGXuMoevyPnvdyV/3lHl7/+kpJdbwPFZSY431+/lnizxYNQ+
aiD9I3Oyudn3+LYrnp7X94oqXp85+b22f/+uKznv09a/0i/TP/us9ZP003oR
/7b1x3qWeEB6QXosq5d4Pno/XrNVS3L4+61/oJ/2WVfy6f1V1svHXakH91a5
H2oGtd5KdbSENU4t0qtO7bNGqmXqOrXz+yX1fGgdffSDkvq2dR09oMZQ261c
R3tY09RG69apdT8s0S/b1NFbn3alvt1XZX2rWdSqPetoGTWV2nGVOlrrva7U
v9urrFc9FOvTbVW8lTP5/91O7pkae0FX9sv1Vdbv/K7sp2lV9oMaQe27ah3t
oMZQe61VR3vYg5gPb6iyX57tyn64sMr610NyP/2jSr3UQ7KePVAlf7oGXFuP
Vlkb33RlbT5SpZ66BlxLj1VZG+Zsc7c5fv2SmmBtsKYNLPEQzT8PV/EWXXPW
rzlV1qL33LXyeJW1YE2wNlhj+hNbqmTtPFlFDyxT4gc+XaXeWjOtndagjUrW
5AHmjyprVY/4YPNrFe/YPaa/9UKVvecatV69XGXtLl3iLz5VRb+4x/THXqyy
99xD+n0vVdlbrmHr17wqa3vdEi9hUVufrXnWPmveBiV/g9rGNeTftk5J/X6r
it+2dkm9X1jFX9PzVQ8sqOIF+53UVu4Rv+taJdf69Sr+qL6G/rsesF6w1+iT
1i/02umBe63eqOJfrlHy3V6t4n+uWXLtX6vir3rotXrNjZWSfv6dKn6nn6k3
6zX3u5jDzeXb1ekffU+9Va+pn9W7xCt5t9UH5ky1nXvcXGqOcC29UiV3dJXo
l7er+JNnlejZbev0q2q6e+DBdfTraSX95xZ19LMeu/V/epX+2hxv7d61Tu73
+6p9tq9Ti1yP5qKZVfpDNZzab+M62k7PXL0wo0r/bY1Um/evUzvVUGrjTepo
K2ucWnyDOrVPj95+d1aV/lQNodYZVkdb2CPYK3TV6Uf0kNSLa9et3i/xs1ev
86zBmq2WHlOnltuD/N1rXaf/MSebm5+t0l/uw/xC1xvHvnU8j3UZX1DlWYs1
/UK4X51arwZTe21aR5up2dUGW9XR8nq+6om7q/Tvq/o39MozG99PD1z9dE+V
/thnBOqbW6roLz1ovehpXalveizqoZur6DHrofrqrip+gZ6y3vJ1Xamveuqm
kUuq6Cc9df2VS6voJz10/ZjLqugtexj7lZuq6EE1vlpmSB3tb36yNs6t8qxF
z8t+bL06XpjPKNRf11bRg9Zz9dfVVfSfzxTUX9dV0Y968i6ri6v0Rz5TUA9e
U0V//Zn3X9TJPVFPqGnVtuvXef7hMzL7h+46z870hOfAE+v093pUL8MT6vT3
emRz4Ul1+mHXu9pmlzr9uJ7qK/Aedfrn8+GX4N3hvbuz/uzFS53eVc92Hjy5
Tv+t5/o8vHOdfvLcEn9hOLxrd3pivYOqTq98aolfNKhO/3NciX8xsE7/c0xJ
fz6gTn/hfrN32qhO7+UzJ/2pDev0Z3o4egO963g7p5T4T5vDo7rTI9hL96nT
O/iMQD9kxzr+lJ69fsLIOv6Uzwj0D0bU8bP0MM6Fl63jbehx6KUtV8f70IOy
f/+miteoR6JX06OOdzKi1YuL1fGO9JB+CC9ex1vSs7L3WqKOl6Undo65uY5X
pufls8JOHS9Mz0g/Y6k6zxr1eO33V6jjR+hpPwuPq9Ov63k/B4+v47fYA9kL
jarj9+kJ2++uU8cv0LOdDY+t43f49+mdflvFe9MT0qtavo5XpP76C7xiHf9C
z81npd9V8eKsKT4b8/mqtWZQE72gJrS+WjN8VmbNtZaYs/dq+wFzuf363m1/
4d50D+iv6Ke4N2azfyb2So4x19hz2nv6vFlf3zV8UpU16drWn32uff7m3neN
Hlxlzbh2TR6z2+drai9rxp5tf2kt+aDk2bY9n/n5kXZ96Mnqzdoj2yurAfq4
1trrpYenl/dou370YPViH2vXix6tXq2aSq9CjajWsibaO6uRrJVqCHv9IzvR
FmpYvT73jNr2Xxqvff6n9lMj2jup+ea3zwsXtP61tVANbW+zfSfa+v22HtqD
Wf/sIeyl7FHsLdS49nJqUrWvGvHN1g9SO77H6+/vxNOxHtjjzGyfr9n7fFjS
K9kzWZ/U9PNbv1yt756dXCXHuZftr6xR5ihzlc8/Z7TPA8yletBT6mh6velF
bf3TszF/q7HtDe251N72UPZ61hBriRr4wdbvVxurgae3zz/Uxg+VPIvUI9Er
8TcNPq/Yoc5vHdRkPvtUQ6rV/H2B3u1BnfzewRymV2LNNrc5Z+zNKr+NsMZZ
66b2Sm83o80HejZ6N0+U9BObtvvJGmet85mtveW9JWuhZ1uf1EQ+u1WTqpXM
sXpN1ixzrz2O3qc5197ngTa/+BsHf+swvc1P/kbA3wrMLukn9OzNR0+W9Ed6
8uaj+9v97m8i/G3ERyW/1bCHVk+d1+6X3er8lmMm/LNOPG+9bzWuz5bV1Grf
p0r6JT128+Wskv5ukzb/2CPPap/HWmutGXpn5jBriT2ZXrg1wl5tdHv/lqzz
7O3pkn5JT9/8+0zJszifIZh/72vznc+M/C2EmtJnIdYgtebDbX7W89f7/3/F
RvD/
             "]], 
            Polygon3DBox[CompressedData["
1:eJwt13eYVNUZB+CRIkoXUHYXZoBZ+tJrqNIJbZEqXaUZulSfiF0hxZKiRBNb
EguoFBEFBRSkSMcGqDTpIE1BsVDU9zxn//g9c753vnPv3Zlzz9ytNHxS74n5
EonEFikoE9OJRNesRGJmZiKxU/1IKpF4TV5Qv5VMJIZkJBLF9IyWlvom8A36
7tXTk11R15E/szZshaxWHzKvJfvOMV5lz7MlxoN5UfPmsWfYG2wAu5Z9xvI5
R2V+n7kd1dN4b/YQ28v+yaayXuxBtof9g01hPdlkNkUGZCcSO3h+VkV9v75O
6p1SiNVgD7Eu6l1yDavJHmZd1dvlsrqR47Qybi2b5SdWjzU2biLjnbejuTP4
R+bOZmNYOzaVbWUPsS3ys7q+uU2Nfyd/0Nc2K15vuO7z6jf5QuOPfSY1zT3o
87mdt9I3kW9k9+lZIovUn+jLYYf0LWer2EHWgp1nY81tb+40vo09rGebXFI3
dC0tjFtKKX1z2HpzK+jbae67/H12gDVn59g4fR0cbzrfzmbl/R1t2HA2QnId
9yP+i3FFmamvrfoWffX19WF9paO+Nuy0cVJm6EvlfTbhM+ruvYt8k9eP1b8a
V5K79bVT9+flHa8Hm8uGsptZkuWyeewW1o+VY93ZK2wY68PKsI6sg+xLRyvN
GqubSDPXdzZcDxsU7gdz71Kfl1x2R2a8j/6uPhOumQ0M65z9Ud3X8a5nndgL
rD/rzYqx1uxplsu+lhqsG3uZjVMfl2qsC3uRjVH3Mrcoa8WeYj3ZN2FtslvZ
CvaA+lu5kd3GVrIH1aelHuvNFrCp6hNSnXVlL7GxeWshrIncdFz/W7zeJAWz
4mcSPptP1Uv1LDX+wtpoaO5Ja+MCWxeOwwfq/0H9lrwR5uir5b3DyXi8At6v
yquFz9rnfE5fZzZGvVbfX9SfylUsm93LOqg/kQRLs3sM26ubSzPpkY7rerPX
AZLOit9t+I5bO8fbehYbf+Zaapt7xLU0Yg2lazre2xvS8b4O93e3dLxnN3pd
pl5m/KW5jcw9ZW4DVl+6eP9H730Y1pQ8F+4NfdX0FQ5rSp4N9x/bKktdy/Sw
3lzfw2Ht6XvCcd4JUe/W05iddo4J+rrou4vvYH/V85I8pZ7v/b56C+r5nF2r
L4fP0tdNfVLqsJvY62yyupLeD8JeY153dsExUmwFO806sjMsHXqlvfe+8d4q
r1XVVaSD8bdstdf16nPGNf1NNYxrSpqvYd85Xg/H+97xkmw5O8VOymJ1BVnJ
zqg76TurL5utZd+zXPYDqx7uBemYjuf6IB3PE87Xyfg8W+O1imzMjMcP5yns
miqy99hZdWfH+8bxmrKDrJSMZ2XCuk3Fv6lGdjxXOGc5fUvYEXNb6ztqbg22
jf3Cbma/smpsC7vM+rEryXgtm9hF9rMsU1eXreyKur++X/Q1YQfYdTKOlXLe
HPaJOp8MYfnZSvlQfcLc9uyiue+xDexr1oFdYjXDXsmuksGsQFjL7Ct1SRnL
SrON8r26tr+3btgbJCv8/rDDjtdK3zHHy2QL2H7WlH3FMtj8sG5ZE7aflWWv
h99otkdeDXufvBjWrbqOvs/1VWbr2AXWk/3ISrBh6gny/7CPuaYb2EvhmYTV
1bdLX3E2VD1e/ue95fo+TMXvP8c4x7iWzNDX17qfFa7b3CfZ2lRcx9Wz4xoO
a/lGfadYeZmuL8k2peK9XDc77gthf2it7yQrJ9P0lWet2NfqLJnKyrE1cjbs
adnx3gn30Ab5jtVitcP9GPZXc4+zDCkr76mbyWHjMjLR8W4IvzvskLq0TGDX
s0Ksv79/lPwn/CY5blt2xjgld+qroO8adrOe0RnxOettfZV5trRLx+t8Px33
jrCHjJCn2Zv6rmb91CPl3+H3jDVnR4yvl0nOUTYVnwvD8+E4+S9/Nzs+24Vn
vLEZ8RnyHVaEDVKPyYjPgcvCmgt7Vma8N8I9UoYVCHui8fCMuL8tZuXZW8ZH
2Y3Oe9w62JqKzwUNsuO+H/b/qvo2s0v6+uq7nIxrIayJzun4Haz1elRd0dpo
p35O3wj1EanA2rJn2XD1EL05bAhbysazY2FPZO3Z82ykenDYi9jg8BmzCeyA
ZLDm7Ek2SH1QMlkLNocNVg8Kexbrzxax0an4u5WdFZ+PwnPSsXDv8rKsmfoJ
fQPVu6U4q8ceYb1ScY99NzPef+E+zOfzeT0Vv5u3k/HeCffQQKlsbj++0NxR
eg5LirVhz7Db1CPCusyKv+fhd/1u9qUUYbXZn1gP9SupuE4WJuPaDGt0svTQ
d294RtD3eCo+o9/EHmD3hz1A/QUvzGqpZ+vrrn45FdfigmRch2E9zk3F9b4o
Gdd1WN8t5QTLlCnhsUDPSNbc8cax9WwmOxT2NtaS/YsNUY/S14KND7/b7B42
iXVjd7Nd7FF2B+vO7mGfs8fYUFaLDQ1rOfwPxYax2mxYWPNsEpufivvU0mTc
38I+V192syIyUl/RVHwubpAVn53DM/QZdT350riwjNBXRN/C8FmrNzqWrzax
23FXsY/YOdaN5VO/L9vZt6wruypv3wn7z+/Tcd9f57WR7DMuLrfrKxF62Gfq
AjKMXc0asD3qojKKFQvHYzvUBeUWVihvXzumvkaulYphD2V7jYvJaH3FU/He
/yKvJ/SuSMffj9cy4/NReE66rF6kdy7bpK5s7h5/7z52nc+qIX+c9VUvllfV
W/RVZfv07WEl9NXnj7Le6r1SkjVgj7E+6gWp+JuzzJynzS/pvPtZKX2N+N/0
9VMP543ZaLaKzWAfyH51QgZ5uU59Z9g79c1mX7E57FbWkI0Mez2bxt6QeerN
zlmF7XX+28J3om9U2JvZdD2rZZf6J319wvNk+I3T9ynLL0NZQXYqfK7m9mLz
2RT1b1Z0QdY=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$143513#1"]& ]]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1:eJxMnXeYFMX39Xd3ct6d2V10Z3BmxYw5K+aACTCACQMiGQQBEQUUxYgKgoqo
KAbMmBOYFSNmzJgwIkbMGfQ9H059n9/7Rz91u7qqurq6uuqGc2+3H3v8QSMa
6urqnm2pq4sovbS1rm6KjvvidXVjdJyg45hYXd1JSsfqGCz67Gpd3ThV6q70
Q1UaI7p/fV3dRJ0PVbq30lsTdXVXquwnun6qzgcrv6vSX6N1dcep/BE671Wp
qzuwqa7u83Jd3dO6NkH55yotKL+sctcqf35bXd2ZKjtJ6X3KH6k2V1PaX2k/
HSerzitKr9B9dhT9fKqu7jkdXUTfpTa+UXqSjlHq+0gdh6rssTrmqfxY5Q+r
uY1uuu9xybq6Acr/VucZ3ft43fc43WuoypyovEuU7qDzr1S/i9J71acTVGac
0qUxj9NglTlc6T1q53jVaVY7C1SmpLSo4z7RV6r8k+rbIyozVWWSKj9e9KWi
J0DrGKl2ttOxjfJfUN8u0pFR3e2UPqq6v6jsg6KPV5+/Upkfdf6o0ulKp+lY
X2VmKK1n3PUu1tLxt84v0Bh003G+6P+ivv8FOoboXqOU7qM2r9P10aJP4556
zqPVn7TSI5T2jrncgyp/KrTSIerDZ7r3d8ofpPNhSndX3bHKv0FlftG1ebrX
97Spo13tj1L+qaK3r3jstlN6ucpcpuNw5Z9Y89xaUfX9j9Lxo56lp64fpKOq
Mlfq2o2aP08ovVtj20X0QKXdVa+Djo4qc7yuva567yq9Qf3ZWOPwsq7dqPut
1PXtVD6qtvPK+0vlttX1ZerfZ7p2tu6zs9Jxqtui66uJflNldlI7Darzt/Lu
U/0ddd9BSndR+Q9FL1f5paKv1vVbVOeaiOfjycp/R/Tnoj9XO5NV5l2d78sH
KLqkdJHyG5T3gej3Re9Avs6bdP647vmYjpzo0zXHzxX9tK5dJnqmjl10/KX+
X6Njqq6tH/c7Olflf1Nbc3RcpLnXTeXuUJnrde1iHe+pja90raAx766yp6if
NyvvAdHfKP8S9eE2nR+i88Wqt7fqXK+8FaJv03G7zm/V8YHKLFf5ecq7JeFv
OKo2f+IbUXqbyszV8TP9qHkuDVR6tfozW8eBOoqqt6/yH2IOqf/XMn9U/iHl
766jXW3epbw7dfyq/D017v8o/UzP1VX0CtF9lMZrvs8EpfNUtiF8C8+p/pbq
5yU6P0vXqjpvUXqfyqwleqXK3Kj6/yn9XG1uHQnfkY4RKvOFzs8QPVJz4Hud
Lxc9RunpSqeozh1qaybrZc1j2Fv5hyl/X823bpobn6jtHnqOD1Umqeszw3z/
W/c6WXWWKO9fjf8Hun6Nrh2lazOV/4POL1W6QGNyZdTtzlY6T+mROo5RvflK
j9axp9rvpOMv0Tcqf/3w7mJqd2/1ZTe186fq/qHjUeai2v6MtavB398QpQfz
rcX83gdyruPQkL9CZf7R8aTO91ZbT3Aftf2uys9Q/mGMj55zPdXdT+lHyt8n
zJn7Q1u006AxfF/9/FTX5iu9UekaKlMRPUx1F7I2aU6cqOMKXSvoHier3n5K
b1Pe1ap/h/KP0NjepfIn6F4fK6+Dju6s9ToO0TFI1/dX2kPHA3xLVe8p7C3P
NHgvG6nzlbr3p7p+ntrJVbw/pESfEfc7P11l3tbzTlW6mtp4WPXPFn2G0gdU
d5nqTil7Lpyq/KLKfKf+fatjos6b1GZF5a5TmT3V5pwwh0vKf051asq/LuY2
S6r7iNo9R/SZSttU5gWVWVNlLqx6rnVQ+qae9T61+a3uvUh1X2OO6tpBfJPK
668626ruEp1vw1qu/u/Eeqr0Ol3vwd6n8t005m8pP668L9TuKN1nYifPQebV
ATp+jnrOPsj+qP6nddwreg/erfIPEn2d2n1E6Ry1sZ7eUXe1e5Suva0yB+g4
UNe2qvh8S6V9dbSqnf0ZA9XZgW9hDX1Teq4fVe9XnZ+p6/uGd3Cc6g0L39t4
5Y0Le8nBYR1j7xmtustF/9zgvfQc9go949oqe5LOz9T5fN3rbL5ZpcNrLjNV
9Kkqc0ooB6/COnSMjqdUZjfl9a15X+imvH/Vzzlx75en6fiKOaBjrq51iXnd
7yr664rfy3msdayDyrta97pYZY8M3+YI1R8e9xg9XPM991KZvPIeFn0s49bu
FP5qSs28zAClPdT+rlpbXtI721v0HqKXiN5d125n/6n6vd4pehfWgYj3t11Z
OzRWO6qdI1V2S6VbxLznvR7zfNpb9BLV30lpb5UZzPekY1tdiyqN6Libdxbz
+Owu+jw918dK71a9t/T+z9D5JB0XlL0mf6L5vKXy11E/PlK5B9Tn63R+t9LJ
4V1PU7n1282r3Kf77qf0QeVdrbp3aV6dknS5XqJ76jhI9Nk6zor7219f1w9Q
Olt1Pla756rMEqUP1Px97a++Xau8U5O+xzWiJ7MHMadVZh+eS+mVyjuMd9vg
tYQ1ZaDqR9TfXnHzTqQHB/pQlf9D1yLqe+eU1x3WHPYE6l4K76l7/6Cyd9a8
vh2u/CFqs3fcfPLgimnWvPVEn7mm5pqe+/JOXsNo86R6P2+PQN9f83MfAJ9T
M+8KL9dReWvoWKD7tSktx71eM7dzcc9v1r1K3Ov5nJAPf76f7n2k0u5Km5VX
YrxVplFpT+an8q+veg+5Xvf8RXWzca8PowJ/OLrm+9OPEWrrndAfaPiILePe
Fw4UvZXofvBCZa9brFc3qX4/9qzwLKMCr3qQrnXgeelbwmvIsSo3K+bnZBz/
Ururi+7T4OstoUyD2h/KN6e6D6mtMcq7r817yCHh/b6g93JvyvOgV8TfA99C
Vm2+EdZYvo83Qj70qjL1zlsUykyMh++o3msla2ZP0XPV9q06JqWclwljGwvr
KvSz6tuxvC+lc1TuKh2fab5uoX7vpTaWtHktejV8s+er3ACepep1Gx6iN7xv
wjS8xG2qs63yhrZ5TWDN767zLeJek1mfkaWQqXZQflX0i+wdrAkq85Lo7ZV/
ctT0tsqfJvrNmNeWOaxdun6t0kyz8phLyu9X9bcPX3ayyu4UN1/aF94/bvlq
qp7vRj3f1jqfuqZlrEs05y9M+do2ce+R7JUH69p6+sa6KK+itu9QP/cW/Ziu
3Yq8Bs+l/CH0N25ZY7LaPEn1Z6jNtZS+orwvlR5ZcdvwD7Gy5TbkEXjkPeLe
o+FF4UMvZF9kvMP3vpHudYOefy+lhzEezG32DNVfyFzQOH+R9H5/Vr33b/bx
Q3W9k+iXRB9ecfsXIRO0mbfdM9z3d7VdjHtP5btrCt8e+0Ih7A31evYtlG6p
8j+pzU3Zq5UuhL/Xtc10frzaeUfpJjqW6rnO0dGZ/UNt9Nexkej/lHdewu/1
hZjX+K1VfrOKzzdV+mHVc+FQ9h8912Vqfy0d2+j6W0q30rWrVGZzpWOUrqH8
w3TvBbp2hd7h5ToeVt4elA1yzRPcU2U20bF7xHLqQdrDrhJ9TpPbepT9Qf1c
T2XuVPpvxHLQoTo/REe76E2VXglvouNHldk86jJ7q+56OlaIfk1HUkdUY1Vm
Dwt11xU9TW1uKPq0IItHdHSHn1c6o+o5jxzH/N9a7UUj3uc6qW6r6HVEv6cx
amcuavwf17GT+j9U6dYaq1eV/6HKnKC2PlEbRyu9Ex2K6COVtmtsIkFWfD3s
jRvreFX3ekXHsUH27QwfqDrvqc5arLXI6bp+KXKtzjdUOx11zNE991fedfRR
x0DVbdP5BqI/Z1/WUVXfn4en0rWN+K7KHoPvNA/nawxjyl+Xfui5nlG5jf6X
6lhb+Xsi1+g73171DtJYXa68merP92WP47Flf+vrh+99O+ZR3HzCLaI3E13k
HrxbHS8qf3P2NT1fRu28H/Jn6fxB9ek8pWcpXUt5nfgGdX6zyj2tejfX/K23
h+99iO6/ZtzrBTIa5U8P7ffWtWNU/tc2863wou+yvsD/cY+q9ULoh8irhvwf
2jz/+RZ2j3ndZM3szXsRfTjrscb9Xb333ZS/mp7/VqW7qfwmPLfaqFPbT6qd
m5GtlY7kncS9FiT0TrpEPI7vxf2cPCN8LGMEn1pmT1U6XO3M0tEmerHS1VSm
Q8x6ir3K1n/0R++k9AX1Z4bobmp716AbeVx1yjyj0l/U9qSIy56rdbLG/qj8
rsgVolfX8ZPOK/ARNY8lfXuefqjPx+nYU2V/V5lmeCKVGc43Efd6t4nGZBt4
47Lf57rhnT4KX6N0itKn1ca9jJHK7Rg3vw6vvgUyu44XVe5O1W9V3lfoBdV+
c8Tn+yKPovfhmxV9WsLP2LtsXmtzpd+ovc8j1kc06PrAiHWOfYLeYMuyv3t0
cXz7jUpPilgnUNS4ThCdFH2Mys3W9a2VNiOLoBtCZkPOE50V3bfsdJHS7aP+
FmjzKdEni34O/qpmGp0eeoZxQddQDH3gnaGfQ0/IXpNU+YdFf6Py+4XnbVI7
Ud6l6IZ66zZOjVhX+LvSx9AnaMq92mD9ILrB2RGvrbugNwl6qk/rvT69Qn9E
T4q5/FP1XlN5dtbVHaOeJzwLfNGJEcsYtDc7rNdH6ZlHiG4se14zv5nr/XTe
orLbKv1d43+SjlNifoe8y4rKjIp6z2K9KiudHvG6xP51kei14Wf07t9T+rDa
OTHsNew5Tyj/OuVPhy/SHG7S9bPgmdENMBd17fiYdQunid6ZeRvxmrJ/KMNa
eST8oegC/dSYjxb9JvyLyp+gY3jM85r5zdzdRXnHB/pX0SfqGIu+QnN+DP2v
9zo0JNyrQ8L65+NEL1U6P2LdwkPq93Sl5yq9Imr9Efq3u5XeouModAFa18/Q
sal4n+PUvy+V97TSQ9CJwb8i76iv+8BrVb2XIIeyZ3WNuU30UXMilv+R/d9T
f96Mm485N+ry6CdHqN07+L7Lvj/9GK7z5So/Q8eR6HW0rs1V/m9tlmfRF/Wq
t84I+jvR36nsRQnrk0oJ68b7KL+QsI7ioHrzMdwD+fZT3e9e0fXojiLmy+HJ
4e/g8+Dd0WndHrHOasOY976tVebrmnURnyHfKb0pYn3UFJXpqONFnf9VtQ74
T6W/6XhB9K/o/zWuB0dd5vDAs5TV5nlJl+kkeuOU5bp39NynKZ2o42tdS+i+
Dyn9Wu1sGOq21bv9haJ/UXpJ0v3hvdwEr4vek31b6TJdO0bP943OL2QtVV+7
6h43sF61WY+CLg9dwSdV8+xppZ1U5inl/8gaEvO3vCvras1yJ3Juf9WvKm+5
xvMeHc8qf6LS89H5RX1+Vspz637mmeosUfl1NMd+V59msj/pfEjZvMpjSrsm
zW9lwtqwWaDh76Cz8Na6b1rpXerjIzHzYy/UW1e8uuhDRb+pMi/Xe19Aj4x+
bJLObwq6QMqvGbWe9pl6r4/YNtDHvhK3PrhVz7oo6n2CPeKhmHnJBGtyzbYp
7BHPqZ//hbUaHfnhWqsWQ+veo5Teo37eUna9Y9Wv19vMw8PL75H03tw56vtv
EPowPmEa/fJ9SV8v1HsO8P5v030X61oc/qDe5Vb1n/FVunbUewE2tI8j7ivy
PXYz5PqGmnWSdUrH17x/RWq2bZE/XGWS7AdKG5H7Nf4nRc2LfxT4yB1Zo3Tt
DdH/rKE1JmZ+/U3W67LXjOfK1nuvq7qvtdmeM0H5p7I/x9y3/3SfgVXvlejM
2VvQmbO/sEdCPxv2EfaQYaq7kfqzbgeNQ9T2C/j2V+kz30LC8uFXcdsOmA/I
Ynzzzyk9sc3ybJL1IGEeZSX7SszjDI+0ouaxhX9epGupqJ/3FnhEpQPabD85
T0cHnber7lTR64k+R+mUiHlo+IXJEfNL7AEXhD3oLdV/Q2XvhY9VmcHKH6/z
jrrv+RHbld5U/qK4dVzIVNRdN4zDB+ylqjtO47C6rp3FXqJyZ0fMU41EZhG9
ucqtVzONXPBJ2FPZ22ZFLJMjj8OLnRXqDlO72zVYvjgMfj6sOUNFnyv6Wvii
iOmWIC/w7PCKg1XnbM3/9/R8tzK31Y9N6z1fFoU5s33Serpc1GtYfdS2tCuV
1xDoC/RMkaj35UdStmNhw0IPmtbRVfTMsr+525ROCPkrNA+3S1qO4p0dUfVY
tWsMOqidW3TtNc2BzZVumPA9rleaV7q03rqj1dB7i15fdZpF55VO0zPt32Q9
DQc6mL+rfgaeaaXuO1dtFnS+M+uJ7nWJjrKOj9pc/iz18zyd365yTeiQtA62
RP19vR8xzb58f8L2mFadL464TfbjK7B5qX+XK91fbV2GPKW0KWF97z0N1pVh
B0c31U1l94tZ53tL2GPZB+9TH/pErHuMV6yXQD+xFnIW3zffYtz7HHvcrvDl
op9X/h9B7kD+OCeM+ayy+Qr6i/3ozLLl0PfbrGe4ScfL9Ff3WgbPznqgNs9U
/jo1773Yhdl/u6hvf0YsS7cmzHs8Lror+2GD7VC3qt4tUduT4nHrttAZLkr6
3XWIeh9AZ8+3X1ex3g/93xcx7/Hs79tFzVc3Nti2/3bgT9Cz8Y7Rvw2oWFd3
rNKOCfNmyB3LY7bB7MLarro3o/PV8VLF9qX2su0o2FPGK+9htfd9xLaBTkG+
QWY8F9lLx9XIAtieRM8OcgwyK3LZ32XPj3ODzQi+Dj32piq/Scq6pHWUHqH8
+xqs21tlU2uw3p05dLbqrhS9Ah1JsBehd4IvXFG2rIrM+lTZNoif2zzXsjG/
i4VRywLIBI9WLaOM7ySegvkbtb2nLWFe9LnAzyNrIHMgU7zVYBnqqIr5GfRl
H+vdX6r7r6H2UvoWZoquoo+tWGZFj/UpfBffovKfbTN9sdIXlH8Ve3jVewg2
fPa46/Xs58eNQ3gXfkrHPToeUR9+ULnpZetr0feis61VrK9DbzdNbd2vvG2V
Pq973C76UqWrtVt/P0/3bKzaBgeu40VsLqI3Ef2Z6HtFby36QvSMcdsWntF9
n0b20D2+1XlOffij3nwHuAB4j3Fl79Xsj48r/2eVuQg9h+bzDqzrDZa/X4oY
J4BOAD5yzSD3rR3a3yDwEPAC41X/edb1Nu+f7KnsoZeWzdedqvR79ScScz/2
Ud5OEcvt7CPsBdc0mOeCD4Pv+hr7t9KlavOrsufCF/Q5ZVnrXZ0/yZoTsR5h
/bL1gsvbvCeyH6JTaIl53Wc9v7xsncDXKnN1wnwU/NSQqHlIdFI/lK0D+0Zl
fi1bT4K+BJmOPRE9ZE/uGbG+8kTlXyh6S2SMqOU9ZD1sjNjHsUEsQwdOH/S+
vqxar4t+d2cd3Vg/lD6a8t7TRe9/cs08/BpKT1f50fXmW57S9QU6dmj3+s46
j/78/ZjXOnTUc+HrIl6vDqx4Peuosn2rnrPwkvtSV/kbkc9eHdaoc1nrVb+i
9Dm1uVbMurah5EU8PshWa0dsE3yybLzSj+rDb3q/R0c9dl9pLvVFj429UfT2
Kv+G8rdXvz9Df6H8nmV/p+sp/RWZRnWv0Pn8pPlm+OydouaV+K7/UN7nyJMN
tmfN0rGr2oqWvedgW1qp8xujXn//QRcd9VozJeo9l7UmGfe6tBf7Wdjz2O8e
VHvzdYzS8Z6uzwr7C9gG1rc/1f7zZe9Rf4n+Mep1kj30GPX5cNFLkWtilhuR
GbEnTAvrVUTtztC9L4HHQocX99qwUdiP4mo7hW5ZeZfFbSfC3sXagY4R/eJs
lbk57HGDeOay99j/sIOAn1GdS+O2ccWC/eWwiHUc7C914Fyi3oM76V3MUpnX
mHusfcrrjL5HZb6Met99uc24rxuVjtVcmoKNg/VS508o/walj1StcxrXyWsT
a9S0NTVH1e4stXG58t6uGosyCL171fgxcGTopuC5WSvuSliWuKFsrMsDMa8p
R8a9hl9b73XyEaXXsibreEz0HKUf6V7nql+j1YcCNibVuZK9K2o8A3gtbIv9
VGaUyixUnUdV9zqlk2rGUYCnWFq1HQ172ousNazxbbbPgD1CL9NW9T52qspM
Fn2G6JjoOt33YuZc3HZc1uP5unaC7nme6NFKx6g/J0S9bqzUnJmu/Gk6/ozb
RsVas534vvcbzLcPVZllfINRy3nvNVjWe7DsNeZ79K+6/nXgjT6NWj6C356u
/nwcNRZhfNR6f+xc7RrnJ6Leh8bWjP3LV713vQ2miv0iYX0X++JjYS87T/Qp
uj4h2JtblF6rfl8TN64nFfN6zX6Cfm+e2rksYRszur+n1de7WYPBq+i4Bx6z
zfss82EW/AD2S+opPTBpPh7bATZVsB/YVcEN8X3ybTKWjCkYM9Zm1mjG7eJA
s1Y/iM5WxylRz3PkykfKHg/G5aN624o4R7+E/eLkkP9Y0BW8F3R1i5We38nv
j3tjq/og0PRhcsJtMs7IUWAGNlP+6QmfQ/O+kB8+q/e6dHaQBZB16Ru2J2yh
5O+k/M1j5l2RrV4OdZFLzwkpMgjXaX+I+nd40ngF8h7VuI2NWqfUO+k6ezRY
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
7yP2PmSwjuYbdgrXKPOi5uSfTd4DWP9/Vx/S2msOQ8em9qMZx8Fcm/0la7n+
NJV/Mm3dfBftTUOarKPfVvRjyu8Y8V70i55lKvZptflP2rEvD2o3v/Cs7ju5
g3kR+JAzVT6RNQ5p37R5VvjV7mXHEoVnmKv7HJI2b3mfyl+asX/4tVX7N3wa
bA34212H3FR0PJYU8of6MFTlu+r6W2pnUtqY58+L9jlEHj5R/f8kZ73s3u32
o8GfZgPl35q2H8vF+la3L3g93bndMtLxSq9T+72yxllOVZl9NYaTwSeq/buU
v77aP7XdfBU8VW+1uVbe/2iaIPpM0TeJ7qT3dXnWvMprZds3V7DnqJ1RGfut
3S56XsY23aToA7PGbnbSfVNZ48P+qXruo18/Wu1vkPc/Xh5V+/vkrGuA5/0g
Z763s8b3fnga5a+lMlP1jKsrf+OycVi/aEx78X4pj55J9+qrNi8VPUXtJDOO
wfmp6o7JGme8TPSReceJrFfdZtF9RH+lurlMiHep8bgy63g1qart2AdrnLqr
/JK08aqbqm+7qT9vaxyOVf6meWMnJ+j6P1n7oh6r8X9Lbe6gZ/9G77dT1jif
isrfqPxXo5bp0e2iixug/C3zxqj2Ud0XM8a+N3SwXIdM10dlNszb1/wI0evm
jeHdQP1ZmTG27zjlb5Z0+b1Ut2POupJP1MbJTY7LvIXK75W1nmZgu+OL91I6
QuPzbNoxzvh3REblrte8PVH1nk/bL2sftZ/NG9t4vMb5FeVvwbOrzIuiN4lY
L9knayzcpCbz5Xxj40QvzdlG11l1v8+ZD39d+eOzXn9GK//HtGPswifek7Pu
rKv6NlFl/lCfr1T+8xlj3K9Tf0Zk7Fv7pto5JWu/gKjGsF/G/rS/p82nwqMu
VJmPNeb/SeybrnamKT+GLqmjn4H+f5Sy/Izs/Iryfk07bhMxTfAZRT6KdLAs
jRz9nNrZNWPb3cmaS1+kjecdpz50zFqv36L2R2nOfIjuE72G2tlX+86pKv9l
2hje4WrnpTCGf+i+62Udk/3fiv1BiSN1yZp6NrU1R+/lE7X/psrvpvL/qu7f
GesaWWOObnLcp91U5rGMfUcn6V5fpY3/7aX8BzLGfFxcNNYZnPMU1Vsjbaxy
q+5TVp8LSl9uMS9IzP5D9OxtjdbJ7KR28lnHzV9ZdWzJzjXHJgPf3aS6W6lM
Jmsc23K1PzltH9LnRW+TdvydQ9stq7EOT9W73invuF/7iO6tOfAgejK1c17G
uvC9Rceyjs/0pPq/NGMd8ENq87WEfUeGqM+L0rblFtXnV9Neu/9EHlL5+1V+
DfXvSd6d6N00lw7Qfafovr83Wd+BrmOI+hBTfi/moeo+k7Efy/EqP0b5s5Sf
073+yVlWuEhlfgpz+Ajdd6rK3I++WPfaUH2eiE0j+HThf4NsfUfG8vV1os/O
OHbX13rGkRn7lm+O/iNjW/Qs5N2M45+tqTa3yDqW/EUly13IXNvpeon5ELEs
Pj1rebys8gNY6zSXHlWfexYsl1aUPy9tv/MDyvbJaFDeWnrGOWnj3zuq/ZNV
tw82+dX0jI3GuU/VWFWV/xq8QbPjAaFzP6RqX9UD9IyDNYb1ecsEfXXfp9LG
4D+tvg0BZ692SugD0v42/lQ772Xsi3yY6P6qe5nqvqAya2Wsy++o/i2rd+yp
NtHDs47l9onK9M/Yf/6SJuvIVunH1E5do3mJgXovBxQsN56hvKPQi8DrKr81
59j9FdGHqp2NwQTpeo+0/ZS+FH1o2n6I5+m5/ohYh36fxueetG0d4/TMW6pu
GqyL7rtnzv/g+b5qP/mdlH+2xuHajHF+O+teRzQ5dtUA5f+YsX/gSPZZPddy
PdeZyv8mbez/TipfbnSsoof0/J06OAbQYj3Peynbod4JNLGT3g15a1VNEwtw
W/Vxgtr/L2vcPNicxaHc3KpjoR7V7jZoi7rQlNmp3RggsEDfaz7/EPwPict7
TyhPvKYFKnOn0plgTcuWmer1rqIat7MK1ssP03NvlLW/Bvj295PGuL8RMDwb
gB3SsV4H04t1/b2k50y53f6T/PPngbivkY/MhxyI3LcPusWk/cfQB4BxAmuE
7uynZvuUoncDawTeGr+AF5P2EX0l6f8N4GOLH+5rSfviwkOgK+I/bPy3C74D
nwXSmYEG686/G/iHwyuhjWdVfu2Ur4GLA6v5UNJ4TWJ2ErsTP3p0bI8Em9GO
EdN/19vWdGWwN01nrUlav/q40ieSjjlPXNvHA00sAWIK4HNGzCpiVxF/lthu
ZyT9L050z/hKoascpPwzk/7vHt9At6R9x+AheiZtcyFWEzGb+NfGKxWvi51D
/Cpo/IUZX2Ry5PEnk+4PMXfPVXp20vrtZ9CTqI9t7e77gtDn8fCFSftvE7/q
saTjWaEbp2461KEu/q34Kz8Vxhd5+YWk5Wiw2GCyiR/elvI1dLunBJoyzzLX
kpY3iU9FbKp19W2ulfL4Eo+GffGCpGP/863emTAuF39+/Pr5DwD/q+zV4n9W
IrezT67CqWpe3ZcwTp81emnR8UWw4/EfR2xo+Cfgp0BMbfbvJxPWj+EPx38Z
icGN7Y448vhgERP7sYTjXBIjIllynAjsn88kbAPlXWFT4X0RE2PtkuNiNGnc
XqI/NdvOXk84Lhj/hXgqYSw8dhowjcjsjAcxu/BXp+1nQ/vE+3ojYT9pYoi9
GcoQV+vtYCvhP5vTw/zk3xT8Y4b/y6CbAaPLt9mh3ToqfKK3SDlW8qZBngVX
gUyLvge9Dzo39DX3hu8ajBz4uHuqlu+Q7XYOc+ScME94b1PCuyMezIVJx4SB
p7wifF+dovapwJ9i55TjjGMzQ1ZGZkYGn5YyHma9sI7cVbIOH4wPehL0JfhM
X5+03zT+H/OS9jUBJ8R/l8D5gPG7Jmm90ollx5B/t+LrN4Uy/Fvt2qTxH+i0
5oTv6DWt/c8XLFPzbyBiUw8Lvp/46hNv/FDWm7y/bdaQuXmvHbuIvi5jzPIF
mqd75f2dL+V/xEGf/IzW4dlZ6/GeqXof21rzpJn9NOyPm+oYILqgdKH6vZHa
eF7pZLW5u9qcxLi22LaErm8Ptf9o1vadtbXu98vaptC/3XEdeyodq/Z2yTpG
5boq80La9qNOepbXC+YHpqvNm9P+F9M0jf2vGfu39FP9JezD4ov/VjunZ+zb
9JDKprU/vq1rW6KjVn5f5Xdv9zr0QdVYCOQv7KtL1f6IgvVKi5tsr0KH/5/6
8HHG/0V+U+NwTcb43aHKfzZr/7yH9IxXZ4zJ/kH08oz9wwdhF2iy7W9vzd/O
4gGmqvwM1W1q9JwZoTZfTlsOAgf+cMZYcOIOEysr1tH2je/StnEMVjsHF6wj
O15tT0s7Lu5E0bdl/Y+PC9WH49TO3vCTyH1Zx+S5VvQlWfu5YA9cEux6ebU5
N2ufydvV55fUz3XVt/V170FqdyXzs4NtA9gF9lL/e+b9LfUp2i6CTQT7PzZ4
7O/gmsBloXMutTtuVn3N+iP04+jGz0+aZt//p8F6poObvKbumnTMzQ2L/hcC
/z5ALto5aX9I4vMRp++/kjEY48N+gY8ePn746RH3FL0tOtuPWIeS1psRL4q4
UfzPAJvHLkmvsav+05h0nBD4ePT9xGfaFR4i6RhUyNjwsOi0J5Ttb3ar0gHB
Vg0WhniO4FTAqOCvyb958NkENwfWB30Oc7oze0+9edYNk44NQ0x7/mVFrPZM
0BGgHyDOAP97xoflrYr/zwjWC1vg0Umvu+jg0cUP1DEj6Wfnm1oS8q4ue61k
zXy16hie2FQTwfcKfQw+QvyjGz3Q+Ab7NODfwr+n+Q82/8PGz+VB5Y9K+r/Y
Jyc9nug9iMGOrh+/B2zJA5LG6d9btT/rwqr33lPDXgwWjWcBB06MZ2Q+/mlB
7N9+SfsGgRuamDR26KGq/1m6Vc3/IOVfpPj/4DuCDwn/JOW/pvzfFF+SbgHf
gC56bAfb//jWsAGOCHbA0fr2BxX93vFzxd6IryvjtCqtN78Edpt/doMdAKMD
fgC7IHpE/MrRpaLzIH4Utn3sfth8exGLIeK4VXxX6LH4VwVzmTkNX9et7BjY
r7R5r8Jnp6Xs/7URFwy8K763YHrA/rPOkoL/x+cYbDF+x8SYxLcKv6rNEo6f
RVwpfG3Rb3Ftn7L/dbCB0h/i1pFsFfhBnhMbIvEU0dOAo+4c8ogDvCX3TVin
ip64T9AVE68O/SuxSEeWHJuEGCXI5MgFt3ZyjAXwL2uBu9F4vxn0Y8RtQCZC
NlqrxXFt4LmHqJ13M14/D9RatFT5G6puQe9xSd68/qcqszLn7/NOMAVhjeU/
XIwJWOseqrt9zrE15mlt3DtnPNNeqvNIwv++4rsEf7e5vt9jqvY7w1cbnSl4
WHRK3dTOZK2931X8z0bkV/zH+bdF9yb/3+JBMBo5Y3/AkcBDwz8Tj4C4BPwT
BxsQOCTsKNhE0XfiJ/5k1TwT8VrB6LE/Yf8iTg7/d0Z3B+YEvEnvMEeZq12D
/YX1jrUO2zl7BT6FS0P+4fXGSRwS+oweu07p0XoncyrmKfAxY61jnSPe2YiE
9Z3EZ961bJ854g2AieH7Bj/Gf+yw//A/Pnys+W7x4+O/YP24b9lYKnyrV+Gp
Il6nsX/xP89V8Z/rvWbAL9AuezxxzMHYE2/4oIj97g8pmyaO+hqhDPPtlYBv
BOf4uN5vIm/+lPgN+KPiiwrGHCwJOHP2LXhBZChijaDDg+dERoSvg78D2wjW
EXxjl6BzRvfcM/SP+xLHiHhG8LrElSIm7nFt5muw/YCJwT4DDR8LL8z7RabY
uWyfIGI2EGsBeRE/Jv6Htir2tLr1Qc1xHPg36+5l+yMSW2LHsn2aiOWAfy86
KtYOcKfgWZln16tMU8S8GXH7wMuC4UQ3vHbC+mH+EVkKawtYVcrAP+Az3xLo
FnSGTf7H+EHoAfP2uTpZ4/RtxrFsNtOcPzxrzO134g2Oyjr+YlfRl+fMb1+u
b3ZQo20Y6IazRa+V9+p9valv6gaVWarykaLltU1E/5b1nrGp6AF5y6qbY9/J
Wz79o+J4HdPBPuccg4JYkmthG8p53dte5Y/IGqO7QuOzb8E2fXjDE3LmD8Gk
bFUwLuVyfMA09lk96zFgRXJe27urn4Oz3q+v0LMMVv1P1GYTus2i4zR+p7E6
Ue2M133uVJmU8j9Wma2q1tOM0dqytdr4J8TLpr8zc/Y57tpunNso+FPsdVl/
n+A48jljOXqqT3sUHMcUHfYROeuxeyn/pyaPM3aGqTnbGt5Rnz9Xubt0n1vQ
nRYsjy5O28aGfe0B0Q2Nng8/8h6DrnVvtTMrZx/oCjJBwTii2XquIY22PWP3
+ytr218HtZMoOu4f+JFYwJC8ynpeMBapqrzVwX4p/xH1rQP8M9gqPfNXeWMV
b1H5rgXb4Pu2W97lH7AT1P/mrLFLLbrXXTnHDTtC87x/xDFPdkfPredKgmtS
+/vnLHu/qjkwN+N4M7trrObjD0FsFaWPhhiyPdT+g01eF8Cx8e2O13ur6+jv
ldi0H+u4Vtf/0RzZW/mvNTmOzz6iFzU5Ls8aRctRyFBr6L475M2bHqX8V5sc
h+ZD5T/dZD7/A9EP5a2/OFV9+LTJvv39Nc4/5I0RObLd/tnEtPpHz/VTxnH3
n0Rf2GQ/zH3Vh3eabBvoq3ZWLxhn+Lraf1z5j2jcjsSWlLeu5SjRD+Stc7le
fXtYY7UZegvVfblgXcVvads/sH0crfyixn9D5W8jerOc4x6srf50zxuLdbvu
dUPB+qVv1Oa/BftZ/ap32TPn+EoD2u2XVcSnXGUyjbbVbqy2++f8T46vU8b9
gPn5VvQBOe9Hf4iuK5p3Qcf/QrCRTdOcubfgZ1xDz/Vtk+0Cn/Ds6ttzesaX
sE81OX7i18p/ucnxHK9Qfx7LWxd1rp7ruybbtfknN3EikxrPBczVgnU8XzY7
hhy6wU/Vn2KjMTAfq19PZRxjcYH6syBv3dOAwDduWjYNT10V/XXMNiL85E+L
2e5HXBpiTxJnjf9JgtMCswZGa1nZ8SH5nzLxnrE3EqcFrDDYEXRZ4NaJtQJ2
HX9o/L3xiWb/YU/aLexP7FPERu9d8X9j+T8y/DO889Q2x3AmjgvxrsG/E9cF
DDy++fjlE0cdHpb/rnUOfEsOu3LVuhf0dOj3kG/Bj6BHBrcADoOxOqzif4/y
j2Zw1cSUJj4M2CIwRsRZ6qBrI5TfqvSNquNsE28bXSA6QXRK/AcTv0j8I5FH
kEXObnNsGnhjZA3ikIC/IF4Te3FTOOcflPhR4k+Jn+X/+H3+7U3MLmJ3Ifsg
9/CPNnyB8TccHtYcaHwQ4ZfZl3i/YLPBZcNrEXuAvhErIPE/Pqze+lX2LuJd
vFvzuyXuEPH/0GMTP/Dost8d8aLwdSN+D3v03VH3GV9p4umSj1y5ddQxhLDZ
oWdF/4uOY4sgUyBboANCj4y+Czwd5fm+0H2CM0b/iV4XnS7/lSOO0EfhXRMz
gHgHxAogVgIxEvhHKnIWMhb/EkJ2/VXnF5edT5kZbdaRoh8l9gi4ZuYG/UzV
rJ/j34KvtjkuAv//QUYn7ihyOrFyibdLvFzkQ2L24X9KnIafwj2Qi/mvAzG7
+D8Y/0whhiT4evwOwNiDm8d/DzkOGR/bET4gAytuhxhd6BPQJfD/MmRuZG/q
4fuwNNyXWOfwkvhZrwz9Wh7kadrfK8hUrE9PhHH4IfQTH3diBPDu8JHCfwbf
ImIlDgx86TlVrw+t7eZ1iS81sM16bHgi8F3EniKf2HHwaPBt8Gn8XxVeGT6Z
mFj4mSL/oFdBp8J/EonVjK6IOBHIzsjN08rGxYFZw2/96Ir9P87TfU/Ru/ky
4n+InNJgmhh26AF4Fub27JjjMTJG+I9Q96JQBj3BlLJpyvJtcl/iNbAubVEz
3Vr1/9m/CXWXh+usRR9onH5rMk/2QMo+UfgsEPMY7AOxyw4s29dj7bJjt4BR
JX4LsaL2jlgGhCcjbjj+PvyPGSwAWCMwR91CGXCoPYKsQXxxyhM3qUMo0zHQ
3SOWtfmf7f6hPGMPTawY8Ez8R4o4Yi9V3Q/iiS0McdWIr4ZMNj+sCWPK9jvG
/5hY7PyLfkybfZ2pS9/wqSC2MnZzYq3DgxNX7YzwjvFNBmdHm+jtievAvZAp
iN9M3GPKH1Z2jInRbZ4/8PrEy5oV9C/oXpDPkE+R0Yh/w39feC78oVfFGq73
fVjv6D/xsfCnIg4W7fNPPfwE0d+0JBzvF7kO+Y54YvivUBes4GtVx5Yhxgxr
Z5/QZinIJ8RCBz8GvoN3xZq3e5BZ0CWiRxxSdYyoLqFvb4ZnYZ6DWVsn4NZY
88BKsO6hd2E9RPdCzIydwvtCD0L7xFffKvSBezGPdg3zBPzxnkE+2qbsPrwQ
sHbYN7FzwtsR64OYHsS5JI4nsYPwKcHfBBn6+LL91vFfJyY98cnBgBE/gzga
YMiwxaNX45/YPNOs8P2+HuR04lET84U84sD0qbgMcZKIb0GcC/4vvSTqGEb0
oU/NemnwacfUrEsgDsnuFcf74l/qxNNFV0AsMnBfxK2YpHf6ftmxvviHwjMh
HghxQfq021cdn3Xw7PhKgmknFhExpYh3RHwj5H18GYgLwrMTd4yYxtQlriLY
WsaQGBfwZ3tE/Yzwe/B64Drgo55pMF81rs17JnoGfLf4lwfx5W6pOo5Ud6W9
Yv63IrEU0UEQJ5a4cqPLjjNAvAHio18V3hfxvvhGiMFyaIjBSCxGfP4OStjv
76OEdc3E3Mfnj7h2+P1FwXaorUjF3wNrCLpo1grWFv59SnzNCwJN7ETkP+KU
rha3vE/MxkNUvx1/lIp9MfHVxB/zs7LjQBIPsi1umliy/JviyQbH6iQWFM9F
DCj87on7gH/81+JL69LGI72td1TFh0f0aPG4lxYsKx0oXrtn2lgcePmviubn
0x1tw6RMD5X5qOh/xnZWGx8WbT/cWfzvl0X/L3aR6i4r+n/nF4t//gAsl8qf
hu2m6HhII0OsHmL2gPFB/kT2RGb9qWi5dYn47dfy/pdlTmWWp23/nIQPjdqa
jr4TP4ui/xeK7IKNFfnlOM3J66OOdb+b+vZ10bLhNLV5UMY2P+Tdmwu+71g9
4/Ki/SxPFP190fw/7X0R7LaTWo3RBJ+J/P1b0TJ4P9Hj0/ZdQo75r2hZBtts
Ithno5JN/iraDoqtdUrO9tbTdf2Pom2jB6tft+VM75Q2rgub8PPq8zKNS0nv
tI+u76hrKXgi5f1eDDgxPcfmJctc56ifGdEz4ZMz7ge24mMzxsah812EvJOz
raWX8ufm/F4GKY3o2unq/2dKszqeTvi/Ig0l/1tkILJawTHph4iOh/LjOvp+
3Av8XSzcq4/o+lC3rt02Zeztvyjv1FywJYMNLDk28EmiqyXLGBNUtya6f9Rz
iLkGhmq87rUG+DOl3VT+vaLxTjdonreXbIedqLprlvw/hvmaq+uVrBefpPz1
S/4PBLbxtYJ9/Ak9U7lkTPTfaV/Dfr6tyi8umh9dJ2e/Jta3NUX/knIcxfVF
JzLGiYA/vaNoDOoVauOGosvgw4TfFJjbH/RO/03bDr92zu3SJhjnW4vGOZ+j
MvGM7f8NSm8u2meqXvT0nP8XtIwxKNlP52TldSrZ/2KsyrSJ3kFrfUxzrwvj
qXaaNDe2LzmG0zbKX63RPpp/Y5sqOWYKGLTOJePQsBvvXrLtGH/lnYPP8gye
Mee4iWflrBdAJzBT+RflQizMjOvgh4xOboOS9XJb674dGo1RANe2Kn4re6LK
3F9wbMuROevX0K2NrFqPDm5hNZUvlIx3QD/XXLKObrieq1hyDIfRyh+dMZ4I
PV+HknV94OZWKxk7Nybn9827BstcKhnPfIbS7wvGYbSrn31zxmdcmDVmFLzo
lmn7SeIjeVRH28ix3YBnPDJnTOMw9WdI1v877Y0tVfRM/FbV/oSs4ybH9X7P
yTpGYZPoyVnHLvxXZc7IOUbWei3WK6FTqih/aaPjLK8QfVbW8VsHcp+C4xEf
rnvtUDDO6GjRY7OOxTxY7d+ptbTQYGwfGD9w0aOz/ncC8WP2arfsiJ38DPW/
KedvHKz9Omnj7Wcof+u04571UTurq29vt9nOvFrRtuZT0HdlzVteBM6tYD6u
RX04L+tYqOmSfQXBJR4D1rRofFRf0R2Ltn0fq+PirOM2st5Xil7zN8COU3Cs
/42Vf0rOWBZ0xsOK1huDRwZTC6/3IPrbou1g4AuGFm3Xmil626L593Gi1yz6
vxrdVH6vgv9JMLPFfonYVcaL3rxgOW3D1eyPB3birZLnB3PjSpU5Nm1bDf4B
+KDiIzAJO3na/xS7vWJcGjHPn2LtzPpfi+CXtyzY3vQda2PAPJ+mtHvaOOA3
NYZ/poyVGqh77ZA2DzoQrEDasYY/V93d0/43VT9wnEXzG93YHwr2QTiVskXz
Vz2V/2WjY2KCEeiSNk4Af741cvbpO15jcmDa+K7/1MZhaf937y/VvSzrWLfb
lezfiL/AGbq+TtE8Z3/1Yd2icfs7qsxXulcpYaz9kLTx9mAcphVtu8rqnt+n
jY9L6XmvyNq2vKvqft3oeNZbil7W6HjZh7SbX76tk/rVbp6NuNovqMwmBdtJ
F7JmZB2Tegz+Amnbyy5N22cYnXyTvveZWcf6nKgyhxRsE39DdRdmPefniq7L
OY59Xcn+jdjxwHF0DjbltVezrwV+Fm1g/rOOPX1T1pgG8AxgN3bNW16ZrnbG
FiyfRjTOL2etQ1sdnWrWcZk74Cuddczue5knRdsKH1E7FwX/iL3Sxgqzlv5U
c5xq/vG+mupen/W/u9cR/WTB8u7Duu9WKv8WeoOsbTnYcfC9uCht/4uL096P
2YvnZR3nGvmXvfSStPfThPp8T9Y6Dd7JPUW/lwI8Yd4xWXnn9xf93s9W+U8y
jj/xgPIezzkeUm+N/4S84/SANcMnH7xZs/rcmPV/2J5FB8t+qTKlDt6b2Zfh
GdfNmm9kbHJhfC4pG5fXqDl4CTp59k3GU+OzLvw3dja1dWaj7TXsLe2N3l/q
1c/TC44NBI4ZPPOvyFtqp5D1P9ZmlMyjwJ88rnt2yTimBf+Y/jfwzrupne2y
ju31V9X/S/gD2bfdPHKW+Lgq81XG/xt4W3UXR22nOEzz8JWM9fk3qv3zM/5H
4LSMY2oQT6On8jdWPxcgu6j8PU2miV8+J2D7t6/5/+VH6567gMVK25bBOfld
iCGn8tvm7Z/SQ2N7ds5YwN1U/u4m+/48o2f/RvmvoCMp2W8fvndnlelVsN/e
cj3Lz6KvZk9XfyYGHq+72jw9Z4zg1qpbn3UM5WVNXlNYT+Bhd8qaj/1RdDxv
fBv+3MgnyCbLlR/NG9s6Wc+3Ydp4WniWm5vMt3wv+qaCMa/7wsvn7TsA/3JX
k3mYMWDC8dvi21GfX83YDnJniJdC3JQ71f9awbpj+CdkCmQL5A1sGdg0eA+/
FRzb416V75Exnre55ljMZ9WMb6xvNMaxd7tjZ6Kz/E91u2bsK/YKa2PO2JAn
RC/J+Z8Viap1lnni8vKNZoyvaBT9ZM66s/dFd8+ZR35NfdizYH/URfCtCcd0
YS1AhzhU98/V3CZtF/TsX2ccb+YfjcmvBWMdf8RHO298Iv9YeELtf45eRnVb
1M7qamdQu/8vOppYwaI76130aLctDrkLmQt+lv81wtPeC44ua91QUvdaXe33
Bf+IHJlxjKX7dd9XCo4Tv0DjMC7jf/L9Ba4E3Yzq99YzthXsTwuPf1rGfD5x
BeCV4ZPfVtkzdVyCrq7dfRmhNIYfU9bxm/9R3XQ2xC8HU9fkuIMPwKs0OWbQ
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
4g3MSDsWFX6L+Gujmx+rdCL61Lz9k6/TMUv3iXc0jW7+2YrjVvZrduzKw4lH
1Gh/b3wITmo230YMleHNjqNCPNd9m+2rBP9LDFmwvl3yxtODpSeeKHEzsZUT
LwQ/Yfwp8WclXi0+re/rnbaL7hEzLqPcHHTUxH/KG+f2qMo8gq5Jc2AbpSen
7VuK/ps4TejAtxfdsdk+jo+p/c7N/j/ZLWnH4SIG1/l65rXBlOt5W3LWraBX
2SNvPxZskeyrGzV7b8VPeuNm+/Ddgf2kYN8k2iDeCrFWflI772s+7JH0eyC+
Lf5KJ3Wwzhp9dSrv+GjsoU/w/ZaMqRjV4mvk76/2fyg5FtA1yCsl6yKw3f1R
sr4dPQ3xyJDrkaGJO4McPVZ9/rJkDBa6c+LvoD+H3/ypZJ5zkp79prxjWGAT
xk7GvF0VsyTnuCXM93dKnvPYFd8u2bZ4AzaCkv3Ym1Xm47xjf2yLrg95vsHx
R8E3gG1o1rMnNT+6o4tWXiTvGBNH5R2/lXgcxPQ6MOyt/6YcI4z4YH2U37PZ
frFH572XsI8QD2z/ZsfzGC/6hGbHt/467dhe4Ox/a3QcjyN0vbeO/Zodv+Pj
tOOC4SO3NO2YXGBSH0SOKTj+IDzatyXzZn+mzY/Ci/bLO64NMW2I83pMs2O9
Ev/1yGbHgP1OdXs02w9vWdrxv4j9tYXa/zXveKbYe/9tsc13NZVflLNf8SY1
Y9X5n1Vdzf/T2qxmrC2Y281Fd6157u8FBrBq/CG65UjNOn70wwX8/8FYKV1C
fH/lr1ezb8D/K+q846Uo0q/vJTOhp3VCjzNznZl7za4IZgQz6gIqKqvoupjW
HDGAroBiQBEUBAUUEMmCKEHXCAorJsSwImJGCYY1rIoZUd/z3dO/z/vHfOqZ
muru6p7qCk+d55z/ab229bXQzAIj/x04V5Wp1ow5Pj72lX1TNR6qqPxNVc9D
8bFv3kbPqME8EuDLwf2CN0evC4w957y4ar3TbWrGWxNbCv56QdXxCMPj8yRa
GcOOTuXfiDFS+eU1a8GsVnpWzTzlr9as1YQeEVpN6EOdwb6i0odrjhl+mfur
WTvmDaV3N1tXBq0kNITQjsE+t2Y+ePgk0ea5urW1etCPgxvyNeW1rJtvlXXo
LTXrNS2pWbsKLuqnasadM/fAnz881lJ6AI4o2V1UZm7Nmnoj47rVYw0qroVm
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
tlq0tttq2mHRHCdv0m6L5lBZJfuPyPG+L8v+KbI25Bre/aK5ZV+R/XNkbrMV
/D+RtQbXyk4VraX0Ie910XzEH/C+F81NuUD2ezwX9YEPwYklewR+MLhkiuZi
fkd2q6J1QN+W3bJovdKPZCeL5nt5nz4NDIvy35Pdpmj+zVdl/xJZt/Lfsn+N
rCv5huzfI8crd1DZSJ9uOs9OSktF8w7sqHTromO2d1Ba1Od+5orcU9E8np2U
5vU5Cx8N8+rAXJB7Kd2D9RLvgn4Pi/bddVSa06e3ym+vdEt9dmCNpvpsiqx/
+brszZG1IVfK/i2yHupLcJNG5o1eF9rfgt9lA3E/RevYrJcdFM0n2ZVnVjR/
5m5Ks/ocpmv9S+d4IDIP9Aspa57B/Um/Qvumbc/QeV6LHOM9R/aqyD7uubJX
R+Z8nCf7HdkX6/wPyn47MrfdbNlvRObKuT90n8U5HyC2MjI/wnTZr0aOT59J
7GPkOPT7ZK+MzIEzVPaCyDw62Ubzm8FzRmwKnGLEp9B+H4zchu9U/pLIurWz
ZL8emQNoXOh75n7Hyl4aWc92quyXI8cW3S372ch6lXfJXhZZM3OU3qNloWPc
yRsSOn+57MGhdUq/kz0rsp4l57g29Hme4x0NrafKeHJfPKb8yn5h6LFjrfLm
Ro6fn6+8d2VfLnuS7Bcia65Ok/1K5Lj6CaHPyznHy34msnZiGPgdoP1PVPp8
ZO3WKbJXxP/vPbJfjLxPMTn0PVD/e0O3LdrVGTpPXZ/zZP+ge8/ot8Pauf+O
4j6cWGfiIcFjDwf3UfDe1lTWQAXzIGXBLGfMQTJOecMKtpexFiuYn36H0Lht
MNuHBNa6gPN0ExjFgn21pDfFNnto/VK+1r0FayLC+dhX+aML5gGfpvM0BeZz
XcU8PeM9a7ii0WGC27GX8pdnzOFxUGCOYDAX6DuBHQQ3iObGiLg+4wvWNkDX
YJautSJj+52CMRPgJX5Q+mrBWmOf6/dXWKezF1AyV+s3arfrlP+vtMfOUuA5
E/Ml6vtswXVeq7znCua0/qDg/X72+t9inzFj/zLj0uvx2ASnRzr0HO+PmjHk
YMl5TsPj/2VS4PNyzm1VdvfIvN5r8BmwTlP9tiOmNY4XmxLYZ4S/aC/Vd9ek
5/M8y+cLfp7LWOvrt8Z2fh7j4+eDlsiggvVEwIL1KxgP9pTsgQXrZl+t9B/4
Ouj3Uv6N/B9Vt8EF82mfyxy74P3WYtrHUB4fD7GX+HkuSLs90Za45pXxdafz
PxS8Z31VwbguMF34ga4o2BdEXS6P67NY+ZcVzG+eSvgYynP9AXEdwA9eWjCG
ECw58dWsDbuq/mfIXqzz3JQ0BpG9YNr4tXE7J74QfUdiDMGSw5sAnpz3Y1z8
XtAexxbcJqnLOXF9pjaaM4I4JnAQxBuzp3xnYB0R+JeJszm/4FgbcLVoF7Hn
wbP/e/z8eycdk0OZuwL7KfBRLFd6vO7hfV13YWDsI7jHA5LGVrI3xDr4rPh+
WW8Ry82a61Fd68KCcelltaliZJzSBuW/oPyurONkrygYO3Rp7JfAP/F70vyk
cJMSi8ieGDEs4ErgpQVbwjvDuwMmjVgW9LGIZ0nWre2FxtfqjGNyiMdZGRgD
BP7nnYxxKpznkoR5yeEknwb+M+VYziXE1aXMeUZ974nrPJP/p2DfNzpp4E7w
AcLdCA4Y3O8E8C/MJ5W/Uvlz4nt8seA4H2J8Zuge5xY8n+e9mRe/O8y1zwg9
r4P7HLwOWB1wXuX4GbJWK8TrLN7vfLyOC2U3MR+WfUra37FbBMYEgAcArwT3
H5glYn2qkeN91oITZB7f2li/hQU/21UZc4+yRj1Oz2p+wTiE7/VsJss+u637
pAVxv3RAxvph7FWx70J8GvswxPwRE0U8FDFznxUcN/dxxs+FZ/J+wn03/fah
querGWvYPwi+q+CYAjRd4eInlpx9HPpUcP1fBV5bsq5smXD/Rd/FunN9wX0p
fRhcn/RjnO/9+Jzo4bxZML84/Rl+iv/1aUo/io/9VHV5qWDe608yfjd4L4q6
1uUZ1+Ft5a3S5z8NPt+FKZ+TvvnDgvvnLzPWWoNPYH7g79jfpbyuoN/ukXSf
TvnD0z4v5wRnxztDW+K9vC+uQ5uE2xn5vE98x6Ytzy64PTck3HZpt9zHlPhe
0o1+jxiL+G9nxP/vt7qf1zIer/kfphX8X7BGf7fgdfo3yn+vYD678UmPeYx3
HMd4z7G7J12OMpfXjQkEG1hIeAxj/ELnbXrcJ19Wt3b5wby/+nwXWJ/2SKUf
ps35fq7snQJzrKMl+GjOeoLECz6Rc8wgcVdP5hx71UfHLcqZrwaf6JKc/aL4
1IldxK+O3+6pnH13aBc8nXMMHXoFi3PuH9jzfyznff+7k15Xs6a+T/lzAvt7
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
blG6t+rwkI69rslak6/r96vV1n4uOT57XCvHng3Tea5T+RuazOE9uOp7HqD3
YmjdehDohVyiYy/UOabis1GaVl1PV70CpUNVJoW2icrsCW5c5xnSZK0+sMnE
UMCFByfeSN6hinGdaEqABT+wYmw4fE9wTN2mMjfq+PN07N9r5tOEV3OKzr2H
PvOVf61+365q7e+rZR+iMaixaD2Jc1gbsM6tm9twXz3nGUrvLVvrOFPxOMF4
ge7TafoUVWaa0vt1reHMLWreMyD2dqzy2+tav6rNzKlb73U/xleloyv2UY2p
uO+mP36hZJwxfOCzeXeUP1X5g1TP7YnfkT2wyT4INFLv4L1W/nTlP6djd69a
r/walelfNW8cWrGdqtYzH9xkPwX+ijvrxsdPLBsvD18hvIX31a1v20X2rLp9
dtW0eTg61LyO/1zpz6p3Gnxqo+PVa4Hj1/Hn4teFjxwuJDiRzgEHpGssK7n+
3+r4Bcp/lfas/GdLvsezZD9T8v9CzMHfUuaqOVf5L5Zcf7hnVyr//EZrx9+o
53Cu7KEq80+V6aF7vYH7aWWdTXhjr0mYR/Yi1W2wnu1FjebyQndjEzEX1E3l
9yUeQXbfNo6/u172b8SaE4fXbN4uuENvkv2Syh+g/BHUuew4vuGynyxbX+9m
2etaWjcWPsYd9Qxv13XP59iS2yFjzS7Me5W/uGRdIfSFeGd4d4gberxkLn04
9W9t9rMmdntpyfpH6CBNb7YuJtjvI/S9NfgC9veb3XfDzThDdme48nXdqTX/
Plp5FzWbr5M+v5/sV7kX2cfqPBHzIzj3lL+i5HfzPNnLS25jpzdbu4h4TGJo
n8k5ppb4c+LQ4VO/gmei8sfpXq5Fy6e9x5qX0GvUe320zn+hyrxccp9zTMW6
nbN0zv7KX6T83sRTMr5mPC5/IfuElGOU7iduRf/vgrpjAybkHSuwr74/pO9v
6fNvYkna2Fd2Sd17kcTCPFqy//CuRmNtT0k6Jn5bnXOy6vBOe9ur4/Pg6y+1
su8f/+N/AvsjXyG2p433RBrrxuvRT0xS/XuXzeN0R9X8ygPbWhOKWNgv47Hs
kZT3OdkzhgOTPWTiZbq0sL4zOvWjdL57Gx1n1EvP7ZeauQyWB+Y2eLBqPR3i
dG6v2l9CHP0PNe+RMoYcEI+/3BfxzMQ1X133seBb0fUZ3eS1+IJmj63EWO2n
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
NWvrcSq/WfdypPqQHsr7VHV7RGUWq/1/wFxO+X/GH1mx5ghcWMOU/1FLv+ML
K9Y4xbfRQvkF4nUq1hidDIdDs/foiWflHufpWm8qfy9iH1TmO70zz+heynXj
Mu5p9lxxs8q0BIdcMvcC/qzxcbwtcbcTS343l8pu1Ocq+PkqnnPC6wLXKHvG
xAiwh7xE5Z9Qfl+V6V/z/JB54m70CS08VxzfbO1Y1g4TZb+n30/V87iZOaKO
3V6/PVSxj2FX3UuVvk512IX3q2L+H/rwwWVzIjH3vpq5mewm9nJ55ipTVzqh
2X6uUXr+j+g6n8EnUXEcBbF4xFWgW9MdbnzZZ8XtgXbBPJ75fAp+i5L9Y58o
/4OK+aJpJ+OarRnJuHaB6jC+pfGuv8Rr5P3Vr3yqY/dr5fU9/xP/10D4OnTc
oXHs8MiysYfouOJDmi/7ZP3elufW2uv+etnazmg6Mx+jb+C/y+r7eSqTU7qw
7Dhi4ok3UC+de0F7+yIWtjevxZCYr4N3awVtSOdeFbc3Ysd45h/yPT72wZrf
O96//mWPO4w/1fg5X8Y6Q//Nn8BE6vzDdN4prX0vL6j8WNVnb5Wdq/zlyu9U
sV9gUsJ8e7RF2mQF30DN/mT8yveU3MejUfxgydqaaGzeyj6I7Pkljy8b4zJz
9P1ZpR0q9oN0yhsrCm6SGElwlDvxv+r8F1T8vMF8Pq38p3XsvTr2POX/zhym
tdcm+GsOzBvrxFwCf9G78KOoznfr+y1qV4+Xzf21W8WxvsT8vlE33myqnuc3
SnesmEecPge86zNg7JV+rutuz1ik35cyLuPL4n8smStov4qfJ7q+jNNo/10L
lq/uON6NgeN68Qt0zzvGmufC89m3YpzhFNXha6X/DxWVous=
             "]], 
            Polygon3DBox[CompressedData["
1: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
deBdgPQQ4muUI+uR5/Ia+83s1L1Nc2xJ92Tcb5BmrAkNqT39X+C7kPQ59GfZ
/syBpZtytjs3pMGkxeTHvaE9DPm/Uf9C0gvEn+Nb3MnY7FAXnp5zcPf2QX2l
3ugorNoYmk7aThpJWul7bfr7Y0+mbtm+gzK5I4FZAtxXkr9Ef8qr69BDP5bu
j2z7LfqzZl1k3CX6uxHtG0GZn+nvjOqMk56J9OhSbEzkDa0j3UL5472DVUcG
oDyhwzOoMjyerkH5nbaSL6hn2B/bnP/UvyzEZuBz+fGeZcQf7wn9PrYQnqG8
Q/0l3FkZHV11deUV790e+lae8foD0XVcjnCw9zvwj22PbecLlWmPtlqemZ6d
p2mP0Mp8U27HGG0rDxL45WjbFfJnKL8Y32C440f5hcm/kvih8ueJv9qb+5lz
egXKVMifbwovTD2d5Rivj8j/kPg2tOdP5vI9fM/la6MnOlKaFFxrkp59IDYP
2j78rk1Kf2x9d6E9I+tDQ1/XG711ZS7aL6gj+TPxlzqiO/lcT3jj8si37M/a
/qcua9s17hpxrbSTv0F/5J/7Eh+izirpx8g/EtjR9Gft/tDo0uoVjNNa/eEn
v007ZqOP65CupM1f1oVH/nA5d8HdCN/X5k74PX2eAdhRyjIZz116Y0tWAv+G
/HeU52l17jDuHz20ZawytNrQjNXg/70uMpQ7y5GB3kx6mjbZ/dkPb5bfQrtn
bczevl8xd1v3eHWa1G3akjFfqj/0wdTKyNiVtZfBuTnjeTPtuHxEzrdP2yMz
Vna85UB0s2Ym/zLyZ6TcnOpSArOad+Ge6AarI7xGf3R+jwT/hZ3RBT6jL7qV
X2mXSXoXxnEE82mJ6vAOldF+5Dehvk37Q5NImzTKA6bs7dS7I+0bAGZ8b+hK
6csLwL8xsCfwOwfje7m0ZX3sJVdUJq2sEtjmvviWkKaTttvBO31f7hAz820e
937kHmYdjMUstOOBzshktJF7Qpq9M2f/Z+T/TZl3afsO8gOIL6X9WmP0cRam
THd9+qs+973Mt6vp9yOUX6Q+Nn6V5eiJT6Sdx44Ij0EaWnpgRCk6k+pOal9z
7HDGmf9KldmbRyiT6YnMyvP8FvImAL8VuPamvqOB/53v8CT1ddSF5z+9lPuq
uuYHjwgv8jTCovXhScojkEa5BZg5ShlvbZtnB//XlJmzHH2CncwnvjIwu1Tm
Trqqur2kWytzh123HBrUvef3QmjTpUrRO5XnIO9hadLFyujYLEn6zFL0EJ6m
rUuRXr4cXdAqdU/K0XlbuzfyTHXhtGfVNmgKMHf15D6rbuaPpFt6056WQvx1
jAK+uRS5qPLRlUkvQbqxEHvGNUlf2hvbl8crY5/1bCmyEWkyfbVc0hs78r8r
409k097IQr6vin8H8elXRB6NvBr5IvJH3IMWlLfIf2vWRHZ9lvrggzyTPyh/
byk8FMtsyZy9h/R6rI17WSPLq+NPWL8tNjb/s60hvQ7pTVjff8gv1e9FOfvE
cd61masnshYeAH5Tvu8arKH3BuLDQt8VsxI/gfmxSGtogGWAmV/dpmJwLUnY
gTas25C7+IID8VPhHiOtJc21Lmvzd9owzPVRG19ArkXXpD6B9i2Hljic8vNS
/r6WyKScr9Kh6pz/p91fVXTR1dEcTzuvbY7u5kvyaKrD473S8eiNLmc76XU9
a9Xf0+ajNjIYZZd30obFGyLDXJX0daSvsf+UWZ30GoSRDbFzG0X8DvLLNSlz
KO1ZtDf6NruqL0r6697Ilk8n3dEbnoU26NqiF1nv77ZEN1N5n2vqHPnK1Vlr
xzO2t4F/0Yb4NFhEem9Qvmqd3vm9+38L/tuAX8B9gf7cSP9/LEdnXd11fZl8
2RcfQd4R1M3/BPipdbEZ6muMzG8VcF9DfVeDZ5nK1HV7d2S51qmPgdkos+qw
+B44DHxLg+8r6rhVXbdS6FDPcHmt25G/V1/WV08p8jBtLZ+sjL2mZ4Rnhfen
TcivKYfe8U7s3dgzwrPC73Ua+9EJ8h/A/63yEHUxBsLflndm/xwDx0Ie0VGl
2MxqO6tN/STSJ1gfcNeo+0Heb6X4vpEG26WUO6F3w6XAcerw2OBri39XTepz
/1B3Vv7tMeR/Rf7dlP9JWrKUPd+9v1ATfcqTRsSvgHeiI4E/sRzd08vUHyL+
NjCTKTsP+KZzXxpSjl2Z9mUN5ezp7u0fkq4qR2dZ3WX5aZ9T9pxS9OqVR2xG
fGw5Z7t6EiX5l6XIPtS5mLMUnpm8s48G8X3Jf3cR34L531uKTt+/8iyqout3
HelJ3qtZ56MZr+vLobU2J9xeis7vQ72hNdUFlsaT1humTQvwx5Zzv5UO8PxX
p1c9ZfWV1fUdUwpvTpp4Y33flGOvLy/3vb7oeL/pWTU0ut8jCAcqbwHHW/z/
Tzln9fk1OU/2lEcnP5H27NGb/UGbEP0/TBgenqS8yXOl34gXyqEv9K10CPEt
StGtu7Au/gsuI2xJXr1yR8KJ8m+rwk8bXY7/iY3J/xb4KvrzqGdWbWjs44Hd
qhx6RrrmT9ozzTFmvOfnv03J264cWk+9iL/IryzF/4t+YEyvUsq30AfO9tK+
pcjGhRF2X9d8VWi+ZcuxCdE2RP2VVvIW5b9HauLP4hTSGygjlrZnTRQHMj/f
7sl9c59SZArKFvTvNZz0HeS19kZ+0E56rnL81ijrb9KXBukda2NzuT/pWUgf
Rf4CpDcrZy/TNs07kncl7f/1TaHPqK2JdwNTqskZpyygp5y7x4OUP4b4j6XY
LnjmyW8fTfuawXOoNIC0Qjn3Wnk88n6kd3Yk//jq2I5c1hsZnefxzsB/UQpv
2TuHd49iOfu6+/sMA1nDruX7wTeyHJ6jNKJn0zTST3dHT2R+0t3M8YP64kNA
/2FDKVtfCj2vLZvfex/KL9MXfa8O8lYoRZ44A/g7wXdyKboZfqNFyuFRyqtc
C/y3luMvrLYqPhO26YmsZhXO14srI7NxPxjXG/8w2jbszD6+XFvu3FeCcyXw
n1mI/LVnIDqm2rKb791cW/ez6dOsDbF5d027tl8m3gv8ZaXQZh/1Rp9KHVZ1
WaVXzB9JXSd2RxbtHvZ8KfoS6k3c5FoCZhL5R5EeQnwZaUzl+KyX6eXYmo7r
ji2KNqfr0aZh1H9/VeSt6gprN6K8QJ3hFSm/bG3W/D//Tw8W4luuH/zvEBZs
iy7BF+XQHNIeygN2BPbfcmzp1iTdTt6R+q7rju+gywbpaffGXetjT+td9RTv
GA25sy5FemnCqfWxQduAsVjLuVYVf1XvaRsP/J+1kVlJb6xcHZmwsuHF2+LD
Sd9N4nyGNq1WHX8M95fi70pdKOmZf4FfCPiF26IrJM/gSWDmAP4IeXqOBXln
6YOiOt9wbf67rhB/SkMHIuNW1r01+P5m/qxGuqk2PmDGSn9CT0zRhqYhPoPW
luekbKgq9leP0Z/J5N9TG592C5WzNvarj3+Gt6ljL22svNMOZL9UVu4c35n4
OqXMZek5efm7E56XV8a4dw1kT3JvWgGa5QzSXZaB5vyZcBTxrfjvFu+k+ijw
fkCb6mjHprR1bE/kberGzEJ6p570RT0s+2KftqQ/S6iP4x2D/GvEURt90D7b
Bv5fgVuANbXKQHQFa4fEV5c6g0eTLpA+j/7d590SmBrSdxP/uBz/kPLh5Mcp
S54AfPWQyE6E8TzUzk17N3kh15ajG3xUVc6HT0ivT9/2b47t6HPQgue3xT+U
fqJ27cvZfGFl5FOT1BUnbEZ75quLPy95HcpEnyF+NjhW7Y8vv5Orc4Z5ll08
JL55vm6JDbs0hjzqg9lP5gPfkLrofGzE+H3REP8TrfWx19G30NlD4/tpXmCP
6878+xaY6tb4lNCXxCj+u3JEdMj0B/hNKbSp8qnH7TP/z6u/H3CsWhce9wK0
65y2QZqyLvz5SepLUmasexd1rtSfu6N3SPXJ7tB/GPkbkrch6cfUA1BmQfqO
cuzvtcPXnmAq4/AV+e+3x95K+kjfnRsCszfxSm2hqb+P9q9B+y9mfNbShon0
j7RnF2VLxfh/026pdSD66OpHPurdlPRAfXjyTZ7/hCdaAiPszur2FjOGynDn
JfykLIM2/VXKfvlxVWjY54g3aMtKe05oiM8t6Vt9Eb5AqPFuOCTyBOUKndLM
yrxrw4NRf3BYOX42vON711+5LTaQ2j7OD46V9DXSnfh8hCmt8Zmmr7Q7/M7g
v7YzulBzVsaupbsp9an/8wjpK1pTt//NRV1ntIcnJW+qSPkXWjJ3tcf+kP+2
bo/Onbp33oE8z77qzd1oGOkTgRs/yP/TF+UfjfGFIl2uPbR3e3Wy9Kfj+S2s
8rB5gD8Dmu6iztg0aE/hffPXyqz52QZyB1PfdpHe3M3eHhIfh/o21IfXbF3R
AbO/+oMb0F6yMW2fUz0Y8seoD1IfumEu/TcyhpMbYgPvfqivmtP01QH+MdS5
BTCvAbMM8RXAd3Vb8DkmF42ITZ306WYD0Yk5hfFZqym6MueWIzcbLd8L2E2b
swe593xcG9nTZuAf1hAZ1CXl6NJsA76LiZ9H/krk/1cfPuJP5dgC6o9K/ZzN
PFOJX1EZ/en/+JYrAn9ybcpok6cfsdLg2r+8FFnnWOAPJ34R+NcAvp76vwdv
F21bzzs75bsaYiOnrt/CVaEHm8hfk/yzarOmWkmvrczHtUT6EvCN6k78Z/Wj
S+HNFIifWoqNo3at2rdqL3KV50VVaPbjiLeDbx3KnycPFhyXgm/d7sR/lSYn
f2XSp6qvzn8XkL9Kd+Jfk3+hvktIFxpCw98Hzr+rsh95191I+U5tdF7Ur128
FF1cZT7fy+vk+xzr923IGDeWc3e7jTl1IOO3NvfkPbrjK9M9pgfYTUnPXZlv
KD90qvYGjbFXXbaUb7kvdZ0sbxF8M9pO2lFkDpfaYtOtLbf+8grupd3xgWcf
6kmvTvrM2nyjP0rRe5xncC5cRn/X7863kg98Bfnl2siHfy+H7+7d3Tu8MqUr
aP8O3fE5txfxMvgHCIuSbq9J3+uGRLfeMTjM84a1tSU4xxMfV8pcmEL6OddK
KbLtJ2nTr6XICJUVvluT+8uoUvQL1KG9txz6vLsmNLW0tfb/FxJ/Q5+YA+mf
umfP8N+fpfiL+dG2K7PojYxFuumpwfq8755cGZ2ZunLu71dWxgatvpzv693+
utroWy9fim2e/mLVh3R+6KdHmk3azTXv2hfHyMH7vLo+75HekvhipdgSKeNS
1nUM8If0hmcpf3KPcnSp1Hd8uRT6Tr+A+l/4tZz9/GHy/oNmuov+vlmKXslM
hLeIr0rYrTI+D+R/eV/0rquNnvf3tUrRBXm0Kvwv6fkZlJnXhN96RyH8H33F
6L/iX/KPaMid4YByfCrqW1EbyxPkP5RiS7Q98+QO6ru+FPnDLoP38dpSfGX7
jfTP8AbhpcrY8Hsfm2Ugul/yPByfoxmPg3vik/pT0ucSLpX3Qv5+3p9LuZtq
MzUb5ZsJz1XHZlXb1UbyVynkjNEfuPfjlSojz/+yHP7UUt6j5Tl6Xx6If+9e
dVKJj3GOUn6/Qu7z65Xif/j4Qf2WvnJ838jDkJfhHc67p7qi3u30qXdmT3z4
6mvviZ7orai/Mn8pPgqn9sSnr74L9fGtjdr1lfH9vT7hDOKTBvXB/iP9fnV8
PLjf3uUeVBubV8dHnUX10JwD8tfUh5I3tH9V+F1XlKOXeQBhQinyRXn/2s8f
Vw5PQN7A6YXo3+tT8qyejIm+Jq8qx3eu/lTVF9Qfqnt3c0P8t0rj3MJ6n9YW
2mdhYB6sjI3HR+Xwpy+sio6cunJ3lLIet+zN/uUd0LugPNljSpE3tPP/RGDu
9C5MmY9p21bkv0D653L8aHv3UN53Qymy3CrSD5bC3/IsW64u+r3SSNJK3kGl
p7wjSavOo+6A98NS/BDKM3F+7U3YkraeWJ31JL/kVPK6adMRtG1RabSq6JhN
LoXml65Xx0ZdG/kv7l3OWeeuPkXP7on8Q/7u09KI4F6VsHspPD7vycpK1AdU
ZuRceGhQlnTQ8MiS1EvTH/TBw0P7T+mJP+i33Q8Y6yOYf8/05j50O3WPIizR
G5pW2lZ/+cr3pEGkRfxmfjt9XMl7nLE7vq/8hn7LB8kfS3xZwrukHyC990Bo
VGnVQlP0FuRfq3ei/onjsTH45i3EH9y73l8H18fu/Lc7eX8RniCvg/3i7oHw
k47oyRnuWS4/V96qc8S5ov9TebuTqWdb+rsCZd6nPQ/Tnn0Gsp8eUB2eibwT
+XGuXW3qtK07thTfHuq7P1KKjvplrP3qYnTXx/Hd9gHfP22xRxs+kLndQvot
4mv6TYG9aGj0adYg7KN+79Dot/xRzln5AulfB8JzkfdyiD4YvasQZgF+JPn/
lXOn9G657ND4h5YnYdsOGRpehTzznauyR7lX/Uv+M+CfoTP+fuRrqb+hL3F1
mpTD/Kq+R0vu29oHj1V+0pi+aZOrP+E3B/mt4wbCCzhYu8+B+Iy7Bzw9w+JL
Tnhtee/pjnzI9amvqwXawrtxDbgWPMPkT0mfnV4VHxLKz04vR7ah/dwZg+fD
1+p7e6cvx3/DsbXh6d4k77AU/sLag/P3fNKVpCsI55fjc1VZ0jHd8cW6fDm4
Nua/Qik8RXmL51THfnb/cmyT5AldV46/uZ+rIiNYQV2YgfDJvBPI/zlkeHgB
J/fkfQflj56FewB/KPHVSvGPtz117Oq3kl+gP1T18AZy3sqb2ZMwvhSbIn3U
6ptWWyP5e8py5RnL/7innPu79/jtR8Tfv99RnvBWxI8YHt0s9wz3jsOH56xw
T3Zv9g7gXWBl/jsH+Knl6Fr/JA+tHPmivqS0z9uG9Ma98YOjP5yvy/E56131
psb4olVe+lRNZKTKSr2faZvlmxq+raGvl57a+HrR54s8SnmV2jMqnz61HN1I
9T12K0em436lL1RlPc4vfRMW5bl4/g7P2egZ6Fm4rWdObfwLPVyOPGrv3vRB
+egutPFu/XV2RN/E80r56M094W2PH5790jPXs/fQ4TlrPVM9W4uD30/dV3nF
85byFohvgvhehfJAaaES+WPIX87vWRkbsJPJf7EUW6ovldeUkv9RIWeSZ5M2
3Npyy0M6bnjk5/v1RIa/Xzn0wijG6zj3o1L4cb4LoY3PkeWMn77FtSHWllj5
pr6pfJdBefwUz3NgPyjEHk0elbwqZajeZ7U5XqIv38DyN/TEj4kyJWVLyvCV
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
IfNpj7a8wbmP32BI9HnU61EnwTfMfMtsFfo8rTf+JbRN8M013157gf593xR/
D5/y38PtsbVSnvwDbTqZ73N/U9aSNlJ3Mp/Oaoo+sTqGytyUvd06yC+7nvJn
NsX3xybUvzj9Wbwpb1P9jwbSn5JzuCFzuqMtb1r5lpVzSn0PfaEo024vxyZF
2xRlqvLLb+yOjF/ZvjYGtzJ+p7bH95y2ZPIYpN3H9Ib34Njs2Zaxc4z03b4j
6a0bwmPVv7W+XqZ5BhNfVD27prxd8xD5U0nf2RJfUvr8PqwpPsD1/fm/Nx86
Y9umjdsO6gWwX87SFV9I6t3pq0zbbG209Vl2L/DTtCGtiU3F5cCWW5KvXrxv
7vj2jm+6KJ/Xvq5L21H6t6a0gXaW+vuoiW3YyY3R0VE3xzcb1UHXHle7XHXT
LyVvxKB/a+tfXTvfYmxlfWOmk/bMRP4blXmz9JmWvAEpPnV+Th3Im2Dal8of
04fRXF15c0nfRhMZz5V9P6MqNLc2ndqGaiOqrecT0gD1senRtkd/3K9VRidU
3VBljiu2RqavLHI47fudMbuTvt1fl7ebztLfaFXecDqTeA3j/XMh99iL5I3V
5c0r77/qgagP4ps6yjfupn0zFXOW65N/46bgsKx2FmtQ36zF2Pr6Zo7+s3xn
QR8svkfonHBuaC+9GvHTWvImj2/xfKRePbgGGvPWjG/QKD/UL+PWlbFfuEvd
2GJsffSh+ax2s4P0vT6dHtK/IPger4sO92mMx55NeVv6J9oxW3POTM/KG0nv
wfi9XxWfUr53NQ9t+rQqOp/KNyf6Vg3wZwD/Tl3mjHNHeyfto4bw7VZviY3l
nozJFx2hyaTFXgTuRObDi/J6C3kXaga+zbiu+KpSZ1na4M2W0A7SCPpr9G2h
v6qiQ7ZSS2gQaQ/ttAegX7drzR3eN9ju8Q7XEXpsbdc6Y7dDV+TT+kTWZ7N0
g/SD9vy+ieTbSNrbeUZ7n9Y20DcVlacObQoNI+3ybntsWH2jxbdZtG2dPDz8
I3W21N3yjSTfShpdHZn7PrRtj668z3o2bdyrKb5w9YnrG0t7kref7x21J39v
71qtOT+Xocw44mO6kicO97bluvOWs3vcSo2pw3xxKHNS9qRMRfn9VrTxwOr4
6FtLXr28zar4GNce2TfYfItN/QxloDMxnqNb85bc/96AYwxPbYtOo7owA52Z
U2sO8gCUKS/fEtpKWfNY8mekjxeQ/rMu/Ef9QEuzq1/zGG2fj/zr6kKznWK8
PW/t+U7NPaS30ddxffyC+Jba6eRXVuVNNXWUn26OjoC6y8twHq3XmrE6sT5v
wS/UmLdDfRNe+z79hKhDd2BPfFl6hnh26NNS/7/66lPHTF2zlSi/QWvsik+q
j63nCi3R4dXm82Jpf/BPIv445ffV9pkyJ9QP/kf80qb4QtYnsjrS6kr7JvQm
7q+UHdUaX63azK7TmjfDfStcHDtLm/JfW1X6M0HapS1vsQ/Qhh72k59pzzM1
8dnsXeRfwrOF3El8a+m4ptjg+ubSkfTp0dq84bZ5b94y0QeNvmd80+QTfdt1
xVebcjdtiXwryD3AveBfxupZ8M1WiM/Lo7TNbQ8/dS/g5qfsqq2hpdUrOa8j
MOYtUJn7kLqw+mzXd/sm+hvUhzD1rQ/8KMpv2RodbnX6NyS+SlfGXn/Gvj01
e2Ns1X2DamLToK1/Zd5gnon00x3xsyAN6Jvu8qPkB8kXUt6vLYI8W/UR9u8M
jSht+Jf7aCm27Oo4qus4TP+J3t0rM8ZfU9et7bFn1cf2y74t0Zq97daavDX4
R0vepvPNwbP0z9ke32H6qPYtIt8o820y3yTatjU+P/X16Rz3vV9tLXxj17d2
9eW8BDAH1cen80mu/fb44xJ/gfYXW/K24xI10UNRH8U3FfXnVkf+TvpHqco7
iQ9I37bEp6N3TnXA1QX3DT7vK8t5XyQcVh8faJOYz8u0Rt/X/56h/uta85ai
NP6qLaHppOWuZvzOkb5ojC8C35zchfztmtI2beZ/A3bDpvgA8HyZifbN0BJd
8l35r5Pyq5C+Sl1vbRpIz0V6y6q8SdJL3bPrT478ddpjA64tuG8uaT+hjZt2
oOr4q+t/P+VrGqOfejPle3pDt0qb+X5kHflDW6OD4xsvN7THZkdbnasI7+p7
pSu+ufXR7Zsgvg2izwv9E+l7aAzhuprsKR36V2zNW3++waZv4o1bclfQB+q9
vq3WGFrZMvK7d6+Pjy5tMU6g7PpNoV+kY9TN0RflLaRfcC3qD6IxfVFnZ7WW
+EbQR8I1ddE9rWsLr0kdVN9rVF6sPajr/Vj606rvmrq8gXQd7ZnaGtuE9aiv
X/3bYtbiMcA8Sd4Lg/5436Df5+iP2Pt5IW+UvUr5zRrzdps+hl7XH3tj3lZT
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
hkL+yLq0Z9FiaB99Lvo27PZteVtSvUXv5lu1hHfrHV1Z57+tkZ0q81QHTl9V
6kipG/cj7Tu4M7J832D1LfmZm/O2vG/K+7bv2fy3WU38ErwL/t/a8xbL3xXZ
6z5pyN3VPc83Mg50j6/N2xnf9eTtFX1OKx/9E/jf2wPvG/Mv0r556M8ntG8T
7Ryo+7v2vNXpuysl8hdsiT5iR23uWrcS/izkztXQnDPcs9v/Jmo725K1/1sh
Z9rcLYO+XtVnao59s3bO8xCGc97tIg+R+n+oiu8cbQcOq47/8xmUn8pfrsqb
38eD/6yWyBqUOfSSP29L3gL3DdR/6MsejdFRV1fduL4Z9dHofwP8t0hL3rr3
De19m+JbTh9zjvEqtO/2tqwN5/Qx5fga0cZL/aMv9E3dlbcF/veGHPh2aMzb
q+q1b6jtPW340rtwQ/y5eJfzfqP+zWLMn02LyZPG1vfkEm3xhajdkjof+tFv
bIouyGWECwbvS9sT30gfue15c/Pc3uAU981d0fVZrDk8MXlhdytfcX+qj49G
74/rsZ9d15a3vLXR3AHcm3ZFd0IdivHkTdcel/bcTb/nYQ49VghNe1VP9Cm0
vT+9Oe/hKvPX90JHU3QBlPGfRrq9KbL/K4GZ3hBZ0q3KTAbyho5v5/jG/FWk
Cy25c3u/u5OxnKqPVWUfdZF1fNUeewRlHm3Sk4Pvx/hG7VrAf9cZXoHz/Hvi
F3XkLa6RVfHJ+Vh73pTVV6cytTWbYlOtrO0j8O0Ojh2B/bsmNK207YYtaa+2
j9pA6vtKH1jPgv/x9vg3983fkbSlpyu8T/0o+TbdE+3xV6pNZ0dLfKO6X9mn
B8l/0vyK+Cr2bakv26PfoJ7DF+A6vSM+H3yDbhPqm94cf/z6fNuX9D/kNddE
Rnr/QHh+8vp8w3t+YMcog6jLnPWNWt+qnbsq71H8OSQ8cHnf+mne0bfuu/J2
vTKsyc1509y3zKV5lR1/2Zq3epQh78bcOK0jb18UXfOk/yBMbcic+ZT+7Q3+
c+uiT/1ed2zCtQVXpi5NPl8x9oTS6nPL/wVuZnlCygJYHzu15u0P33zxvqLv
Bm1s1D1qBdcpHeFty2P/Ut2rzrydLo33EekxnfEfox+Zt7tj060ttzoIK6v/
05I7nW94LEv/tqa+0+ojR/qdvp8F/rWo8zBlXN2xQdf2XJ0DZVe+iatumjKs
Vdi/xjXmLjYOHJuDvxP4euCPBv8n3bE519bcO/il9OfFtujmbEd8Af1vtuSt
de0wP+iOjwl9S6iT8Fx3bLK1xZYmWbQlb2D59pUyrktp6/T23EW8o38g/7sl
ftu8173bHRt2bdfV2fg/96/nnA==
             "]], 
            Polygon3DBox[CompressedData["
1:eJwt1nt0z3UYB/CPRWYYY8ikNqIbSrGclKTTxVxCJ7rf1kWn0rTSSUXNmKzk
fjlFjaFQFutiM9WiJEf3olhEp1MunQqjy/T6nF9/POf3fd7f9/N+Lp/L95d1
x4PDRiWFEIpZA3ZSVggvJ4ewuE0Io5uHkMPveGoIK+uFUADLhw2AHWT5/OqT
QzjMpncIoSYzhCmep2SEMBv/B35ZxxBmwkY0CeHO5gneDviGE+nB+7QL4X36
U+HP8aeyUXT30e/AmjQLYWcrsY1COIu/SuytOK3FXZamYHGPsdVyPsaqNbOU
3rl4e04IoSo9hK0tQrhPbBfYYHU90ZI+7H7YNLEH6bVoH0JneX+F9cf7kf4p
7Ao56uFsg1WqeT1/TWM14FWx7epb3pC+meXz98j9oLjxNKvw62BHxe7W/xL9
f6C+Wn43+Hg9zZUzD96f/7pZ7RA3muZDrAusgN4vFuYieG/2nFr+9puboh51
/FHfnOUrpLkab7f6hsDT+X+ax+n6HAP7Sd5ueMfFdvU8zWz+ptFD3xvlyOTn
4h6HjZC3HnyBueepI1+dGWIbwNrjzKBfLO8f9M+Ef0evF3yJ2Dr6SXit+Y/z
F3g3BCcNVmruX9ErtQYzxC7Sb334N+orptlJzevYLea2lc4YcT+rbTNrR2cs
zTzcoVmJmi+EtWytPtgw2D9iyjxPkXejd5+Kb0Q/X9wuPQR5B8HKPb/JCtSS
JH6n3H3Eb4NNVdcBOhfzU9TSI/ZKM0VsI/5EVm7Oj4qbBW/D78M2m0c5Px3/
gNoOwjLtixJaaXJOtG77PU+WM1nsTerbx9+FV+x3Hcuwh06U96MYYz2W2TN3
09zEbw7P8X6vGW6U49p41mC1ar5Ibf3lWGyeK3DPpT3YDL4Qv5L/vXpm0ptA
6zD+IHEDnIvD9t2NqSEM9DyD9ja9b6eVi1cox1qaK1lfvfVjC+DtzLO33HPk
aKyWNbBbshJnf4d1W6a363CWq6Ur7EpYLewQ3u1xpt7VWI9uaqtW0+z/c9wl
36VqvlSe1/ilam5lfi/hnYV/ndhUsafI+Rbsa3WW4yXDDnjfFNZMrkH6nY3b
r31iP6yh96XetuPWeC6TpyLeG97v8n6meRyxz89o6vzxHxa7VI7uZvOuHD3V
cUO8J8RcKfZFOiV6m4b7g3yN5C7EreWPxb0+JXFHVKhnpLhktt67YrOdE/dQ
VuIMFuAU0BulpgPeZZvV+57fgJfR2EDrNLyfcWpg3cUux8vBS7L/PoS9gFeB
t0Q9DfVToZZ58Jvl2A9vIbYpzlE6r+AsZV/TaItXgpdJ617cbL1n2gcjzakF
P40N9DzC3dRZb5dnJfZ03Nu7WaH8+WIXxPuZfgG/ylruwxkCm0z7Bv3vMZ/h
8S5mFeqfQO9hegNxGsKm4+XQa6nvpvTGOSMfx3uBrcM/D+dp2Bb+EvYeLBv2
FOwTfilbD+sBGwur5s9lr8M6wR6HfcCfx1bBOsOegG3gz2dlsNNjzWxS/L7B
cs2qPH5jYN/zl/LPsw//hI0Xuxm2mFXhn4+Tw8r5N+Jl6/dVvKGwotgvvAi+
M55VsVvtnYv5v5pXEU4qPF3vAxonZhFn8iTeJnElrJJGd9gKvN60bxb7KI3J
OM3MsLc12myv7nCn9OV/hTvGOtyK04NV8r+JPcNu42ezdZGDu9iez7EWhXK0
4VfDL/F+oRxt9Zskx2/ydvC8CDbYu0mwXNgA9dfFb4kaC2Nf4qfYf1vwuuD/
npnYp4fdEZ+rrYb1wxkW90FGYs5x3umxX3Y/Xn16dfAJ9K6BVWb8Pz+8Vvxn
4PNxOstzob2VS+9zOUrNpQgvT+6P+G+zuz1PYp94dxxvmZgmem1p//1jFrPo
5MVviLpmupuO2P8PZCX+gwyP2riHxK9yXq4Ve8za9IRP9DtSbK162luzZvb+
FnrH+BeI/ymeV7bandKLf7ZaFsa97X7tgv8vXlv4Cus2ATYQloYzUo6/5Fwr
R8c2iXt3I153+mcnJ+YYz3n8NsRvxCJrfh/+VfH8iW8gx15nupf4O2CHcD9W
V7vGibMYz+Q76qrUZ5FzvpLGZ3Gfs0doZeGVWLc3+c+bwXS/M9hasz+H1lA5
Uq35fnXtY0P4w9kX8ZsSv/9xTcVdDusrX1vYaLZX7CA2js44nCbxO8h/Nv6f
8vwt6+ndKtioeN95fgXvLnhRh8T/l6v1nqq2efH/oznNUdc9nuvMuLU+1sb7
Pv4fgs1NSZzVeGbjfqkR29Wci8W9Zi3/A5tOndI=
             "]], 
            
            Polygon3DBox[{{8421, 1780, 5747, 7519, 6869, 8024}, {8281, 1329, 
             3022, 7498, 7428, 8851}, {8843, 7125, 7124, 4535, 2845, 8183}, {
             7404, 2509, 3036, 5634, 4350, 7500}, {8458, 7359, 7439, 3867, 
             5468, 8559}, {8011, 376, 5840, 7445, 7388, 8491}, {8442, 1945, 
             3388, 7536, 7431, 8852}}]}, 
           Annotation[#, "Charting`Private`Tag$143513#2"]& ]]}, {}, {
         EdgeForm[], 
         Directive[
          GrayLevel[1], Lighting -> {{"Ambient", 
             GrayLevel[0.8]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtlMlL1VEUx0+DpaWVT62b9Xugf0EQtbL/oBYJmZsI2rgobNGmRaMNDuWQ
Wjk/J0KJ9EVFRUREi7JBstq0LU2oMNCwbZ+v58K773x/5557hu8595YdO1lZ
u9rMTrDWsEaCWTbHbBTZutmsfKtZRa7Z3jyzPXmOh8vNOrabDaXNZsrMGjaZ
TaBvRDYVm02Ce7BpwqYHm3p8leC7AdmNvhF9N/o+8HVwHzgDbgMPgAfBN8CZ
tMfbl+s5DaFvRz+Ivh/cDO4H94KvgXvBXeAGcBd4BNwJHgaPJcQi/jhygVwW
WavM68hHvggecwP4WfBcKNeeBvdRAH4J/oX8w5plNfINPdaE/Bf1UGbL5jHk
v5k9ftYiPlm4srbgtjozZ57bNuTj4Od0/mf0txR9XmKvCHkZ+Q57aF7h9n3i
3Kp29SAbuRqOfVQ/l+GhlcCFyJt878T+FrKDtQPcGby/OpushQe+S9G3B9dN
RP1tvgln3cH9qa4n/A3gtyX6XyKPb+jr+b7DXjXEnQk+E7/XuZ/KlNk8pFet
N/uceD6apS+J+1e/PiWem3p9EPtJGpPPgE4xb/MFPhdT2LC10uu3ifOjufqQ
eF80V9ORW83JcWIeLfE8rgTn8CryY+J90ezNJF67Zu+UuKOJtbFfc7Hvuzk4
XeD5nGevEN0F5FnWFvA55MXgudUhv8d5EC+vE7cXP4tRr33NrO7hePB7A012
L8R7Vez3THmLM8XNxjspHnQPUNsD7GsAh6JNhu+v3MlB5GGKAtor8F9qS+uu
p/0+bQQ/D56TcqzC9nS590I9UQy9A+J+Ic6m7JRDRZy3A3lx/nLcj2ocC55v
TcxH74dy1gzIfzVxRpHZIu+N6luKc697ppnCpT0K3n/xLj96P/RW3UX/g3Oz
+V6z3gDC2yT6XdinUt4/vTG4tvvo93OZHpZ4LppV9esNNR4pdf5Vu7hSn5Xf
f+RSvmQ=
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1lMlOlUEQhcsRRAZl0P8i90+8j2DiTt9AF5I4bJTEjTExuNCFbpyVC8go
KrNMJkgI3hCiiEgQEAcUpzdQkETdaVj7HapNbt+u83dXddXp07X75NnyyvVm
doKxkTGVNKuJzHZgjzE/B99gLgKPMLemzIaYt4Nfs1aVMDtSarY+4HlGG+tM
NsecLjarzjd7nM03DujFf4rvuNjn4D8I3gb+E5v1sD4J5rN9Yn2ScQtMGMtE
7rsL+w7zLGsvGGnsEr6NMu/JMSsvJKcss9+bqYGFhgKzfZy/d4tZe8rrUD3v
kp7DVuzmhOemMwlhTQnP5SMYN2sEPwAv5ZrV45xDvMOc0Uusg2zIbDLrw55j
f0vIcTpyTsRNOuHcLYDZarXgDvBb8AZwNbgN/AFMWKsDd4HfgynDboM7wf1w
tAReZvzFfsP6d+xvgb8V8jtD/aeynAPFGAv3qdiqYQLMb622bozTkNtKPecj
zykT+FauOnM08Ktc+lJel+r7Au4Hz4DLwF/Bldir68wKyeFi5DUNMwPXah2I
nKv9nPcQeyDlOpFeLmDPYv8yr/EoIhkPudbxN82mCca1EE9xVeuPXL8L1bzI
OqGtHr66U66R5qA3aWcG3Bj0JZ3pbGizisi1OxHWGphfJn2PfJuC7yvGvVCv
6u6Ofb/8xG1P7NzoLOlJnIpbcXJOe2KPp7jSl+o/Vur16m4X8+CnyLWbizDS
+f6G9HZGsv1McXU/8lxaY+diKLzNtti1PRy474j97jLhbgfD273MPJ50P/lf
ZX6WdD/5X4+c6+lQ692g7c7YtSRNdIa3JK3cDL2iPXas73prXeCdoZf816Jw
beS9JhO0VRX5Wx8NWq2O/G3rjaov1SQ8njiKQ28Rd32x8yFepEXVcCXUqNqk
0Vz1i4RrV71Kb+Un4zj2MouHCp1raUh3Xh80pzsto3ccKPDeoTtY4X4Wily/
6ik1xd5zdF/qcXpT8m3gvFXO642dP/Go8+cptrrY71J9Q3dwKfQ/3Y18nkTe
cxSrosRz0Nk6Q2+MFKwl4fVm8rwG5a6eJM0/DRzrLTxKOtfCg9j/APET45w=

            "]], 
           Polygon3DBox[CompressedData["
1:eJwlzzlKREEQBuDCfYdBhKeg4LuHR5jERGMP4KQewWXcDdxmdARFERERN0TU
RHAb3BIvYuz3eEHRVR9/F93DE6XRyYaIKKhm9TAYUU4iDp1XzmtVSCMW+/M+
s2qa2wK7MF+qP/OPOz12jA1EjKsptjkUMSt3kuT7X2VqbJXds272zapsid2w
DvbB9vUjbe702id4YN6Qm5E71jfJvchtsTl2ylrYG9tlK+yOdbEvtsfW2GOS
vzN77zYrszPWyt7ZDltmt6yTfWb79L8uPfVFFNv9wVyRm5c713tm1OXW2TQ7
Yo3smf0DLtc3/A==
            "]]}]}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0Esug1EcxuG/ut87FAmJLZkYNRILYAVuddeitIglNCLSCFFtVRWxDzFh
hujUI+ng9z3vlzM5OVNzC9PzHRExo1/97y+96XUiIsnFsYgl3fpf5orK9irT
urPXuK6KvcFNVe0tbqtm73BX93aGRWb5wD3uq2EfMKdH+5BHatp5FvRkH/NE
z/Ypz/Riz3LSnX983tnSqL71qabzETY4zDqHWOMgKxxgmf284bX67Cv2ssQe
XrKbF+ziOTtZZIKp8YiP9rv+AW4XN9M=
          "]], 
         Line3DBox[CompressedData["
1:eJwl0skuXmEAx+GXuABi85GYbbkCpHtEUG2NMddsa2xLq7gB3EC7MGsNSwuu
QGue2kSIhBWCneeLxS/P/yze5Jw3J6Oxt6wnJoQwrt2UENK4z1xeMp8PLGJc
agjVTGQHs5itfvsNJ1jCadbxJ7u5xiFu85FXfNIf3etG/Ukh/OUAdznIveg5
7nOYB/zEQ37mEb9wRMf2KE/4laf8xjOO8Zzf+Y81ySFc81n/o9+nW017tx1O
civ6LlxlJ39Ez3GKxamv91XAfPXZ6WxnAqsYy0Leubs8XjCH8ZkhzERC2PDc
zTqt212s1ZrdyRqt2h2s1m+7nVX6ZbexUiv2R27yA5fZyvdaslv4Tot2Myu0
YDfxrebtRpZrzm5gqWbtepZFXv+LF6leVJc=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[{2523, 251, 7320, 4618}], 
         Line3DBox[{2524, 252, 7058, 1012, 5851}], 
         Line3DBox[{887, 253, 4694}], 
         Line3DBox[{1285, 254, 1459, 509, 887}], 
         Line3DBox[{1287, 255, 4853}], 
         Line3DBox[{6750, 256, 819, 5900}], 
         Line3DBox[{1461, 257, 660, 889, 6750}], 
         Line3DBox[{6751, 258, 7211, 1461}], 
         Line3DBox[{6752, 259, 6751}], 
         Line3DBox[{719, 260, 6752}], 
         Line3DBox[{2529, 261, 719}], 
         Line3DBox[{6753, 262, 1464, 521, 5911}], 
         Line3DBox[{6754, 263, 1071, 6753}], 
         Line3DBox[{1298, 264, 1228, 667, 6754}], 
         Line3DBox[{5617, 1305, 671, 1234, 2012, 3470}], 
         Line3DBox[{2544, 296, 1117, 8049, 548, 908, 4480}], 
         Line3DBox[{1724, 310, 4484}], 
         Line3DBox[{7936, 323, 1424, 979, 5296}], 
         Line3DBox[{7948, 336, 2055, 5707}], 
         Line3DBox[{944, 349, 4615}], 
         Line3DBox[{7951, 362, 8062, 621, 944}], 
         Line3DBox[{2563, 376, 7951}], 
         Line3DBox[{7957, 391, 8453, 2072, 5869}], 
         Line3DBox[{7967, 406, 7957}], 
         Line3DBox[{6812, 437, 1966, 4820}], 
         Line3DBox[{6813, 438, 1740, 7443, 6063}], 
         Line3DBox[{2570, 439, 6814, 440, 6815, 441, 7363, 2082, 6043}], 
         Line3DBox[{2571, 442, 6816, 443, 6817, 444, 6818, 445, 6819, 446, 
          6820, 447, 4443}], 
         Line3DBox[{2083, 448, 6821, 449, 6932, 656, 1409, 450, 1281, 718, 
          7992, 436, 2081, 8562, 5824}], 
         Line3DBox[{2608, 502, 2200, 5225}], 
         Line3DBox[{6882, 507, 4693}], 
         Line3DBox[{2616, 512, 1287}], 
         Line3DBox[{1466, 524, 1298}], 
         Line3DBox[{2639, 564, 4446}], 
         Line3DBox[{1216, 653, 6812}], 
         Line3DBox[{2865, 1011, 6813}], 
         Line3DBox[{1216, 2011, 3465}], 
         Line3DBox[{1285, 2018, 3476}], 
         Line3DBox[{3034, 1358, 7948}], 
         Line3DBox[{1466, 3064}], 
         Line3DBox[{3102, 1707, 5720}], 
         Line3DBox[{1724, 3132}], 
         Line3DBox[{3504, 2058, 5006}], 
         Line3DBox[{2083, 7364, 3524}], 
         Line3DBox[{3645, 2171, 5152}], 
         Line3DBox[{6263, 6255, 6257, 6258, 6256, 6311}], 
         Line3DBox[{6309, 6308, 6307, 6306, 6305, 6304, 6303}], 
         Line3DBox[{6300, 6299, 6298}], 
         Line3DBox[{6300, 6301, 6266}], 
         Line3DBox[{6263, 6264, 6262, 6267}], 
         Line3DBox[{6265, 6254, 6259, 6260, 6302}], 
         Line3DBox[{6309, 6310, 6268}], 
         Line3DBox[{6882, 816}], 
         Line3DBox[{7936, 1582}], 
         Line3DBox[{7967, 421}]}, {}, {
         GrayLevel[0.2], 
         Line3DBox[{7637, 8722, 8951, 8707, 6550, 8708, 9137, 7844, 8709, 
          9138, 7845, 8710, 9139, 7846, 8711, 9140, 7847, 8712, 9141, 7848, 
          8713, 9142, 8723, 8952, 8714, 8724, 8953, 8715, 9143, 7849, 8716, 
          9144, 7850, 8717, 9145, 7851, 8718, 9146, 7852, 8719, 9147, 7853, 
          8720}], 
         Line3DBox[{7639, 8725, 8954, 7638, 8726, 8955, 7640, 6565, 7641, 
          8869, 7854, 7642, 8870, 7855, 7643, 8871, 7856, 7644, 8872, 7857, 
          7645, 8873, 8727, 8956, 7646, 8728, 8957, 7647, 8729, 8958, 7648, 
          8874, 7858, 7649, 8875, 7859, 7650, 8876, 7860, 7651, 8877, 7861, 
          7652}], 
         Line3DBox[{7654, 8730, 8959, 7653, 8731, 8960, 7655, 8732, 8961, 
          7656, 6581, 7657, 8878, 7862, 7658, 8879, 7863, 7659, 8880, 7864, 
          7660, 8881, 8733, 8962, 7661, 8734, 8963, 7662, 8735, 8964, 7663, 
          8736, 8965, 7664, 8882, 7865, 7665, 8883, 7866, 7666, 8884, 7867, 
          7667}], 
         Line3DBox[{7669, 8737, 8966, 7668, 8738, 8967, 7670, 8739, 8968, 
          7671, 8740, 8969, 7672, 6597, 7673, 8885, 7868, 7674, 8886, 7869, 
          7675, 8887, 8741, 8970, 7676, 8742, 8971, 7677, 8743, 8972, 7678, 
          8744, 8973, 7679, 8745, 8974, 7680, 8888, 7870, 7681, 8889, 7871, 
          7682}], 
         Line3DBox[{7684, 8746, 8975, 7683, 8747, 8976, 7685, 8748, 8977, 
          7686, 8749, 8978, 7687, 8750, 8979, 7688, 6613, 7689, 8890, 7872, 
          7690, 8891, 8751, 8980, 7691, 8752, 8981, 7692, 8753, 8982, 7693, 
          8754, 8983, 7694, 8755, 8984, 7695, 8756, 8985, 7696, 8892, 7873, 
          7697}], 
         Line3DBox[{7699, 8757, 8986, 7698, 8758, 8987, 7700, 8759, 8988, 
          7701, 8760, 8989, 7702, 8761, 8990, 7703, 8762, 8991, 7704, 6629, 
          7705, 8893, 8763, 8992, 7706, 8764, 8993, 7707, 8765, 8994, 7708, 
          8766, 8995, 7709, 8767, 8996, 7710, 8768, 8997, 7711, 8769, 8998, 
          7712}], 
         Line3DBox[{7716, 8894, 7874, 7714, 8895, 7875, 7718, 8896, 7876, 
          7720, 8897, 7877, 7722, 8898, 7878, 7724, 8899, 7879, 7726, 8900, 
          7880, 7728, 8901, 6646, 7730, 8902, 7881, 7732, 8903, 7882, 7734, 
          8904, 7883, 7736, 8905, 7884, 7738, 8906, 7885, 7740, 8907, 7886, 
          7742}], 
         Line3DBox[{7741, 9012, 8782, 7739, 9011, 8781, 7737, 9010, 8780, 
          7735, 9009, 8779, 7733, 9008, 8778, 7731, 9007, 8777, 7729, 9006, 
          6645, 7727, 9005, 8776, 7725, 9004, 8775, 7723, 9003, 8774, 7721, 
          9002, 8773, 7719, 9001, 8772, 7717, 9000, 8771, 7713, 8999, 8770, 
          7715}], 
         Line3DBox[{7744, 8783, 9013, 7743, 8908, 7887, 7745, 8909, 7888, 
          7746, 8910, 7889, 7747, 8911, 7890, 7748, 8912, 7891, 7749, 8913, 
          7892, 7750, 8914, 8784, 9014, 7751, 6662, 7752, 8915, 7893, 7753, 
          8916, 7894, 7754, 8917, 7895, 7755, 8918, 7896, 7756, 8919, 7897, 
          7757}], 
         Line3DBox[{7759, 8785, 9015, 7758, 8786, 9016, 7760, 8920, 7898, 
          7761, 8921, 7899, 7762, 8922, 7900, 7763, 8923, 7901, 7764, 8924, 
          7902, 7765, 8925, 8787, 9017, 7766, 8788, 9018, 7767, 6678, 7768, 
          8926, 7903, 7769, 8927, 7904, 7770, 8928, 7905, 7771, 8929, 7906, 
          7772}], 
         Line3DBox[{7774, 8789, 9019, 7773, 8790, 9020, 7775, 8791, 9021, 
          7776, 8930, 7907, 7777, 8931, 7908, 7778, 8932, 7909, 7779, 8933, 
          7910, 7780, 8934, 8792, 9022, 7781, 8793, 9023, 7782, 8794, 9024, 
          7783, 6694, 7784, 8935, 7911, 7785, 8936, 7912, 7786, 8937, 7913, 
          7787}], 
         Line3DBox[{7789, 8795, 9025, 7788, 8796, 9026, 7790, 8797, 9027, 
          7791, 8798, 9028, 7792, 8938, 7914, 7793, 8939, 7915, 7794, 8940, 
          7916, 7795, 8941, 8799, 9029, 7796, 8800, 9030, 7797, 8801, 9031, 
          7798, 8802, 9032, 7799, 6710, 7800, 8942, 7917, 7801, 8943, 7918, 
          7802}], 
         Line3DBox[{7804, 8803, 9033, 7803, 8804, 9034, 7805, 8805, 9035, 
          7806, 8806, 9036, 7807, 8807, 9037, 7808, 8944, 7919, 7809, 8945, 
          7920, 7810, 8946, 8808, 9038, 7811, 8809, 9039, 7812, 8810, 9040, 
          7813, 8811, 9041, 7814, 8812, 9042, 7815, 6726, 7816, 8947, 7921, 
          7817}], 
         Line3DBox[{7831, 7928, 6746, 7830, 9053, 8823, 7829, 9052, 8822, 
          7828, 9051, 8821, 7827, 9050, 8820, 7826, 9049, 8819, 7825, 9048, 
          8818, 8949, 7824, 7922, 8948, 7823, 9047, 8817, 7822, 9046, 8816, 
          7821, 9045, 8815, 7820, 9044, 8814, 7819, 9043, 8813, 7818, 9054, 
          7926, 7925, 7927}], 
         Line3DBox[{7936, 1583, 8187, 2068, 7376, 2220, 1041, 1848, 1767, 
          5694}], 
         Line3DBox[{7948, 8262, 8263, 8237, 8545, 9127, 8544, 8610}], 
         Line3DBox[{349, 1359, 698, 1551, 7245, 348, 1357, 697, 1549, 347, 
          696, 6939, 4421}], 
         Line3DBox[{7951, 8011, 8491, 9134, 8492, 2422, 8516, 8679}], 
         Line3DBox[{7957, 8019, 9077, 7956, 8018, 9076, 7955, 1441, 7378, 
          2260}], 
         Line3DBox[{7967, 8457, 8456, 9118, 7966, 8415, 8414, 9130, 7965, 
          8676}], 
         Line3DBox[{7992, 8079, 6930, 7991, 9068, 8833, 7990, 8418, 8461, 
          9136, 8849, 8686}], 
         Line3DBox[{8049, 8153, 8152, 8090, 8042, 9069, 8843, 8183, 8185, 
          8184, 8434, 8025, 8508, 2498, 8109, 2495, 2514, 2513, 8421, 8024, 
          9126, 8224}], 
         Line3DBox[{564, 1141, 8590}], 
         Line3DBox[{8062, 8008, 8501, 9120, 8836, 8291, 8007, 8378, 9112, 
          8835, 8061, 8006, 8264, 8101, 9106, 8265, 8705}], 
         Line3DBox[{1234, 901, 1800, 839, 9116, 8108, 8625}], 
         Line3DBox[{8148, 8123, 9081, 8038, 8213, 8324, 8212, 8323, 8642}], 
         Line3DBox[{8150, 8124, 9082, 1232, 1075, 5852}], 
         Line3DBox[{8226, 9098, 473, 851, 563, 1140, 474, 8128, 8111, 8844, 
          8627}], 
         Line3DBox[{8227, 6873, 8110, 8028, 8444, 8575}], 
         Line3DBox[{8261, 8164, 9086, 8097, 8140, 8288, 1586, 7947, 8236, 
          8556, 2008, 8603}], 
         Line3DBox[{1727, 7296, 690, 339, 6769, 688, 6184}], 
         Line3DBox[{8410, 7115, 8099, 8355, 8354, 8352, 8000, 9105, 8353, 
          8098, 8641}], 
         Line3DBox[{8412, 8129, 9087, 8116, 1191, 8239, 1275, 1276, 3005}], 
         Line3DBox[{1819, 7327, 639, 999, 7052, 638, 6208}], 
         Line3DBox[{8429, 6928, 8119, 8076, 8243, 7958, 8242, 9057, 8075, 
          8469, 8651}], 
         Line3DBox[{8430, 8837, 9092, 8120, 1212, 7968, 1211, 2163, 3631}], 
         Line3DBox[{8447, 8517, 8465, 8446, 8048, 8621}], 
         Line3DBox[{8453, 8017, 8413, 9074, 8452, 8016, 8372, 9073, 8373, 
          8015, 8380, 8167, 9119, 8484, 8684}], 
         Line3DBox[{8532, 8550, 8619}], 
         Line3DBox[{8553, 8466, 9100, 1961, 1435, 8606}], 
         Line3DBox[{8562, 8513, 8459, 8511, 8559, 8458, 9080, 7978, 6853, 
          7977, 8417, 8455, 9135, 8846, 8683}], 
         Line3DBox[{8569, 8202, 8201, 8214, 1741, 8696}], 
         Line3DBox[{8570, 824, 1089, 7085, 1088, 8174, 1021, 1779, 897, 8420, 
          8620}], 
         Line3DBox[{8571, 8540, 1432, 8191, 8064, 8102, 8825, 9056, 7950, 
          8310, 8320, 6835, 8377, 8165, 9093, 8010, 8361, 8166, 8496, 2435, 
          2436, 5934}], 
         Line3DBox[{8572, 8527, 8558, 9133, 8841, 8547, 8613}], 
         Line3DBox[{8573, 853, 8577}], 
         Line3DBox[{8574, 8460, 9114, 8847, 7983, 8394, 8403, 7289, 8404, 
          7982, 8395, 8396, 8371, 8489, 8500, 2465, 7981, 2389, 8695}], 
         Line3DBox[{3923, 2370, 2369, 8485, 7417, 8327, 8220, 8045, 8219, 
          8326, 8218, 8177, 8044, 8255, 8217, 8089, 1918, 6059}], 
         Line3DBox[{4536, 1242, 470, 3480}], 
         Line3DBox[{5054, 7427, 2101, 472, 729, 8626}], 
         Line3DBox[{8576, 8565, 8519, 8525, 8155, 8053, 8092, 8052, 8256, 
          7931, 8278, 8834, 9102, 8051, 8030, 8232, 8158, 8282, 8230, 8231, 
          2137, 8448, 8666}], 
         Line3DBox[{3066, 1471, 759, 4675}], 
         Line3DBox[{5485, 2334, 549, 6890, 550, 1781, 3195}], 
         Line3DBox[{8578, 8476, 9117, 8475, 8118, 8366, 8035, 8198, 8315, 
          9103, 8316, 8197, 8072, 8105, 6839, 7953, 8321, 8322, 8014, 8471, 
          8566, 8669}], 
         Line3DBox[{8579, 8407, 7994, 8431, 8838, 9101, 8249, 8137, 8083, 
          1915, 2250, 8659}], 
         Line3DBox[{8580, 8425, 8162, 7937, 7163, 8290, 8289, 8386, 8449, 
          2399, 8672}], 
         Line3DBox[{8581, 2205, 8113, 8142, 8141, 7940, 8505, 7401, 8329, 
          8383, 8389, 8382, 7941, 8258, 8351, 8259, 8095, 8631}], 
         Line3DBox[{8582, 8411, 8002, 8358, 7248, 8357, 8295, 8003, 8211, 
          8033, 8188, 8309, 6832, 8115, 8330, 8331, 8311, 8365, 9109, 8004, 
          8445, 8234, 8235, 8189, 8636}], 
         Line3DBox[{8583, 8438, 8147, 7979, 7199, 8306, 8305, 8376, 8451, 
          2391, 8671}], 
         Line3DBox[{3242, 1830, 826, 8041, 9085, 763, 8107, 1068, 8175, 9129, 
          1414, 1948, 5935}], 
         Line3DBox[{8584, 778, 3889}], 
         Line3DBox[{3653, 2178, 813, 8063, 1697, 1698, 7287, 1664, 8356, 8009,
           8297, 1565, 1566, 2051, 6142}], 
         Line3DBox[{1316, 2476, 552, 2128, 6149}], 
         Line3DBox[{8585, 8530, 8133, 8535, 8591}], 
         Line3DBox[{8586, 9123, 806, 1844, 1037, 7933, 1161, 8112, 1162, 9099,
           7934, 1157, 8057, 1331, 7935, 1039, 8538, 9121, 1040, 1726, 8615}], 
         Line3DBox[{8587, 834, 761, 1827, 8020, 8506, 8419, 8674}], 
         Line3DBox[{5193, 854, 1338, 7160, 1337, 1640, 1639, 8611}], 
         Line3DBox[{8588, 8423, 8144, 8066, 8845, 9107, 8362, 8339, 8298, 
          8065, 8399, 8483, 8490, 8482, 8665}], 
         Line3DBox[{5218, 879, 1401, 7198, 1400, 1661, 1660, 5440}], 
         Line3DBox[{8589, 896, 3433}], 
         Line3DBox[{2915, 1083, 821, 835, 762, 1828, 3240}], 
         Line3DBox[{8592, 8228, 8157, 8281, 8851, 9122, 8229, 8050, 8551, 
          8623}], 
         Line3DBox[{8593, 7939, 1934, 8694}], 
         Line3DBox[{4045, 933, 8677, 933, 598, 1170, 340}], 
         Line3DBox[{3529, 2086, 9124, 8853}], 
         Line3DBox[{5269, 1074, 1467, 8607}], 
         Line3DBox[{8594, 8526, 8635}], 
         Line3DBox[{8595, 1096, 9132, 8557, 8560, 8675}], 
         Line3DBox[{8596, 1778, 8529, 8138, 8043, 8126, 8139, 8125, 8432, 
          8700}], 
         Line3DBox[{2945, 1133, 557, 6893, 1134, 8026, 8091, 8127, 8680}], 
         Line3DBox[{5976, 2131, 561, 1137, 547, 730, 6953, 559, 2130, 913, 
          8602}], 
         Line3DBox[{4912, 1147, 7932, 1158, 2138, 3595}], 
         Line3DBox[{8597, 2259, 1003, 2351, 500, 1442, 5989}], 
         Line3DBox[{8598, 8082, 8248, 9089, 8247, 8081, 7993, 8267, 8149, 
          8039, 7077, 8325, 8215, 8171, 8605}], 
         Line3DBox[{8599, 553, 1129, 555, 1130, 471, 3449}], 
         Line3DBox[{8600, 1265, 693, 1350, 344, 694, 6770, 345, 695, 346, 
          5967}], 
         Line3DBox[{8601, 2244, 8474, 8005, 8312, 8190, 2437, 2438, 2274, 
          5873}], 
         Line3DBox[{8604, 8292, 8536, 8100, 6999, 8427, 8143, 8338, 8001, 
          8337, 8294, 8335, 8334, 8336, 1749, 8697}], 
         Line3DBox[{8608, 8093, 8348, 9090, 8347, 7938, 8349, 8350, 8094, 
          9104, 8163, 8702}], 
         Line3DBox[{8609, 2268, 8477, 7997, 8275, 8274, 8086, 8344, 8345, 
          8343, 8271, 7996, 8273, 8272, 9084, 8085, 8341, 8342, 8340, 8268, 
          7995, 8270, 8269, 8084, 8251, 8542, 8250, 8172, 9128, 8850, 8855}], 
         
         Line3DBox[{5450, 1687, 8296, 1509, 7226, 1510, 1196, 3776}], 
         Line3DBox[{8612, 8546, 8204, 9055, 8027, 8225, 8646}], 
         Line3DBox[{8614, 8548, 8531, 8059, 8552, 8058, 8346, 8543, 8408, 
          8135, 8257, 8032, 8435, 8031, 9115, 8436, 8681}], 
         Line3DBox[{4919, 601, 6906, 341, 692, 6938, 2419, 8673}], 
         Line3DBox[{8616, 1972, 8549, 8210, 8539, 8209, 8473, 8208, 7944, 
          7161, 8286, 8285, 8060, 8207, 8233, 8206, 7943, 8205, 8284, 2140, 
          5491}], 
         Line3DBox[{8617, 7945, 8533, 8260, 8534, 9131, 8096, 8161, 8287, 
          8160, 7946, 1936, 8632}], 
         Line3DBox[{8618, 7976, 9063, 8828, 7975, 9062, 8827, 7974, 9061, 
          8826, 7973, 9060, 8509, 8510, 2521, 7972, 2519, 8504, 8503, 9079, 
          7971, 8523, 8567, 8687}], 
         Line3DBox[{8622, 1893, 8437, 8136, 8114, 8655}], 
         Line3DBox[{4327, 1807, 338, 6768, 1360, 2027, 3487}], 
         Line3DBox[{3233, 1818, 710, 6944, 1594, 637, 1692, 2406, 5599}], 
         Line3DBox[{5502, 641, 7232, 1516, 1515, 9075, 7954, 640, 711, 6098}], 
         Line3DBox[{8624, 8106, 8541, 9125, 8852, 8442, 7999, 8307, 8173, 
          8254, 9094, 8253, 8087, 7998, 8252, 8088, 9110, 8367, 8704}], 
         Line3DBox[{2705, 1839, 3251}], 
         Line3DBox[{5050, 468, 6189}], 
         Line3DBox[{8628, 8246, 8132, 8462, 8644}], 
         Line3DBox[{8629, 8080, 1858, 8656}], 
         Line3DBox[{3133, 8441, 8409, 1036, 8186, 9083, 1035, 2515, 2502, 
          8056, 927, 1339, 2024, 6132}], 
         Line3DBox[{8630, 8283, 8159, 7942, 2195, 5199}], 
         Line3DBox[{8633, 8216, 8176, 7203, 8308, 8495, 8021, 8381, 2280, 
          8661}], 
         Line3DBox[{8634, 8443, 2469, 8178, 2492, 8507, 8022, 8528, 8180, 
          8181, 8179, 8223, 8023, 8047, 8151, 8221, 9096, 8839, 8046, 8222, 
          8328, 8040, 8182, 8276, 8464, 8277, 8537, 8203, 8554, 2098, 8433, 
          8654}], 
         Line3DBox[{8637, 8563, 8515, 8468, 8555, 8240, 8195, 8314, 8313, 
          8196, 8034, 9072, 8842, 8071, 8131, 8424, 8667}], 
         Line3DBox[{8638, 1002, 7054, 499, 1052, 7073, 951, 1666, 642, 6945, 
          712, 1820, 8689}], 
         Line3DBox[{8639, 2001, 1928, 8280, 1927, 8699}], 
         Line3DBox[{8640, 8426, 8238, 8333, 6831, 8332, 8293, 8398, 8450, 
          2309, 8664}], 
         Line3DBox[{8643, 8564, 7989, 9067, 8832, 7988, 9066, 8831, 7987, 
          9065, 8830, 7986, 9064, 8829, 7985, 6855, 7984, 8524, 8568, 8688}], 
         
         Line3DBox[{8645, 8122, 8266, 8514, 8678}], 
         Line3DBox[{8647, 8422, 8156, 8279, 7156, 8360, 8055, 8385, 8054, 
          8397, 2282, 8662}], 
         Line3DBox[{8648, 2450, 2449, 8498, 8134, 7930, 8154, 8029, 8486, 
          2372, 8487, 8670}], 
         Line3DBox[{8650, 8467, 8193, 9095, 8194, 8192, 8241, 8067, 8117, 
          9088, 8130, 8706}], 
         Line3DBox[{8652, 8428, 8146, 8300, 7194, 8364, 8074, 8388, 8073, 
          8400, 2296, 8663}], 
         Line3DBox[{8653, 8121, 8245, 9091, 8244, 7980, 8170, 8200, 9111, 
          8375, 8703}], 
         Line3DBox[{8658, 1229, 5803}], 
         Line3DBox[{8660, 3516, 987, 343, 985, 7046, 342, 1728, 3135}], 
         Line3DBox[{8668, 8470, 8070, 9071, 8145, 8104, 8013, 8069, 9070, 
          7952, 8012, 8299, 8068, 8359, 8103, 8439, 8440, 8693}], 
         Line3DBox[{3979, 1840, 469, 9097, 8701}], 
         Line3DBox[{8682, 8848, 7304, 8854}], 
         Line3DBox[{8685, 8518, 8561, 8512, 8463, 8037, 8499, 8036, 8488, 
          7964, 8363, 8840, 9108, 8199, 8169, 7963, 8379, 9059, 8318, 8319, 
          8317, 7962, 9058, 8391, 8401, 8390, 8402, 7961, 8392, 8369, 8370, 
          8368, 7390, 8497, 8374, 8472, 8522, 8692}], 
         Line3DBox[{8690, 8520, 8454, 8416, 9078, 7970, 8393, 8406, 9113, 
          1706, 7969, 1699, 8304, 1403, 1404, 2038, 6139}], 
         Line3DBox[{8691, 8521, 8494, 8168, 8502, 8493, 7960, 8405, 7290, 
          7959, 8078, 8301, 8077, 8302, 8303, 1910, 8698}]}, {
         GrayLevel[0.2], 
         Line3DBox[{6521, 6728, 9054, 6745, 6506, 6713, 9033, 6491, 6698, 
          9025, 6476, 6683, 9019, 6461, 6668, 9015, 6446, 6653, 9013, 6431, 
          8894, 6638, 8999, 6416, 6623, 8986, 6401, 6608, 8975, 6386, 6593, 
          8966, 6371, 6578, 8959, 6356, 6563, 8954, 6341, 6549, 8951, 7594}], 
         
         Line3DBox[{6522, 6729, 9043, 6507, 6714, 9034, 6492, 6699, 9026, 
          6477, 6684, 9020, 6462, 6669, 9016, 6447, 8908, 6654, 6432, 8895, 
          6639, 9000, 6417, 6624, 8987, 6402, 6609, 8976, 6387, 6594, 8967, 
          6372, 6579, 8960, 6357, 6564, 8955, 6342, 6550, 7595}], 
         Line3DBox[{6523, 6730, 9044, 6508, 6715, 9035, 6493, 6700, 9027, 
          6478, 6685, 9021, 6463, 8920, 6670, 6448, 8909, 6655, 6433, 8896, 
          6640, 9001, 6418, 6625, 8988, 6403, 6610, 8977, 6388, 6595, 8968, 
          6373, 6580, 8961, 6358, 6565, 6343, 9137, 6551, 7596}], 
         Line3DBox[{6524, 6731, 9045, 6509, 6716, 9036, 6494, 6701, 9028, 
          6479, 8930, 6686, 6464, 8921, 6671, 6449, 8910, 6656, 6434, 8897, 
          6641, 9002, 6419, 6626, 8989, 6404, 6611, 8978, 6389, 6596, 8969, 
          6374, 6581, 6359, 8869, 6566, 6344, 9138, 6552, 7597}], 
         Line3DBox[{6525, 6732, 9046, 6510, 6717, 9037, 6495, 8938, 6702, 
          6480, 8931, 6687, 6465, 8922, 6672, 6450, 8911, 6657, 6435, 8898, 
          6642, 9003, 6420, 6627, 8990, 6405, 6612, 8979, 6390, 6597, 6375, 
          8878, 6582, 6360, 8870, 6567, 6345, 9139, 6553, 7598}], 
         Line3DBox[{6526, 6733, 9047, 6511, 8944, 6718, 6496, 8939, 6703, 
          6481, 8932, 6688, 6466, 8923, 6673, 6451, 8912, 6658, 6436, 8899, 
          6643, 9004, 6421, 6628, 8991, 6406, 6613, 6391, 8885, 6598, 6376, 
          8879, 6583, 6361, 8871, 6568, 6346, 9140, 6554, 7599}], 
         Line3DBox[{6527, 8948, 6734, 6512, 8945, 6719, 6497, 8940, 6704, 
          6482, 8933, 6689, 6467, 8924, 6674, 6452, 8913, 6659, 6437, 8900, 
          6644, 9005, 6422, 6629, 6407, 8890, 6614, 6392, 8886, 6599, 6377, 
          8880, 6584, 6362, 8872, 6569, 6347, 9141, 6555, 7600}], 
         Line3DBox[{6529, 6736, 9048, 6514, 6721, 9038, 6499, 6706, 9029, 
          6484, 6691, 9022, 6469, 6676, 9017, 6454, 6661, 9014, 6439, 6646, 
          9006, 6424, 6631, 8992, 6409, 6616, 8980, 6394, 6601, 8970, 6379, 
          6586, 8962, 6364, 6571, 8956, 6349, 6556, 8952, 7601}], 
         Line3DBox[{6530, 6737, 9049, 6515, 6722, 9039, 6500, 6707, 9030, 
          6485, 6692, 9023, 6470, 6677, 9018, 6455, 6662, 6440, 8902, 6647, 
          9007, 6425, 6632, 8993, 6410, 6617, 8981, 6395, 6602, 8971, 6380, 
          6587, 8963, 6365, 6572, 8957, 6350, 6557, 8953, 7602}], 
         Line3DBox[{6531, 6738, 9050, 6516, 6723, 9040, 6501, 6708, 9031, 
          6486, 6693, 9024, 6471, 6678, 6456, 8915, 6663, 6441, 8903, 6648, 
          9008, 6426, 6633, 8994, 6411, 6618, 8982, 6396, 6603, 8972, 6381, 
          6588, 8964, 6366, 6573, 8958, 6351, 9143, 6558, 7603}], 
         Line3DBox[{6532, 6739, 9051, 6517, 6724, 9041, 6502, 6709, 9032, 
          6487, 6694, 6472, 8926, 6679, 6457, 8916, 6664, 6442, 8904, 6649, 
          9009, 6427, 6634, 8995, 6412, 6619, 8983, 6397, 6604, 8973, 6382, 
          6589, 8965, 6367, 8874, 6574, 6352, 9144, 6559, 7604}], 
         Line3DBox[{6533, 6740, 9052, 6518, 6725, 9042, 6503, 6710, 6488, 
          8935, 6695, 6473, 8927, 6680, 6458, 8917, 6665, 6443, 8905, 6650, 
          9010, 6428, 6635, 8996, 6413, 6620, 8984, 6398, 6605, 8974, 6383, 
          8882, 6590, 6368, 8875, 6575, 6353, 9145, 6560, 7605}], 
         Line3DBox[{6534, 6741, 9053, 6519, 6726, 6504, 8942, 6711, 6489, 
          8936, 6696, 6474, 8928, 6681, 6459, 8918, 6666, 6444, 8906, 6651, 
          9011, 6429, 6636, 8997, 6414, 6621, 8985, 6399, 8888, 6606, 6384, 
          8883, 6591, 6369, 8876, 6576, 6354, 9146, 6561, 7606}], 
         Line3DBox[{6748, 6747, 6746, 6520, 8947, 6727, 6505, 8943, 6712, 
          6490, 8937, 6697, 6475, 8929, 6682, 6460, 8919, 6667, 6445, 8907, 
          6652, 9012, 6430, 6637, 8998, 6415, 8892, 6622, 6400, 8889, 6607, 
          6385, 8884, 6592, 6370, 8877, 6577, 6355, 9147, 6562, 7607}], 
         Line3DBox[{1287, 7454}], 
         Line3DBox[{6750, 6989, 7433, 7532}], 
         Line3DBox[{257, 514, 2618}], 
         Line3DBox[{6751, 6884, 7144, 1290, 8270, 1291, 3009}], 
         Line3DBox[{6752, 6885, 7145, 7146, 9084, 7147, 7148, 6991, 7448}], 
         Line3DBox[{719, 520, 8086, 664, 1799, 7522}], 
         Line3DBox[{6753, 1227, 3808}], 
         Line3DBox[{6754, 7080, 7081, 7035, 7557}], 
         Line3DBox[CompressedData["
1:eJwVzcsrxGEUBuAzCybCAgvmwoyfLZki1xX/gXLdkVLKJRY27GZpJzt7SUhS
FhZW/hTKwijjUohnFk/nPef96isub05vpCJiieNMxANP2YhHeinkIop0c6i7
Z1FeINHnzS5yHOjumJfn6NFnzCydlHW3zMozFPRtZjut7OlumJDHa/8lEQ3e
NMstNLGrv2JMHqVOX2+ma5kd3SUj8jChDzPFn7ylu2DIPkhV/nH/5Zt1+zlT
ukk63D754oM13Rkl3QAVuer+zhur9lP6dX08yxX3V15YsZ+Q6PbtRzTmI67T
EdvmP+bWNbs=
          "]], 
         Line3DBox[{6813, 1444, 7057, 1214, 9091, 6804, 1008, 7056, 1211, 
          6797, 1006, 7055, 9057, 1208, 6789, 1000, 7052, 1205, 6781, 994, 
          9095, 7049, 1277, 6776, 1275, 7116, 1270, 6772, 9105, 1552, 7239, 
          1542, 6769, 1539, 7236, 1533, 9090, 6766, 1255, 7066, 1158, 6763, 
          974, 7041, 9055, 1029, 1719, 7458}], 
         Line3DBox[{6814, 1611, 8371, 1612, 650, 8304, 1402, 646, 8301, 1396, 
          640, 1387, 8299, 632, 1379, 8297, 625, 1370, 8294, 492, 1171, 598, 
          861, 2343, 7577}], 
         Line3DBox[{6815, 7285, 7286, 7284, 7289, 7288, 7282, 7283, 7281, 
          9113, 7293, 7292, 7291, 7290, 6790, 7231, 9075, 7230, 6782, 6924, 
          9070, 6923, 7276, 7277, 7287, 6915, 7278, 6914, 7265, 7247, 6940, 
          6999, 7324, 2147, 2346}], 
         Line3DBox[{443, 7985, 429, 2518, 7972, 414, 1671, 7961, 399, 1666, 
          384, 8195, 995, 3519}], 
         Line3DBox[{6816, 6855, 6805, 7398, 9079, 7397, 7399, 7266, 7269, 
          7390, 7391, 2480, 7396, 7370, 7380, 7371, 6945, 7190, 7191, 7189, 
          7050, 7117, 7229, 7118, 9072, 6925, 7072, 7183, 7071, 7345, 1973, 
          7542}], 
         Line3DBox[{6817, 6856, 9064, 6806, 6849, 9060, 7405, 6798, 6845, 
          9058, 7280, 6791, 6841, 7073, 7185, 7184, 6783, 6838, 7576}], 
         Line3DBox[{6818, 6857, 9065, 6807, 6850, 9061, 6799, 6846, 7273, 
          9059, 1629, 6792, 1603, 7054, 7515}], 
         Line3DBox[{6819, 6858, 9066, 6808, 6851, 9062, 6800, 6847, 7261, 
          7031, 9108, 7262, 6793, 7192, 7347, 7501}], 
         Line3DBox[{6820, 6859, 9067, 6809, 6852, 9063, 6801, 501, 8499, 2461,
           5627}], 
         Line3DBox[{6821, 6860, 9068, 6810, 6853, 6802, 7441, 7551}], 
         Line3DBox[{6882, 6981, 7447}], 
         Line3DBox[{509, 453, 7502}], 
         Line3DBox[{6932, 6931, 6930, 6811, 7360, 9080, 7359, 7439, 7446}], 
         Line3DBox[{6965, 7121, 9082, 6966, 7008, 6992, 7426, 1777, 7570}], 
         Line3DBox[{7058, 1283, 1773, 7450}], 
         Line3DBox[{2018, 1967, 7076, 6862, 7033, 6863, 7077, 6883, 7543}], 
         Line3DBox[{7211, 6864, 7034, 7202, 9128, 7416, 7584}], 
         Line3DBox[{7320, 7436, 7437, 6881, 7408, 2174, 7580}], 
         Line3DBox[{7363, 7314, 7313, 9114, 7361, 7308, 9078, 7307, 7356, 
          2471, 2472, 8502, 2430, 7053, 1518, 7232, 1517, 6961, 871, 9071, 
          6943, 869, 6960, 813, 6918, 811, 7463}], 
         Line3DBox[{7364, 7411, 7316, 7315, 9136, 7413, 7362, 7410, 7310, 
          7309, 9135, 7412, 7357, 7409, 7305, 7442, 7406, 7304, 7550}], 
         Line3DBox[{7368, 7367, 7075, 6982, 7007, 6964, 9081, 7074, 6963, 
          6988, 6861, 7517}], 
         Line3DBox[{5131, 1600, 9109, 6774, 1623, 7271, 6835, 6778, 6880, 
          7051, 9103, 1438, 6784, 7516}], 
         Line3DBox[{7443, 7415, 7312, 7311, 7350, 7032, 9111, 7270, 7302, 
          7141, 7140, 7329, 6929, 9092, 7006, 7301, 6980, 6979, 7328, 6928, 
          7005, 7300, 6978, 6977, 7327, 6927, 7004, 7299, 6976, 9088, 6975, 
          7326, 6922, 7003, 7298, 6974, 9087, 6973, 7325, 6913, 7137, 7028, 
          7297, 7115, 7246, 7114, 7322, 6901, 7241, 7026, 7296, 7134, 7240, 
          7133, 7323, 6897, 7238, 9104, 7023, 7295, 6970, 7237, 2194, 2341, 
          7513}], 
         Line3DBox[{2634, 554, 1127, 2942}], 
         Line3DBox[{7444, 7108, 6937, 7025, 9086, 7132, 7480}], 
         Line3DBox[{7445, 7388, 9134, 7389, 7395, 7394, 7393, 9120, 6911, 
          7166, 7244, 7243, 7245, 7432, 7541}], 
         Line3DBox[{4492, 459, 1827, 7526}], 
         Line3DBox[{7449, 540, 8177, 964, 2842}], 
         Line3DBox[{5243, 2214, 947, 8496, 2434, 1453, 8322, 1454, 500, 1965, 
          2864}], 
         Line3DBox[{7451, 7084, 7085, 6822, 6755, 7539}], 
         Line3DBox[{7452, 787, 836, 821, 4462}], 
         Line3DBox[{7453, 7069, 1448, 5883}], 
         Line3DBox[{4595, 1187, 8556, 4843}], 
         Line3DBox[{5186, 2188, 820, 6933, 9089, 1219, 1220, 2233, 7553}], 
         Line3DBox[{7455, 6950, 7468}], 
         Line3DBox[{3077, 1524, 1226, 9094, 7036, 1098, 6951, 7470}], 
         Line3DBox[{7456, 7294, 1969, 7585}], 
         Line3DBox[{7457, 7064, 6889, 9096, 7013, 6824, 6757, 2327, 7375, 
          7477}], 
         Line3DBox[{2783, 856, 852, 1538, 8351, 1258, 6904, 1174, 6906, 1175, 
          1194, 810, 8437, 1852, 5831}], 
         Line3DBox[{3011, 1302, 1092, 5758}], 
         Line3DBox[{7459, 7330, 6990, 9101, 7120, 7009, 7149, 7010, 6887, 
          2120, 7574}], 
         Line3DBox[{7460, 7421, 7465}], 
         Line3DBox[{3126, 729, 2709}], 
         Line3DBox[{7461, 7317, 7334, 6875, 9115, 7336, 6876, 7131, 7130, 
          6935, 1528, 7507}], 
         Line3DBox[{7462, 7065, 9133, 7563}], 
         Line3DBox[{3256, 304, 1722, 5712}], 
         Line3DBox[{7464, 7422, 6953, 6894, 6998, 6758, 6969, 7333, 7372, 
          7562}], 
         Line3DBox[{7466, 1474, 1106, 1130, 796, 7581}], 
         Line3DBox[{7467, 1839, 7586}], 
         Line3DBox[{3658, 2184, 802, 8498, 2448, 1247, 4741}], 
         Line3DBox[{4457, 1140, 1139, 2237, 5744}], 
         Line3DBox[{7469, 830, 841, 8139, 764, 1716, 7578}], 
         Line3DBox[{7471, 7424, 7129, 7127, 7128, 7529}], 
         Line3DBox[{7472, 7381, 7425, 6938, 7387, 6903, 7402, 6902, 7401, 
          7219, 6878, 7044, 6877, 9083, 7067, 7042, 7483}], 
         Line3DBox[{7473, 815, 829, 759, 2201}], 
         Line3DBox[{7474, 7011, 6968, 9085, 6967, 7369, 7554}], 
         Line3DBox[{7475, 1744, 6761, 1155, 8231, 4683}], 
         Line3DBox[{7476, 7423, 6893, 7096, 7215, 7095, 7126, 7494}], 
         Line3DBox[{4486, 562, 8092, 676, 4740}], 
         Line3DBox[{7478, 7352, 7376, 2416, 7386, 7099, 7100, 6955, 7373, 
          7583}], 
         Line3DBox[{7479, 7022, 7021, 7020, 7107, 6879, 9121, 7068, 7510}], 
         Line3DBox[{7481, 9124, 7365, 2209, 7430, 7059, 7440, 7407, 7537}], 
         Line3DBox[{5647, 1425, 7045, 1331, 1332, 7590}], 
         Line3DBox[{4497, 7943, 330, 1954, 5671}], 
         Line3DBox[{4811, 1956, 343, 1049, 8211, 356, 991, 8191, 370, 2561}], 
         
         Line3DBox[{7482, 968, 8179, 291, 4705}], 
         Line3DBox[{4609, 8549, 1046, 1177, 935, 1350, 1180, 5849}], 
         Line3DBox[{7484, 6867, 7082, 2095, 7588}], 
         Line3DBox[{3582, 2122, 8464, 1308, 1420, 1309, 7496}], 
         Line3DBox[{7485, 7331, 7527}], 
         Line3DBox[{7486, 7418, 7015, 7091, 6871, 7098, 9098, 6872, 7097, 
          7528}], 
         Line3DBox[{7487, 2372, 7385, 6984, 6892, 6997, 7321, 7558}], 
         Line3DBox[{4095, 576, 686, 9131, 7525}], 
         Line3DBox[{7488, 7419, 7135, 7112, 6939, 7136, 7242, 6908, 7338, 
          6909, 7251, 9106, 7138, 6942, 7139, 7252, 7495}], 
         Line3DBox[{7489, 9127, 7113, 7341, 7392, 7342, 7568}], 
         Line3DBox[{7491, 7124, 7125, 9069, 7040, 7123, 7122, 7233, 7535}], 
         Line3DBox[{7492, 7351, 7571}], 
         Line3DBox[{4542, 8346, 1527, 1251, 6956, 1767, 7579}], 
         Line3DBox[{7497, 1310, 961, 9129, 7503}], 
         Line3DBox[{7498, 7428, 9122, 6896, 7104, 7218, 7103, 6954, 6985, 
          9123, 7435, 7566}], 
         Line3DBox[{7499, 6767, 7161, 7162, 7047, 7206, 7504}], 
         Line3DBox[{7500, 7404, 7403, 7400, 6907, 7000, 6770, 6972, 6971, 
          6958, 6899, 7524}], 
         Line3DBox[{7505, 7212, 7417, 7384, 7089, 7038, 7094, 6891, 7493}], 
         Line3DBox[{7506, 1186, 1549, 1268, 6916, 6910, 9112, 7272, 1626, 
          7208, 7548}], 
         Line3DBox[{7508, 470, 3668}], 
         Line3DBox[{7509, 7016, 6873, 7101, 7017, 7102, 7018, 7019, 2135, 
          3740}], 
         Line3DBox[{5292, 976, 317, 7933, 5119}], 
         Line3DBox[{7511, 7354, 9074, 7303, 6787, 6843, 9077, 6795, 7358, 
          9118, 7379, 7587}], 
         Line3DBox[{7512, 9130, 7306, 6794, 9076, 6842, 6786, 7267, 9073, 
          7268, 1669, 7279, 7549}], 
         Line3DBox[{3448, 477, 2337, 571, 8056, 483, 739, 8113, 2145, 7559}], 
         
         Line3DBox[{7514, 7318, 7353, 7319, 6959, 7207, 6832, 6773, 6920, 
          9056, 6834, 6777, 7001, 7002, 6962, 9117, 2258, 5423}], 
         Line3DBox[{7518, 1779, 530, 7060, 7591}], 
         Line3DBox[{7519, 6869, 9126, 7090, 6868, 7088, 7014, 6888, 7086, 
          7087, 9132, 7556}], 
         Line3DBox[{7520, 7109, 2253, 7572}], 
         Line3DBox[{7521, 7429, 6898, 7106, 9099, 7105, 6764, 6828, 7335, 
          7564}], 
         Line3DBox[{7523, 673, 547, 1802, 7582}], 
         Line3DBox[{5492, 592, 695, 606, 2433, 8190, 990, 2861}], 
         Line3DBox[{7530, 7340, 7339, 7154, 7153, 9102, 6874, 7043, 7205, 
          7344, 7349, 7348, 7547}], 
         Line3DBox[{7531, 7337, 6986, 6957, 7567}], 
         Line3DBox[{7533, 1901, 837, 789, 2497, 8508, 1764, 7565}], 
         Line3DBox[{7534, 7332, 9116, 6995, 6952, 6994, 6993, 6949, 9125, 
          7431, 7536}], 
         Line3DBox[{5283, 1919, 7012, 6983, 6996, 6870, 7093, 9097, 7092, 
          7438, 7546}], 
         Line3DBox[{7540, 6760, 6826, 7204, 7427, 7552}], 
         Line3DBox[{7544, 7078, 6865, 7264, 6866, 9110, 7263, 6934, 7079, 
          6886, 7343, 7555}], 
         Line3DBox[{7545, 1985, 7083, 7062, 7063, 7039, 2492, 2493, 3973}], 
         Line3DBox[{7560, 7070, 2270, 7575}], 
         Line3DBox[{7561, 2152, 9100, 7346, 2349, 7048, 2350, 7382, 7029, 
          7383, 9119, 7030, 7374, 7274, 7275, 7209, 7378, 7210, 7377, 7355, 
          7414, 7589}], 
         Line3DBox[{7569, 2154, 6919, 7178, 7179, 7177, 7176, 7248, 7250, 
          7249, 6941, 7171, 7172, 7170, 7046, 7110, 7222, 7111, 6905, 6987, 
          7024, 2195, 3902}], 
         Line3DBox[{7573, 7366, 7260, 7027, 7259, 6836, 9093, 6779, 6926, 
          6839, 6785, 7119, 7420, 7490}], 
         Line3DBox[{7615, 9142, 6348, 6570, 8873, 6363, 6585, 8881, 6378, 
          6600, 8887, 6393, 6615, 8891, 6408, 6630, 8893, 6423, 6645, 8901, 
          6438, 6660, 8914, 6453, 6675, 8925, 6468, 6690, 8934, 6483, 6705, 
          8941, 6498, 6720, 8946, 6513, 6735, 8949, 
          6528}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
BtB9Yg/XjuayHI/JPdn05qGIdDrEVB1pqqgq/43fFRj+6s9Lhdh17SPkCIL3
kPpq6qVtRAOeXW6bbDzriXOK8PyY/MT47YlxgU+rSK+urVtEEo1ZV31+YwK0
B75z/tRHrBsmhzF5iI2/6Kdi3Du/CW5GD7vsZuKH/6Hx6HexUU6LSoBHcNA5
z0Zq+I/jDn7Xpt5f/1f+84tVB02Y858/7jw/8rCaDhLHPpzzWVYO889enJSc
v4OkMLr16aoXNNCpt9u4kaOO5bphfDs2HuPhMT3CLt+OrBvb4zE9NXHd/sb3
mphzf/Hrh50rblgbGLX9xjHeHhuP8fbY+mB8O99escMa3tUQ6FvpELKSeF/R
uMWxm/c0w8n0ZmMVNyrL9z1z/HlT3bgfu2De2Q/xz/JZ4ssOBBrK1tPhzVfP
XUFTiPUxppjn11VTIUN+cueKLEIPYvoa4/Ox8Riff73sK2XBvB742ZGjd2sd
IU+61/QmZjr2QP3zqKULKnpYrg/G22PjMX2N2RUGR2t3W5hWwF79hhUHnhLf
C9Pv48I5+vUgHYI8Zcxury9jiWN2yKXzruQqDRpYHpA/lJdGyG2hxVqvCizG
7cx5VS2HeYl9iPH/mN2CrTO2Phj/j9kh2PoYyxVtnipZD58SXUqvHCFwyDvK
/5KPDr0+cjphCdUs7aWxUbs6+6bxdeiwnGZhydpeYnd83pDaohTDXqhIa3PT
byPkJ8bz/6/22J/Ow6499v5QnvvjN1SY5vTi7tk9TSzxnKdzRZa39MKvDGnD
aO1ulji2Pli8ABuP2Z9YfAF7X8xutF1nOOC4uRlcryVX3vaispwHG0/bn3Yu
/EUNDJdrqXLRaCxxzB7GxrsIZ3/ruk8B39e1M8Yy21niZy/tpeobdEGu5Nst
2vFMcTrE3mZ3PGafY3Y4tv7srpu0f578mp5eSG2cK/9sdzdLfKpVQtCT4jZY
uEvc6s021v4Cu34Ehp+c1R7akNsF1cduyksc7GOJY895NpTkoRnUADdU7gb4
LqP9Mc6uv1Ml/djm1d12yF2QUx6VTOz/sdpN9zr2NMLVB0/2K3ymssR/ujbH
czypgtbO1Dc0VTpLHPOztt1cafvKqxkePT/i7GPDpN8Hp0fsG/d/tH9dt4+b
TmeJb9IUvH9oXRm0pt8vrRskcJK7e86X8Dq4mVX8QuYSsW7r9vykHR4rh0Un
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
D9JDd1nXga70y7uW6tgAd2seR0evJMZHu3/KPKLUBEeVi71XJTHFcd6+a3nw
ug5sn5SMLAhkzRdhenCWsrff40UFcMKwWkXRjHWcHePrsHxgj6T3NmaCDeC4
xKLvojSNJY7FkTF7D5NjemGh78UflkPqoOobajaBI33JOAI3dMZptuXAqvl3
Eh4w9TFD4lnYz0+r5N5tjgwGjAoON4E+cW/pD42sM948jUBPfBlY/YsKHwVD
qc5JcnBCPVidXtUA1sV9F9XmMPGrSLwGiyOrzOP7FjkcB97dD+LymHAsjwLL
r0bkJ/q+gV1hj1VmV8MKEQObvVvp6H7OV//6yfKmDyl4Ekf2ltkf4MskEwmy
A8s6d7/pwcePZwsWgXrUJekyGdbPg+V/SptKDGXEMqCsMiZtRc47lvOsLnLK
Cp/BAJkTHYdcxEpZjm/abd2UuJ0ObYbtcozPrOuLFzd0CbpRqLDY3bGpzq6R
5fghO8fPG2kUmLW0/JuJWjvL8Tqit4xoyn2g+qPaWq+RdV2wt636pcMS3SAU
vu6x7Bjr+t/t0rkNo6PtsJ9npW+JO+s633gdYVVt0RaQrTl5YLYc63rej8o3
9XxF68F804b7n4/SWI6PieDVI8fSoXXwwPxpy4m4z5o5by/va6MDJfS02+vS
MpbzlDwS+77kKQ1Unju2q80j9NQt/5dxzuN+jY/YstF7njUs57l15uBSj8lU
ONngn/nlM5F3NDy4KGmBNxVmdI4Jl61pZjnP8QGzdxKvyHAn6JjiAT6CD8zk
1Czs0aHAyJeYFIPNHSznmaG5+2tKVg9c8ueepe9H2L0XRBzMSQG90HiKfHdW
fDfLeSSWj1Vfvt4JGbO5U3J0mPJUK8u/g2kX5HcpPthJ2EvoPDeWr0rf5dMG
K0smWz4/SthjWwM7zC9ua4f3p/d5xH1jva+Oe04jy15ohF0cIT9HOwj9GF1v
WRVS1gTU4y+73waz3m9GN2ZG5/yqAVPxg9tEmwl5KBhqe3/yrDo4KTwPBp8S
uFBz2smfvFTw1vopufke8X2xeDoWd8D4ealtY1f08vJBeulKB19n1vEdjJfD
7HCsrgfTs5h/jcXLsLwyDN/+TsLEsr4CBpp77Z+EEnoE6+eZN6S2KMWwFyrS
2tz02wi7cSLv9MMvek+61QHYl360SbC9F4otVmSraxLjJ94Lls9Qc8rv14F3
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
67rT/G8dROk/T5gxcWbd65xr/jVQ9UzlmXRhg4G+h9Ld/9hT5xrY/GpgY/e3
rkRWGP0oJ1X/GYKflnPcsxAKqv0OM0e6dhOHwr/vv4FarBLQklPXZYLnXi4v
9aAL3m7pe8wo7kBH1eDt1Px/67lRn8YvNcaARkX/l7SURrjV/AnVrQ0gTptW
7eVj5bf30UXzXYqN2BuY5ifDsxqmIgKODT0szpoy6Pg02Qj/pZ4mBnEnibsc
w0R9Bh01w5+cTy7pRN/Ptbd/O0xr+OqP2sQXjkPV0e/QntBRrNm57J6nng9S
csJzNvqN4BOtZm3Z83/92qMXtlgIzLVi6lqs7V91lk479nD4wB0LeGWsSGyz
6MJar3adVDc6NrgGj3aL6BLlPwdaviwO48H9Lt8ugoyK855k7m2K6Ke0lRcq
jsJCYuWrzrlxCHPf5qmrV8W3QxEBVcWj4OfsXNcePo6oK7KOwX8OEbW/fsw6
iJKBfboNSa0sHfqic53ODWXCLemok1nPBM4JTu6QkxyB6su4NpMvI5pLJOJu
qr8ag7/zzPY/98aw9dzV/v4dZgT/jt7er1NjON6yX+eg6Rje+JLbpbltCK4k
slSC+xiEPh+34Ogdg2SGswBnQyAe/qyw/CY6hGRjn8HLnFRcFyLm7Q+dwGHp
yPbvOkxYP9+15IxOLRTu8L6aW2eNy/ntc2xbmdCpOF7RGVKPPC8O9k6aEdRj
GGc4p2nwysxOIA70QHj8y0+eDB0iIYeS9JhKA9ePL7dn3HvA/1BTZP3LM/BO
Hu9Jmx/DtZvlKxb1x7Byl0zxXiNPUGeePBUeIWGW/bi2AD8Z67EzIPjdGaw6
tKFp+PkolBIu5JyJG8dslbKu/EVfJC5myYTtYuLdilXBsTfroPNT2uGxhhtR
wq92kiebAh5FleTNL1k60Pqhr7OuC5YdORLlxt8HxTVNcQcu0fAtpGFTRaUY
XvmqJZH7m8Dbbz4kWchAVsH64f1vt2AF34bU5YdrsX2K169amwnV6po9T0sD
QZj27D5DoUIt7dO2QcMB3OKSD3xwx4qgv33ErZ5JguoMvyb3PjIMjlu1+yza
gGfEZvio5TC0rcQmn6tToPf18VDpO0Mi5vEunTa9Abj98tY4RqXiuGTosM4L
GwyfP7zI3TWCLKevXAP6ExDnZNBVT4UQYSPThII9BaJzsgfipIaRpPRzk4iV
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
h1ZkND+uHT+ooUrYzTVaFr6nImeRYlk71YwAoby3wcUSxIK7zfls169Izd3N
8zCShg97X9h0nTMmusPrY/yHaCCdL1jH5P/uv/rzHQeRqdLMYOJkboqP0gAN
bX+Vbn2X+J++1Qwz67L837fQ8IdaPb84VIQnp2fXh4qfwSZHz6NWSTRw+wRJ
+Yd+RsLNk/FeZ4LwYW6SpymahuTDjipefF8xYlRisk06jNjiqi/rV0zDSn7e
7PXwjzj0wv7I1QEF/BBaU+DxaxrXV1rs3PJGsKf+c1i9sjMcDF7WmlGmwcHv
sSbs0wgyDTgGpucNiY7cPLVAwWnQvJPeLTSPQnCAi1T+SwmhHibtok+G0Ps5
ZiPFdAaPPK7seHjKFWfqr5Y203XrMdsQLWe6bh0+E+YuJOhNhFYWya92HIVZ
se5zStA0ptrnLHzCj+OCnVf8E8kRdOcWc7bR9d3+qNahpNggrCtX4s+KoOc7
9XPieSH054r3HRiUiCYaX3xn0tSgwW+tf/KJg7VIL9bL3WcWhOUNCT2+zjRo
ClmzHBqvwtjCwU9zJdp4FKCkxvFtFC+1ZZ3q/9f+rM8XhSlWglQMap96GXev
HWKCh2RolxaVSngY7u4hT0MmefbEzooRvOJJamlncYZnw4p4KW0cfFqUK4f0
JiFw1PjCPpWTeP4nu/mw7AQsC/fFDLNO4qVEMNuEuR1x8ejLH4LVIyhK0L/T
NDmNR5NiO6NueRKhTkzNFnTOrJhjsHCkc6YGKSai+4k14RhbsVZ1dQ+YXzGf
rVeiYD2jpKLUO02sybqV+bSuGhODL1IHLP//dU02eZ+YKIWKLyV6R06fbkKe
8NvCR3FWxM9ymRgdHRrGDa1+Jv6owfHpCwIbxoKw5jU1dvYGDRMOGlSJic9o
iXg6nkAxg2uKwz72TjJYtsdt3ljci4rvv+VP96hA9OQ1WmAgXRcv66uYZozh
mJiOfV3XKqI8KndM8/FH3Od7YxhRRINWEamlVXe4rENKftd2pWpkpOfxHXKg
//+Y8l0dySOo6XFeUDg9CiaVwignr2kwCd72b3TfgrxH4ztMMvvAKaUU15NK
Rp6f9eJhR1bC5mtz3aGZVxC7a868lUpDIJ9jVXTlb5WvHe+nVuKeYIP4Nyf2
/0OvKSqw6tzPmVR5yZSi4taRhWvKVmkJ/8fv1bmHxYOyeYhAHiPpCOFW3Jed
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
fbSEf/B/E65+d0vJBZd2cNpYxPh24R/834Vra6hIZ401Q8+d+bSyIOI/+P8h
/p9///P+q/+v46z5afZtDSTIqt49dKLgT91OMmKp/6VbLSRYuPNdh5CM6l62
9pFPfm8nwXYlgqb188I/uNyGSbIz3STY6Cx4vcb7T11NsndOUS+8+0jAvJHD
ktHpT308MsmHP3OfD5KAz1+xR/bKnzqBZBEnjh2+P0ICGcvJ62e10T1CKUfx
1XWeaU7jV09iPPsksw3WeeburxvDeZ6yPji+zjNrR1s/zrM0W2z19BrP7vvc
FLUYT/JjPyPWebYbci3iPPndzXPWee5SOW11GONpY195aJ3nMX9ySm2MJ8ex
SGezWBIUH+Asu3rlzz0+WZtQ26EjKSQ4RDcc2pXx596f7Kaoy+nBDBJQ0J6J
3r74p54qWdSuO/6yeSSw5Q0+KqyE8KOrPnVaxSTolCEn3+nzp94LWfDRQ+N7
35Mgb4bzaXfin/fsyCx2zBaWfCLBRf+g/arSf+pz/vETqv+LnzDae+7GOn/u
zbVc1zD+7rUnDv4v/n4pizj/HLXtJ9f5NwztW8X5n6mWfvy/+K/cT8T5N56y
qlnnP1NMaYzzbzx+eGSdv+pTpbM9GP+Ykc1v1vmX8DV+xfkb1ggpR2mQgL6h
s02++k+dQ7K90hkKJrok2PGhz21P+594KrJL5EwTWZdJ0Oal6xE2XPUHH28O
inl0lQRTzdEBr4h/6jWR7fdhHpy5TQLZ8yY2xkt/3o0le8bGItThtTbuVfIj
VdQI14v5tuV4AAkYHYw+z2z+U6foj59w9F/8hJcq9Q+v899mJ3pOAePv+phD
Zp2/Y/61VZy/DFXR4Dp/Z+ndFOEYf63GO+Hr/F/GRm5OxfhvqpTpXudPG+U7
i/N3aL7Nu87ftt3vcjXG35sulGGdv3No04lZjP8DSgp++QwiZHe5ntwhjvxC
Qb3dYxs/EkHt2OcEg6d/4l7IxD+9yd7SQ4RbP2sSuL7/iZ8hK9uUla71hQg/
45rEbfQQTiF4WriaigTiLzSCIh0b/uBxtSqvHFlJsHe4iT5B+s/7vGSf7w93
nhUmgcTckiDN0p94sz9+Qo9/8RPm1nWxrfNXdvaOxvn/nGbrXufPrs3xA+fP
s8swaZ3/WeULP3D+I+Flcev8T41EeuL8lytquNf5Z1tqyLzA+H+QEIxZ56+q
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
jG9rh4nFIy8ctfrBzFUviIPih26wsdH0Yx2ClXduChaXILt9T3NVYHRLKWQ6
sIBgM+o/z/2yJuuGEpDiupecgonz75g5mXtPPh9OD68+Wo/qIBCMZpKKjqcW
Qm/XeclqlE+VkLvstPiK/g4QvmEua7gUzX/sitvjPm6VcNZdgSoc1Ssn1Pjo
+GntqgaaOIvt7pj4/0H6cY9NTypgu51G81G7IdjLkfOzwjtW7lmFx2Idyjov
D1u5yo+yzg8dXnd6EwWnlzZnCn1VDQPneQO1BjDr4Viu7OmrtbCMi+9Doy8J
DB9WfVmmEJgmv412q+T1fhgRFdtY1tEGVkVXPNgpeKB12fng8j7w2ryDUbm7
Hapu3hp+eEyV2Ed2E1C0boTNIcuZ/J8NwulmGSvytbtpNOSG7ATvOtgn9i3r
EMXOlFu3kkZ5g5OcAd/qByd3d8HooIwkcaAHhG58LtsSEiNXNfZ5wp6tEhqL
ltZ6GQ5BrkVOSWU3C3GjSoFK7ZtyOJvj3vktZAiiJa7TjI7ugYfbNmVM+peB
akaY9Gz9gkiaiNqvFPxG0QyH4PtSuJDtJ2jcgebNR6YnKkKoEnLW6NlRozzS
hOMkl33kdxXQPRZyTsca4Xj2JB7eRpA2WO3zEgIuaay9gOoMEq68ZB3ZOPEC
+PicnbJRvTNC4VZxudl6ZweOqmHrnRGyY+ie1HO3AdUU0foLPcYP2hCbauBH
Bm+Rlgn+7+i+04YT63rjL5LBbYaF+X4qen9U3afGyXqdDO9as+m2lqP3R0ar
uSdn64NsH/MywNQHwb3XpHLFRYFVlAw7Xx1IITag9zUWl6XTlCj74VHhwxUX
RdE7nS7LZfw8FP3hkvGjim6i6D/4kww+RXEXij+lodnfcBnZvZdm/HbKyw4B
Ve09sbujKP4w5dQd+PTYEPC2ftrzSRLhH65rXXgj3Alkcnjc7jokNxYdUL/p
zNcBqu1iSg1P0P4yEu15aqlBggoq+1r6d8j/KmZzOzjQNwhaM4V9bBbIrjgk
soXXm4sEDts+jXH7IjsKL97+JMKCmf7iAHx+ny80ZIjOU/TYljMVD/bDU7ZD
l3+qI/v8U/W9F6mSA6A2UaibWIXaPxSN+bZ9uA1UIyWeVLuj+bcO2tp2tK4V
tiU+uOoogdZDfWyeVbJRG9R25Q1cakLt3Wcq8lIne6HD+OnY8ylkh6h43c/9
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
tj7Lv/j/HMer2zL/778/rvV/Gu7zdchqNs5m+slTsBcTZ4vbJuA8i8sQu826
MPjk1i0us/i76xJrsTj9CJPtLJ4rfG5HDwZXKcw1nsXNbjh8HsDgAQN/jVvT
4DVv3Cmxv8YNvNkzb9xAib/G/bp8/rg9P/8at+f02XnjWlb/Ne7Vy7bzxh3r
Oh0xG+96oaHzehkm3sU13JI3izd6EeWWYPCHW//CB09XzsOpz5r96sduxcV5
/azL/at/+xK9efjlrr/64XyZPq8f6V1/4fd3VczDq7z/6v+lr/O8fiCWNcbb
igyWid7UQZg4khdH0PQsnuT/qPIWBlccWvar/eaVojTY9m77/uqnQ8p/Xj83
5vpxWdAPvfryX+0jbqyf148R9ZJ3BTRk8O+KPWSHibdUKI28ncV9BYYPY3H1
w/S/2i+3fjWv/c/hv9qzB3fNa59Ksjx0+tAQVK2/YSKHiTM0zeGsC/CAW8O/
/Ivm7ybz/IvbZucLayn417VyFg4YXGqr0dYuCv7oHjnXFINv2dR1aoCCixZs
tjHA4MEyW3/hikt4bLE42+3HYrP9XLinmoftp+RmQv7suG+Y7ltix2VRO/2L
j/2M6jw+8loGv/i4CozN41Po3fFrXJlxsXl8Ehq3/cJV6jjn8TE9H/OLjwjD
nnl8up+9+cXng/DteXxW0an/8hcisoPn+QtaZRc1C2f9iCCp7xoY3P9dYGAH
BW9IEQzajsG3/dikN0DBpTja7UQxeHxOwu3Z9szOavex7bN4j6rO9i/NGT2F
7V/a99yvcQ+Eqc4b1yjo5q9xjyuIzRs38udf4yazzR83t//Nr3FvD8vPG7fT
6OyvcQtWBc4b14T24y97viixeJ49H1evP5pPwR1HBOxuYvDiCZPzrRTc9aTt
MxcMXqpPf24WX8wsG4/FBfNDh2b7mTr/3hnbz74x1V/9G33ZOq//+iMnfvWf
tsRpXv8TU8t+9c9pKjWvf9mE+F/9a9k9n9f/s3aVX/bzNbkb8+xnBdo4Pz8K
LiZEvcgFg4ezyaY/oOAHey7tscXgrAHnfWfbX70pSINtz3I44lc/irIM8/pJ
Y/+rn3vd8/up2H3hVz+rnHjn9bO8ReaX/Zm1imWe/ZmnVaOTTMEfiicaVmNw
Wr4L2rO40+ulRlic2qbkV/txzRfz2tdQefxqX3GXYV77vlUBv+wxm6rd8+yx
+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
nGdsShgre2hcclkZBPc9/P75GwmIJAEHUj1ZXvpN2REeYQK4Rxuceb6HCA3R
huMOREtIUHXdU8pMAIFI4/7CA0SImF2iuGS7FKy10IvbJ0oGh8yR9VksJcj5
B8WM8q4MK8/kCNhCuHCO4n8t4quZ658Hh8XJ+x9sUgPnk0WF324TwLxc2HQN
AxG0m09/E4wyBeVL7EwuMgQYYqVsfDso+7glx4w1e60hUMB6eRFlfXa913Hm
zM6GKj52hgpZfbiltsphMWXd8AZmxg5alAFrhaBxautW8Fu6UpRlTjPkW21P
4VXsg6Cv592wtzugbdbnQ1+uU9aP3s43jyXaQTQpEXtjoAcH7l089MqiA/St
rncxPnwPJs9mkc+EKWM7l6kKCQS0gk1QdJrQvl7gi+hjfJAOmJ/tW7vPDtWQ
aJU/z1WfBPXG7HZ6Vwzh+XEjo0tJ9bBp8cmldTun9pH2LZrm3hQ7TUut2COD
YqdtZY49qji2G9uwNsppf3wPbL3by/hiZTsceLKHf2/SepjxbJkSD1ctjA0a
DBDnkMDPKiEhWEkPytLjMDnDfgjJvcibEVYPw0dlCqW+qGG5pcuNKlM6Yf8G
vzcSAd1wNdRkW0CsLWbvo+IUZ0KE7he+YtyrKd+x61bFT+dLoDvQ3v35o0rY
qJ05x/1pPwS58h+8m7kT01gdxr2HAwNJgcpYpxwyCB87kPtxrjw0DQZ5fWLq
hjUMLYkuW7pg++0nqStmnQP98T2KWyj+9TcL52BFin/NZB/qe652PJO9umdD
N28prGDpu8nBTZHzXY5D+9ZJiJNnJirIdMKD8SMlfkPd4KzfcmbGukvYrYZG
8ZP76wE6BQ+c3dsP7Ee/h85J2QYqPZD+R0o21NgqRkASGYb3twVX8szGZpcX
HN+r8RyuNbz4mEzx929WSb4LOrQbOzLAUF1tWgT7ZEzOZSiSkX564ZE2M958
wG5367xl+JoCehxtpq4dZBDSD0+RvTQfY87tUW7TzKF81x26Tjj7eXTYnylC
BwM+3YQxH4reeDhHu2Pl7XK5+pWVw94UPTZeYbjekrIeO7zS/HO6vWBs8whD
7owiiO8nzvah+Pu3Lve1uLpaw41Er9sB18tB92ltkSzF32eUdDlaU7wdW8mw
XMTrYCFc/5DbpEnxI2TqOEdWejFhu5M456Q9q4ctzCW2fjv6YWS7/1glryh2
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
32RUPd5/tZ/y4H+xn/L/AuozOTY=
       "]], {}}, {
    DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        TagBox["a", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["m", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, FaceGridsStyle -> 
     Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, 
     PlotRange -> {{0, 10}, {0, 5}, {0., 13.804314875288323`}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SqrtBox["DetHV"], 
       SqrtBox["DetHVTrunc"]}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.799434135288115*^9, 3.799434293068316*^9, 3.800406581757967*^9, {
   3.800406706233096*^9, 3.800406823442464*^9}, 3.80040842420679*^9, 
   3.800458253807539*^9, 3.800458747364674*^9, 3.8004587811643047`*^9, 
   3.800478787585636*^9, 3.800482944017576*^9, 3.8004841728121223`*^9, 
   3.80048552622209*^9, 3.8004909722252502`*^9, 3.800542703900625*^9, 
   3.800552325230393*^9, 3.8005785907717533`*^9, 3.80252497725144*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"fe424df2-2af8-414e-8413-2eb1a473ecde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pH2", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sqrt", "[", "DetH2", "]"}], ",", 
      RowBox[{"Sqrt", "[", "DetH2Trunc", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"h", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7994289539105787`*^9, 3.799429069823216*^9}, {
   3.799433254035104*^9, 3.799433285300692*^9}, {3.799433333854372*^9, 
   3.799433375087038*^9}, {3.799433500788445*^9, 3.799433500964443*^9}, {
   3.799433533925202*^9, 3.799433567968049*^9}, 3.799433631635578*^9, {
   3.79943370496087*^9, 3.7994337327055397`*^9}, {3.7994340939797783`*^9, 
   3.799434128365823*^9}, {3.80040673640632*^9, 3.80040678635528*^9}, {
   3.800406874665372*^9, 3.8004068807436123`*^9}, {3.800474966457097*^9, 
   3.800474967911416*^9}, 3.800475026454405*^9, {3.800490791045652*^9, 
   3.8004907923405027`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"81e48610-51f9-4ba4-b46b-de43891c4f7b"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1: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
ZiZ8yWxlBh7oO91LhrWnfU/a/30fHZ//b76Pjv2eNNr3etG+h4r2vUm07/mh
fS8N7XtUaN/7QfueCtr3KtC+B4B2br3jvmI1JDV0XN2lfOgn9xzrSIFeMsod
97fQzqvSzp/Szo3SzofSzmPSzl3SzrXRzqPRznnRzmf96zkO2vkL2jkF2nkB
2j5/2v5z2j5z2n5y2n5p2j5n2v5S2r7K//W+R/AD5P462n4w2n4t2r4s2j4r
2n4q2j4l2v6Bf637/6/r+7T6Mq2OTKv//q/rubQ6LK2uSquT0uqe/+v6Jq2O
SatX0uqPtLohrX5HqzfR8vlHDvN+yjl5wv/L8wvisf/L8/Pn0//L8/Pvy/9P
eX7Yt3fy4fuFL0uF8u1VuyPtZ3dFj9LqR+4az66vF3WfrtRg0B5vm3tIeKWw
HOadn0z4mjih7xt559W5btPBO8zOPfel1SrZfo6K1LX/fa2I+XHknc+arxfZ
8TNOOzDboIg5EHjIT3JFti1wyM84XWy1k7zMXhfynxBf4fEssO+jY5P1poGW
L2X9EuRFIQ4nOcThJIc4nOQQh5Mc4nCSQxxOcojDgV8f/Lx2tkQVc35brU/T
2Ov4805ChpcOKBkgb+NGy+KprD5zJo15aNr1MRN/c9aQfq9Yv3pakG8sm3nQ
7V4sN+8N8TDJyXo33JdgJb/VmXefYA75STOzy/1KWu9gfs9tbfSVF+8ZyVXn
48euZPMzAwqq63R7KbTHz5Huu4XyMyc+FNQNOaiI4q+XW9oJ5VVu9397/Ebn
ZuZ28e0NTj7s54X4cOM8jc9KR9lxeFTweau89b7tEWXz3pAH85ZTKmE8uJ8X
4gTgkC/VYeIORYxn92mA/XNB/AAc8pYtf/KNnzj2EFdgPymw9ym5flokkq0v
XBOb46+X+pq5v3Om79QbbL4U1qtJ4pNqw7PY74cZK5jHM1Kqq4tvXMMc8pZJ
c+p7Xo56gfmmylxJx7X1zGW1XOT5lb0v80QuXfKa/ZOJyV/5qHsMqzPkh7fo
TJNaLPuB87kgPgG+QWCf5vPmU/jVrxx9ri59tHbkL7b+pZ4tenCYeye0WPPL
mK/D2ft+r8TghduB9vXtffVf9k9vcfzAKGI/FfQH4hzg0YLr6jlGzfRfKnTd
yuUnvsR8ZcraXmT/UGKv2xQ+6PGS3iKoTbY2b5knmXcVReH5HfOuHcdDG6ef
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
av9PF9Xz1iHeWOddx9/PRe0/ljTLtsfQ1Vjnk9/etKD2pz8c5HRWbhXW+Rbj
p62gzEaFD7UoWol1fsOsy5VT58YNDnL57IF1Y/Wsp5rDDYdbSidh3Vg966it
4QfWlP+Mxbqxf+uoz2276+tvicC6sXrWUra9jmqeMAzBuvVh9Kyh8mfqjbky
LgDrZi1eb+nLWRdieQNVkJelE1yxCOvG6tlAhWdt8oz+twDrxupZT3XesPRH
pz5uWDdWzzrK++kCpROJ87BurJ511CyvVPvIVXOwbpmMnrWU9YtTOTs7uGLd
bjJ61lBuld3S/zTMxPU59quyl8E9KfrMZtNchTMXOPUpRb+Y9Om5bHvJOgYz
nqtJ0eOCz61RPLoF68we30IV7xl/S+Z8KNaZ1b+ZMvrlbVEb7Yd1hs+bZjbQ
f5ebN9a5E6N/E/UySv1AQYkH1rmPeB2mjrNexPSXqP3Wyx0/ZkjNxDofZPy5
UvTu+YusP4yYhnVmzgtR+3t/d9R59XEq1tmT0b+F+n4obOuz0slYZ1b/ZspG
+nT87iGTsM6s/s3UWo+zb2V3jMc6n2D0b6LGNS/fZaPviHW+hsaBFFl6Uk37
W+Q6BqO/gyx99dffTh23J2KdmXH4lwzt2muHh2PKJqzzPOZ6KkNbXj/n497g
+1+dh8jQSgP6pS0sX4l1Xsvch0rTt7sPuFWmvRjrzP6Vpk+u0uxvenw+1nmL
eB3mKWe9iOGi9g81vhSwZeBErDN7vsjSf8/M23zFyRHrzOgvar+PlVWSXk97
rDM7LsnQd9x/N7zcaId1voD83aL2+/9tDts6wQbrPIo5j6RpP80BjnW+1ljn
h8jnLmp/cobO6h35FNZ58LGOT1s2iu67f6lYkesY7DisQN9x+mosd28b1pmt
f3l65wDfm8cc/Tn1LE8HvTrinzBrJdaZ0V9Nnv5+qmKd8bmFWGe2zuXoOp1N
3a5fmY11ZvR3kaOtFf9qySdPwzrD93zgrBexfxXowMSqSOqOLdaZ7RcFOjr9
7YLbUqOwzmz9y9Mndrza6xVKYZ3Z+penO1dX26e9tcQ6s/UvT0f9TlZZ93oY
1pnRX9T+sVUn/0TOGIJ1ZsYxUfu7bNXobU4NxjofVVYP8nBRpNdoy50k1zEY
/Vva0i/qFAZXrQnDOrP135Yu2ubsX9a4GuvM1n9buse4BYOL9i3COjP6/2pD
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
N6Jyf78mcklsnSjRVpe26JG5JLaelWiF9EknyFwSOz4r0W9csp1xLgnWMUTt
3PNriyWZP4J2Xt99e7lQ/shz4ch5ZP7IQdzO1K1UfzJ/BO1c7HJnIpk/gnZ2
G9g1l8wf9Ra3c8c66RQyf8S2vwO9t9uA7k+V4rCebJ2r0CGBV4zJ/BFbJyr0
wy1+R2cR+SPQSePRtVc/iPwRo3NKe3rz7vpYMn/EXnfa03PKFx8j80dsPbej
S1VK1HD+CNYxRO00jRnajcwZQTtLt3yaTOaMoJ3n7nY4KpQzWuBmtp/MGTmI
23lAqVYmnMgZQTs3PGrvROaM3onbmRuf94rMGTHt+deR3ncoYJyVkuR5Jdtf
HekV0//lmhM5I6adyR1pubknci8TOSO2HzvSk6UqXMmcEdvejrSu9vV5ZM6I
1acjnb7Mu86AyBkx7b/XgZb9qKuBc0ZQn6J2Sl37rkPmiaCdz6cedyfzRNDO
xu1mfck8UaG4nTWOX+2F8kTdZ28qJfNE0E6lB56xZJ4oXtzOwJrRGWSeiJnn
L1Sjy/Qu+rzRjcB6stc7Nfpb5kHXn0SeiGm/ouj+N2vD5dVEnohpZqEq/Xyx
lBmZJ2Laf0KVHtfj/M9NRJ4I9BvyLHkHmSdiymGKKq3Xkj4J54ng+i5qZ/yK
a75kbgja6dEzfA6ZG4J2frnd9OsnkRuCdi7seCOczA1BOzOlzpkI5Yb2OfZW
I3NDvcTtTN24+BKZG2La/1ydPpTYudyayA2x9a9OVyWfWX+VyA0xdeKjTuum
fB9M5obYcV6d7pCRu53MDTHt11Gnl7zp8DCYyA2x478a/dylpEiayA2x7VWj
9Q/KReHcEKxjiNq59Kjd3adEPgja2bxc7s8eIh/kIW5nP7uud8l8ELTzrZ3R
MzIfBO00qDp2gcwHQTv18312S/JBzRQ7j+X7GNnxnOsLraKCSspKVCdF8u6L
9+rnapk0JvL8Nh4qXfo9G3iY558pFPxeWC/i52s+iY9/lrLGJQ1yNGg/KDF/
V15ycz+RczESf87V9PcdE4icS6M4n6I5/dhVMp/yWrxuYHDkSoUHkU9hr1N8
/xjcp3Pb7wD8xG/bMCJvwv79Te0tydUtIfImK8T39e9mlhirE3mTIvG6wfHe
U3JnE3mTOPH9vl+i9oEvRN4E1h+GBZ20ew15E1G9wfEaHazanca5Eri+lFG5
E42P7yTyI+PE7e/xZtIfSX6klLcfPugA99emY2p1y4mcCNQLt664+7r/53jR
+ZLa48mf9QJ5kEHB38PIPAicR9tXjFsdSeRB2M/ToFWsQpIleRB4Lsb3twjX
uR59xu2d6J+9PF8TfA5973GbUMiJ4M//Qmlu+1y3ksh9ADcpvPXiOpH7AF5a
FfroBs59QP3w8wiCPEjyPosYxUV91HAeQY5+TM+4fOsRP2dhs+KlY+Xduzze
lvkfXN879Dvfz8/+5fv5YR2Jq1t9K+t4WeL1Fi6HuuKeX1JC7RTpAOt+te1H
1BQQfvje4vbPr0vufxj88KI6EWyPiJ95Y7yym8zdVnTg+8nZv/x6Zo/n+8lZ
ffh+cuHxUIVuP/hZuYtvGm+dc83t6QG3p9/l6Txmhe7Lfo7HWtGT70t3EBzH
4Lke309eKLTuin9XGa+dUJ823TdOcCd8zqsFddCihwaoTJ7Xlnt90ZLUv558
Wh32LTdTKwU/p7mVcbsUr+Nx60qwX0T1I7j+LOKmQv0r4qta+ZzXQv2Ln/t8
pMyoeIWthJ9WcLzCz30+Uu+DXq9VAt8sfu7zkcrLS42ZS/hjgY8+LdNsgv2x
zVScYD00C/v08HX5JzXHImHgUsLvCvz6i4YpdoTfFdaBheuQn7/w80X/hLdy
fvH9rrCuLty/1Tz9hX2PGrTs9YgZ8s/5+TIfcT9elpWx/Qj+VZQ3EfPQAK+y
84RPFeYhRTVa/UifKnzvqsPzpzsTPlU4H8/sM0l1wT7VUvzekNuUmhHpR2X/
1lFLMzv3USf8qHA9zff+FCzxo8J6vuh8bXJdIbVbcr8Gnz8nueNgJ+wvhfUc
OXqSX8PH/DvHMId1lb5y9WpvjQ5jDusDd5zTylsW7Plv+0X3j+l7942cc2gn
5nC/5lbQ0cjlw/b/1oloPt8lW6lbXkEU1qfB23BQhCJ/Pjnl/bbDfS/z848t
gteXZuF5rGj8cX1gsddt/Y5Wxo1nrZx33JyXBp3+ad6dI3GxvOtIG4srQYP9
7/PO9/uzfJfqvbnPO94/w35K4owdvOMHzdxS4HIzinc+mrRyfVF9sdnvVAE3
H6dCT37oMS1Y/RZvXPWUHbmvT5s8no+39sPLwIBt/PnDpN5pPR6dy+O1v8TR
7fWevfzcaFzplV+d6m/zdP6nfbjAu4HbHj16w7GcsZN/c9ujSe/5s+JiZPc8
nv7aUk3H71zi5zoDtoZ/tlDhHl/Vyvsm+O8NB87uC9TA+5xc8X56bv6/No+3
k3wvu+/cZ+reoSTd8Y2S54NDxTmLzuFeJfQfSS7vmzi/MILM04l0LhXMfejR
owTzU/z3ZcP5skzl5H5+fqFUnNduov4lrP1t9/QS5uz+PM3U0nZF5W9sLuLf
y9Y/Xzfu+5KAZ4ufW3F16yW+LpxICk2cSOgG8wqXDg1GEwjd3ojH1SHzJsra
gm4ifdxbue4L36fAdaeJivzrrDKG+L0wTmbFb0iR/F54XiBNpya7NgdvO4s5
931S0P4J7f0v9tThPo/WoedOKFpwrJ7fj1lTFr6b+Iz7PscqanjhkItakRW8
82j0snUbl5YV888jmzvWgS+5v1eFvh3/rEvnGyW887T5itOf37O57+vUpFc8
Cuu7Lusdb3zI6j18Gfk+RKjbOM57qxmM9p+k8o018vi5gO5+7bXI9+FCfcpV
dL8XLDAvVfZS7tm5kltXKrTv1cBOvN8l0i0vbEAKTzdRexxNLh9Q57YH7Qvx
qCSb11+i7x3yTu+nJvd70ft0um5W5ukj6pfs54vm8/oFrYM92trlOK/fm6mI
xwopvP4S9YvWilk3ef3Sqg6t1Emr9dCazq3UbWv102odtlIP/2td/a/ny/9a
b63Vf2v6t1Y/rfXv/1onrdZza/XZSv20Vv8C9czmMNNGesuGLkZ5882bfTrc
qTLDfHTG7TRm3+5ex6deIHj+y3vJ6H5/youKxHQRZ98vokoDf1/fd+9Ip/34
vfbAxxhFh5qcTcTvlwfezyP0RUXMDvzeduCdFSbNsn4Vg9+HDtxlSPtdKzZF
4PeMA3ct/XJrXtAm/J5u4Gpn90y/vSgYv/8auPrQxsAnnzfg90oD96f7rJ9Z
sx7/3lNSX8cgXS12jC/aJfq9bA7wHwVcYcEXg0+x58XzCWka+Kk2NktXPk4V
v1dJAfPwG3/K143eLZ5ntMP87ILy6y+iY7GewOfZnrc82SUS6wn8Z7f5fQYV
hGA9gVeFnnupN2ED1hN4uyXDrL+t9sV6Ar+nkJ3Wycwb6wncrFvj3lUNK7Ge
wEtH3NMx6bgc6wl8xw6DswkDF2M9gffsk2P+Rnsh1u1fpzJrdP9yxe2quf+7
VKwb8NQjL7VMgxKwbsDLVVWr9K5FYd2Ar7aw+nLnfDDWDXiO7qCHHUzXY92A
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
azo83oXRQZfH4Tzl1j+cp1wO7Qe+e/GI6mSni7j9wLOHjvuyo/YMbj/wgHW1
75r9TuD2Azf6F3OkYXsabj/w6y/rp/a0O4zbD/x1nV5BY7sDuP1Qn5urM/vN
+HgF1y3Uyebd97uuTj+N65yrA4wDXA7371wO9+9cDvfvXA7371wO9+9cDvfv
XA7371wO9+/C9dCdx+H+vbXfy+13+F34vi/N4IDn4/P4dwG3UStOLkg7hcfn
1q4j3POXvW428/rFU7ZiJ5p3cfmMO/+qUW6Wyw/eajJB8y4u12Sup/zzKzpc
ZovBPf75JVUmZ7kjhX9+fT+umIzmY1x+SiEsFc3HuHz50PANaD7G5RMO7lqJ
3jvF1VntdFUDyrdzeaN3nQu5PpAztTAUrQ94M/MoyfqA5+RxTWh9oIyZL0n6
ZVbMohVofSDNtNBznGj85I7nW67dHrlKoL9sDftcXicaV7ntt2qomLBTND5z
ud7VAuVeDrU8vu7+k3x0PeXyOmZexD/veqf/vIf2WeDyTwur7FD+nMvD1WqO
oxw7V7cVV37fFOL1ff9Fous193NWi+eXcPzvwn8P0HsupgVV9iR5V72XZxGH
+Rnvc5j7O3699WPmt5LzyHTOhVs6zmeoA8z9joQPXxJxHvFn06TPerho8D6H
sbmq8ev28AkZ98IsDfw5q4MCO8QPyKA6MfMTCb9qZdgQJ+Kjs2UXFA7pzPsc
V0uZAjQP4fJLWgrqDmraPM6uI/G5GTN/449Xo5l1JP71KLVIydvgHn8ce39y
U0ULxT+/2u8PU3WYwh/fpqqGH0Lzcy73K9A9id7vxeXsuo0873hPh+rF6Lzj
clOFpk/ovONy5nUqDvxxvteSCGd0/8XlAcz9F3+dcBJzn8VfJ2y4dXEoei8d
jJ9KX3LzOv+9RGVX53SIY/zW7LoKd7zl8i8e9NXVhXd4nz+k6yWrNQK8JVT/
kr9oHOCOGzu8khJRe7i/yz4y2hDN91q73sHnKzSdfes7+hi+3gG/sTIrP846
lerSQV7TYUdnzMOaBxzOnnWEiiqV6kHyCbbf4hGP8WpzJ8tDG/MEGw/zc0aH
qBY7tM4m4cO1ZPogDvNkbjt7Gh7uP3bHT54OF54HbxPi7sz9ch2Pm62836ZI
gLPvE+J/zl7mPlqGN16F1JctEOJGXX1rkP7cfulSE7Ef1QOXw/dyOdQJl99k
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
uu925D9fMfdGKuk/n/RCdy3yn9trmgWT/vO+T03mC/nPfTou2ob853pFe8+T
/vNK6rXc5ahEKvqCU0/Sf/4i9KQz8p8H3NtsT/rPM7r/64P85zOY59p6mEfv
TvDtMXQ11cZ38S/Sl37w78UfvTd4UiV9C+6SvnT5XbG5yJd+tXRUCulLDx+p
7SfkS9f8en4h8qUvLN9/kvSlKy79qIZ86Uvcj28lfenP38k4Il/6Bju/jsif
CfxwSEVM5Ko51IzGrz9Iv3qVxqHq4Q9mUoPPOueRfvWnr3KvC/nVlUMHKqP3
azjLPntB+tUtD0wfjfzqT5h5oWRdJdZyUUf0notjwUu+kz52uRHto4V87Id6
aBYhH7v+JP/2yFcGvDwsef+OfIoaJq5vuJ8a1v5GSPGcI1Rt9KT+pL+9XYbf
ADmZCKqMOX8l/vYnyo07tCd6U9ObOnmT/vYomZYHyN9+mzlPJf520z9VhprP
Z1FazPko8bd7jPYqQv72p8x5J/G3R59UXibkb9+sIN8F+dtH9nzxgPS30+5f
GH97NXNeS+5zHxb8nIj87RnNURakv92z7eoDyN8+YMigdaS/fV2sjSnyt7f7
dWAq6W/P7NuxLfK3fzus0p/0t4+9sF8K+dvTxfUH9033a98lVKwJo0KZ80Li
b48/VVeC/O1mQ+e3ZBH+9l8KF9et1Z1P7VXr4kH624fYnolD/nZ55ryQ+Ns3
u3W5gPztl5n6l/jbXWKsQ4X87UvtfHyRv/0jcx5J/O1TvyzZgPztScmnNpL+
dt9vR2qRvz1NbnQy6W9/siRxJ/K3h1w660P62/2Tnjgjf/uc1d2nkP52PVfp
700TDajB4nqF+52RZrHt0HsWFFZlbCH97atjdz9cUO5C+YxbUJdF+NsN+ire
Rf72cvWYQaS/3XSOTxnyt6cz54XE3x7d59ItIX97F/3gNui9CZuGvbxN+tuP
tVMcgPztuvkzrpL+dttfh9SRv7028s4u0t/+pnnnQ+Rvf0EPXkv62+/9StJC
/vZi8foF3HfkvryyBb3vYFxY5mbS3/4ywMP/3WFHKmf+ososwt/eVXop9W3F
KCpeb6sZ6W8P6bjQOlXA3+4xWHEd8rfHHVz+kfS3P5Ptch/52z1nvLlM+tud
3B59Rv72sR3GJJH+9rJtnj/3ruxCGcG6hng+vykifzB6j0A8UycSf3ubwU+V
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
ytx1vPFwS848WalLkbz2NHV9dcRm4jfeeJh125oKLo7jtTNwTIdRqTl7eMdX
zNgaG97En88XpfX1PCfwe/Ve3rsl9LsWm7a7ItSemyrtpI0E9LT0k5KPEPhe
19PTfVYffs+7Pv5cJ7fE9WsBr67UjodaDdIr4NWV5to3P65MfsGrK73O/1Sa
svJ510fDtedUNE+95F3vMkODrNbp5fPqMO2EV9O8Mc95dXhs+VuDusZ7vDps
rU7+137/X/u3tXprrd9bq6vW6r+186W1+m+tflqrk9bqsLV6+1/rqrV+//+7
3v6/qqtDStJNLRv589iSceueCO1L8PRsC7MuB/zUtD9Thq3LoOw6ydSj/RaA
285+7Ix8oS2uzQnouQP0y5pnWs6lOrGU91WpMej5HV7vmpVnVmayhSrrJlvT
slHiq2yZmBiMfJXR/reekPfpP29MSUI5bnbflU7YZ6g18/e2lOhg6iCz70oX
zBeM1O4YE+pPaTL7RehI9u9NMphm3dtHvF+ELuYax+yike+x3dTSj2jdHuqk
esREm47W8dSskw1maN0G+N8Ow32H3F9FPe3YXIx8C8DbXdWSbri2XLwfqTbm
au81K75S7uJ9R3UxD+mz4uanEW5U4u6QWrS/DfZDfh6Rg/yN7P54MthnWL12
U2Dsmghxbr0t5j3cVQNi+22gImbUb0DrSPg9RzuWJxVmLqSaLjb2RetIwIc/
PPoxv+M88T6c2ph/HjF02ZsTM6mvzP5Rupj3a9Oug22zE9Xvj3Q3tI4E3K+r
Vuw+/8nifpT4JGdmjLJDPsnI4k45gcS6R6Smfq5u1BoqJ895+rusMswrJg01
6el7jDqz9NxytH4OfEFptk5S4nbqZs37Tp6FkjypguL4ggPqQdSJnE9r0X5Q
wL233zyp/nc1lbjhWwF6HornGw4HdyypWEJlSdfdR+ty+L1Fq03SJk2bRfVZ
0OCH1tWBh9s3HLrr5kQdYPYT08Y883av9C7UJKoTs5+YJDf6ocbP6nzQWCqK
2U9MkhvdUndn2/I2o6mgNSG6aB0ev1fojW3Ipl2jqOGpodUt1yS+0GOL+5Yg
X+iizsqmuXWn8XuCjg972ZxYZUaZMPt2ErnR5rZH0fuG2PehSvKefywKJ6D3
BHVj9vOU5Do35UXHoPcBKbb/2MGTyG9O+9y9LNB0GVXJ7OsoyWl2T9V9ht7v
s5LZD0SSxxxsZSWL8pjsv0tylwd1r45GucuZ7erzyHxlzaQqS5SvfOzR6Evm
KKXVPl9BOUobZv9ASV6ycoliOspLZjP7B0pykaE77WJQLpI9ryX5x6cvw7ug
9+Y8Z/bHkOQcNy9elI9yjm2Z/VE/4nHY9q1jcEf9rdT5OTXz0fgGfO+kjL52
Tymq4q3z7/E7ivD4rCU35lNeVQgV37jPcuyOCsx7Dnc4/XreJupTm3+ZaNwD
/jV4rdKY18OoGUtr56BxD79v5cb6jZXLBlHPmf2XJOtjSX3SZC0O+lL2zL5w
5Zhn/6J/JtmHUF2Z/YgaJdeFuujnByctplSZ/eI6Yd/glXStxca3B1FhzH5o
XSQ5r+JFJcl5/agGZh85Hcxf1L/KzUsxom5I9dmaSMyfD7rlHdu0fQXVPtpo
zEWPP5gfutP2neasIOrNg70L0D4ewK+MmxE58s8C6nV6vmov0fgJ/GzboRuW
TJhK0bMq7dH4CbzJZ75JmJQZdf5SdS0aP3GuKrH2T8NzI8pEtzYdjZ/AdX84
dY5/1pM6EFg/A42fwC2XhLcLM9OnXJh96iTz/IYPy0PKu82jgpn9vn5iLmVp
dJe23UDFM/tW1WF+13xuaEX/+dTghqfH0XgLPO5J4nJj50mUPrOvXVvM234y
XFCjbiPen1CSV8rw87j6e5wJVcrsU9cZc4NNry1WOxtQM5l9C7UxH/3v98Bm
UfsfG9alovEWeKWFVLb/Im3xfob6mCc1PQjQ/t2JqtBT7/xeNH7C9f1n/eKX
FtZ+1PhOcQ/Q+IlzRulLnSZ+nE3Fjn9sh8ZP4HHym4bv++VI+XfMT0XjJ/Cn
3WY2aPaiqYX5r+R7icZP4EerB/y6rWBO7cn4W4LGT+CvUzeN6vatF6WmUrkD
jZ/AUxdmDM8v0afCV1aPQuMn8Llu02uv5WtTjU9rKtD4Cfy+YieNDvmdqFUD
6w+h8RO4XO5uU1ltNarSIdAYjZ/A+6Z76tuHqlCXmf3oJLmSS7uG5qp+SKZ8
xrb5ga5HwG9OnBpd/CJRvA+5xMeYl9l4fUbZaXG/89dR2c8ReJ7I7KNeypt/
wnupufPPjkyOhu+je8T0O9+3s6t4832h57N3n4SXoesFl7c9OT8PtYc7v22Z
lFso9Pwa2of3uzCSOYKem8C/w+cUGEo1qpoki/ePasH//86EhVvP99hKFXw/
mSQ0b3Rh8giSeePYW7XT0bzRfrflRXJ++ND/xgw0P2xu09mLnB8GdlDpj+aH
m8bOO0fOA3sNO94XPa8ZzPj2JfPAPbJ6W9A88HvKiCxyHjjN7U5ztGgeeIjx
80vmgb/HtlijeWDE8IEvyPmee4leIprv6b8IsyPne3fHZnij+d5La7dGcr5X
P+XMn3rRfG/rSauz5HzP5G5GEZrv2epqLSPne7Xe5RlovjdvzYZ55LzOKtGr
Cs3rHk8c/Jic1428lnkfzevaMf58ybxu1uUpO9G87ub78FHkvM5Kw+sVmtf5
Mb59ybxOMUFjEprXDcgZeYqc1/lusKq0Ec3r/p/Kzjycyu2L40JKkyGJX6nk
IlyKVCoiUwpJZa6QZEq3gQyNEmk2ZcjYRCgUqRS5pNKtrlLdSkoypKgUoit+
5z2std+ns/2e5/fv9znPftde73vO+bzru9fe7dz1/ITrXCaF+TJc51fjZfSK
xWkKEqbe8hxOiz0r1/sbi9NuG0uVMJw2N/tuizeL00oUV/1+ksNp6Qd227M5
TdOyoJnhtHGus++yOe1MRXkhw2ldox8/YnPasVEfzzCclrP9Qhib0y5rLoph
OG19c5gum9PSYtRiGU6TsVnXyea0GX1VUgynPbmle4HNaU+N1bwYTjOKH63B
5rSAGSMcGU775xZTLyLc5S/fFsDs17FIulCSzV2jLw1dyuyzIfZ+bACbu65k
GI1l9tPYXXavkb1vRpSkgT6zb0ZrctBKNnd1yod8YbhLVWeiM5u71Hc8HEfj
ruoB7kqQqnrI5q5XF6pVGO5azu13INxVIyyRznCXcPsBbTZ3vXBpOspwVwm3
D4Jwl+CmJHuGu667TbFic5ehQnATs+9EDLc/gnCXssznMwx3xXPrcoS7aiVz
81QK0nS3Lp/kwOYumcCilQx3fehgfGfCXU4+W8Mivp/VteV+Xwh33X71H4Fq
Dnc5fjY4yeYumXkWMxnuklw92ZbNXU5ZchEMd13h3kfCXVfydiszvuRw7v0i
3FW67ZxCAoe76rn3hXBXw2sl3dMc7jI97NHE5q6k5P1HGO7i/2GYzOauAlFx
oUQOd13j5o1wl9k72YcMd+3g9iURvkoUKv0mxeGrOO7vFeGrjeN7Huty+Ooq
t8+I8JXMn+sMPDh8paV0TJXNV5dHGpgzfPUlxrOezVefzoeL9XD4Ko3bT0T4
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
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1: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
xq8l/pjzeZPOgz5Ozyt1bvk0/d+KzeGnxfar+dg1WdVmVWutWe7vov9PGJee
a3yf8VmF1vvcjM8DFEtmIZ9PnE82wr56ub9dHfAI9K/Fzh10rq44cgfXLyTO
Yxujfwb8dux9qufU87ZljOcS53KHoL8l+GxO/ERzV+68vtS+SN/opuD/NVCe
dVfsnENc5Udsrgo+uxSvuySYi2qeNwfXUlR/1v9ZiBOqXtsi5bfyA5pXq3Q9
Xhl8ZqqcV2fmz/LcbYJzgrI0T7mU6xOQh2LTJzjf1DMq1xGPXVvq96H1rHWt
+5Sm99Iz6FlUA9f/Iyh/vBPbK4LrJ8rdzgjO2Q9Ic3ytGfl1/S+DeOk1sf1+
x/Rs/Qbw+ZG5YrXUR8lXqQ4zKa2hqcapvOP02GdoK8DDwNfm/Uz6P5ALg7mN
vsXQjNfJdxn/H4o49u2x/+9DfODa2OcIk9N6muqmyndOi83vlDcdHft/N5Sv
PRC7ZvZP3SB2XU25z6ngPzOu16luNyVdz1rXo9IzoOkZnxdrHeocf0gauxXD
dQ45H5tHYp9PKk98MHZ9VznvGfqGibmU4rtqtzoLODd2fUj5UbfYfFn79MzY
/2+h/7t4CXl98Lmz+K1qvTojOA+bUYnrJloDqg3rHOH82HU61eteyfh/UpR7
3he7HqxzhwvAb8SO5/p/gP8B0r+hnA==
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtmgW4HdXVhs+9JCeZCftc7o1AIAkE1xASCAkECA4FiruE4lKkaClQSov2
h+JQvLg7LVYKFKe4u5dS3AOBwP++/eZ5Mrn7PXt0z95rfWutGb3dXhvs2d1q
tf7Of/34u2Cn1VqTv62q1Tqvr9WaH14Z/G5gq3U2fEW71RrV1Wqtw2+X056P
/pVof0v/WfSPhX8BD+P4y+CF4J/BXfD58CrwcfCK8F3wvPCK8DSOPxNeGF4L
7qb/L/DWpdVaCr4OPhf+OTwfvGfNeQe3Wtuw/03wrvS/Sv/b9F8Dz0f/W/Ai
9K8Pt+m/AF4M3hAeCF8Ebwf/Hf4V/CY8DF4Ifov72ZDz94efgg/hfOvDs8IL
w2/TvxG8MXwRvDnHP83x28K3w3vBr8PzwJPhL9n/z/Av4Dvgvel/Ax4Bj4Pf
p/9UeFF4A3gA/RfCU+Gb4d3g1+DdeL5VfF/wxfCQQa3WeN7HLGy7cY979XId
2m/wbq6m3UP/YvBMbFPp35DzXcDxm3L8kxw/G7wI/A7XPxmek+1J+Gj6V+H5
NqL/Qngz+Cn6Foe3gGeBL4XnhpeFv+D4M+B1ub/5fT6utTbHj6Z/Gfhz+k+n
fy54EvwZfBo8C/c3hnvrz7Y9xwynf1H636X/FPrnYHsU/gPXm8L5Zvd5uzMH
h9MeQf9j9B9B/4r0j4KfgI+CV4ZHwo/DR8IrwWM4/+ZwD3wJfavCx8MrwXfD
f+P+D4enw/fBK9P/f/AU+B/wu4zpDvAccMX5/g3vCI+Aa/g9eCd4JDwI/g+8
MzwKnhn+AN4dHg33wG/B2zbrpQ2/D+8CzwkX+L/wbvBccAd+B94enh0eCA/i
nv4K7w6PhWf2GeBfwkvA3/E8z8KTGdv14CH03w0fSP8kuAPf6nqCx8Nvcv6p
8FC4P9xD/23NfF4SruDr4J3gMXCBb4H3gMfBNXw9vDO8ODwQvhbeEV4MHgzf
BR8AT4Tf4HrbwEPgfvCL8MbwzPAM9v0S3g9eBJ6N/s/hfeCF4GHwp/De8Pzw
EPgLeF94YXhW+Ct4f3hReDj8CbyX9gEeDE+DD4IXh0fAX8MHwIvBszt+8DHw
8vAoeDp8LLwCPCf8MbwnPC/cB78GbwX3wd3wS/AmcIF/5HlegDeCB8E/wK/D
W8OD4ZnY/2V4U7gD/0T/K/BmzXxt0f8qvCXNXrgL/gjeA54H7oU/hH8Jzw3P
Avdyjjvh/eAJcB/8D3h/eGm4rU2Hp8KLwE9x/Grwj6y/r+h7Gl4d/gn+Gn4G
XqPxD9+49uCJzXr+FP4XPAH+BP5YWwKvCs+Av3QtwlMae/+5axteGv4U/gQe
ynY/fDDnX4b7uRpegPav+O0Y5vJP2LUfumLT7qK9FfO6i/a1tJejfxj7P6C9
5phltdfwg/Ch8GS4awAb9mMsxzzDMVdoA+nbjn0OKrGpVRUfoa3dgvP/RPsa
9p0M92FzZnDsSN/BIA01/V2xYXezz2Ns69D+jq6LaA/vYS53x0bfhS1Zegjv
mfOM1abytx/Xu4z21lxzIf0NfDm8Dbww3A3/pbHXC3j/8PnwJvD88EzwpfBW
8ILwT4znmfC68LzwD/CJ8OrwaHgGfAa8Djw3/KP+Av45PA/8DXwgPAaeA34O
Xq/xn9O51uYl7+9KeF361y95fxfC68Drlbz/C+C14Ik87/WM4d48/+M8/7Oc
b136+9P/HefboGT+XAT/nP37MZ4DGa8e9r+pHZ///cD4PLWAY7YC7SuqjGU/
3kHN/vNq87jOalzjT7RXpv8e504nx07nHOfAH7bjH8fw2we0J9B/CO0l2P86
+peEf9PYg2vgpeCD4bHwtfD4Tuai9uaqvswZ58q/qsylifT/Fh4P3wCPg3dt
7PmV8BKdzLVZ4cvhpeFD4XHw9fAy8O/gpeCb+jLn3f/lKmvhC7YfBmZN7U7f
h/CJ9L3sGoU/gj8emHewDTyJ8x1Ge0n2uZG+afBdXZnT59Gexm8jGcNlGcPF
HGu2uoqN+g3Hf+2cZf8F4K9of0t/vyrvcHHan7F9MzBzYgzt80rG57/sczO8
DsecDq8NPwyvAB8JLwvfDk+Bj9I/wXfAy8NHwMvAt8GrwyfAq8D/hJeD/wBP
gm/V95WM17fwvfBK9P+xsc93wivCR8PLwX+H14BPataD/n1N+GR4Dfh+eD34
HHh9+FH1JnxWs54egX8GnwKvCT8ArwWfCv8MfhBeGz4NXgt+CJ4M/x6eCN8C
31fyPAOYq084/+k/D96Q/sfVT/DZ8Hrwv+D14XPhDeDHfP+dvIuz4TVYL0PZ
FqziE//Cud9jTt/O+5oBX037fPVWVzTtvp28/4nwgvA3tD9mn2W6Yo8+or07
55ttUPTVMZ1o3kO51zdb0cIPsc8u9PGvdR/tzei/mf59+eHpTjTGwXVsuNqj
XWIP/8S+k2gvSv8OVTTBO2p7eN8qPuoLeE/sw9q0X2T/a3vzjK9wvpu78uz/
5ffTac/JPu+3Y4MOpH+JVmzTmmoY+Db2+ZL951OjV7GZz2o74N9X0ZQt+kfC
S1fRfGq/ueDVqtjM+0ts0n51xk9bpY3bt874afuMQfaCl2wlNnEOrlrlHTs3
B2D/l9NdYteu4Xn+Sv+EKnP2/JIYZZ8qMYixi3NioypzwrkygPMPr6L5joX/
Q//hzg3482Z93tG873M7eWbv7ZwqY/EOY3Sq8YHnp/0Sx29fJUZ6huNfYP/9
6f/eY9TGHHNrnd+e70TD71MnBlPba9N/VWcOaut9Bte8a91n20mfNCjxyG84
fjc1akm8uA9/dx4cm91L/8H0P9PJ3NFfnk17R30S5x/Ib/vBW7PdSN8u3PMr
nH8428PwYfDy7Lsp/ZfAW8LP9iWGnNbYI+eDMamxqTHmFiUxrLGsMeuWJTGL
sYsxykbweN7XJGzhMm49idmM3YxxNi5ZHwdxf5PpX4r+rwfGH8mjBsVGaCv0
wXex/zj2WZ6+5diW7onP0HeoWY8uiYmMjYyJNizxUfoqY+6t4B0bf+c5JvYk
Jld7qcF+URIjGysbY28vd7KeXdcnMt8Gd+Ib1SBqEX2mvvMc+m/oTYxlrGUM
OLovMaixqOtp7r6MxxSOXYFtEu2Z9NOt+Av9hjGc2k8f/rtOYkhjSWPkuWjv
V7L/lGY8HY8JjkXzPGdxD8MHZI44V+Yv8fv6/10Y55nZ56uuaDztl5pUbaom
3UO9R/+A7sw5595sPdEDzjHnmvNpxzoxZW9PNKhaVI37yxIN63iuyZ+9Gn23
aHfmn/PQY2Y0bc/Vx70uQv8I9n+iHU2sNvZ97Mnxg423u3MO9aEaWC2sRppK
/5+Ni7VlHDuy5J53r5MD8Fm85z3g8a08i/rpujrvcI/e+F7fhWN4iz6F8yzL
+U5ge5b2HJ28u/9wzY0511bwDa3EYy/rr7jmJ/CD7Htyb+aw70Kb79y+s537
24bt3nY0q9r1ZtqnsP/97RyvD9AX+M5m5pyzD8i7XLwna90YfWxPeBztJbuz
/vWJ+kZ95u0lmkBtoM+8o8Sn6lv1ybeW+FR9qz73thIfra/Wh99SEpMbm+vz
r3f9sp3Sjj9TZ6sh1BJqhktK5vz57fS5FowZZsDfdiWW0NfNQ3tett/W0Qir
N/5A/2BOxNzIU40/NIdlLsscwQ0lGk4tp6Y8oyRnYe7CHEVXJ5pQbajmO7Mk
J2FuwpzFTJ1oGrWNmuEi+k/m3qZ15f5+aCfHYa7DnEZ3JxpHrWNMem1JjDLd
edmV2MWchrkNc243lmhitbE5j5tKNJXaSs18c8kcNv68u8rcVqOp1dRkl5Ws
OePZu6qsRTWmWvT6KtrTnJW5K3Nuu5Tk3IwdjCF2LskJmuvYFj6wJCfY1ay/
7Ur2cd9bq8SH2kxtpxpTrWlcbXztnLq/yppyLd9QZa2psdXa5lAOK9HYam1z
kr8uibONt7XxD1SJOT9t7Ne2JTlBc4MbwLuW/KatubHZV42qVlXDXlFiQ8xX
/KOKbVFjqjXVtFeV2BTj93uq2BrXxPjGdqq9HQPH4qEmvtLGur5d52ptNb5a
/M4q2l+br625qUq8bQ7OXJw5rb1LclrmCjZr7NkBJfmcB5t4S/tk7PoUc2QK
ffOxPdlO/Pr7Ouf8rPFHXkufp+28rIovnIV1vmB35qRzcyhzcGpXNN71tJ9u
J7bWBg4eEM2mdlOjGD94De2ndtRrqx9vqpPTva7Rj+aqRrP/cebeOmnPzXY8
7Tbbcl1Zoyc0euWWOjlHr6/PGMP5hw6ILxnSiS3Tpnl+NYH28aoqWsExcu79
s8rYvct2kLGG+pK+d+BfG0tqU0t8tL7tkiq+2zmrdvhrlbmsxtCWX11FezxQ
Er9XdeLvIQNyf/3YTm3HRmur9dn6bm3sPfy+dZMvUIOqXQfW0abaUG3pzI2/
NB7W1o1g/yM7eV7HcknzEZ28H8dmKfieTt6p7/bmKlrCvIax4Ef0T2snZlBL
fgh/baxsvr+VnIm5k+PgeVqJ0fvD37RzrHr7xHY0iFrpb1W0yUnt+G/t0Xe0
T+P5Xm5Hv69doqHVq0PpP4z7O6Od+WlOxdzK6e34WnM+5n7e7kvu8m5+e0/9
xPleayeeX6dkMz54vZ0+c/jm8o15jHfN2Zu7NyYyNlID6muvqaIN1Vxq+Wur
aDE1qdp0ajN+xXnVnWfy2cw7qU38rUPf0Z34Yn3yBZ08o/r7lebZP2snvnmX
3z6n/VadeO1b2nOz71ftjL1r5gRzWtzvb6to3hkla1ytd2+Vta+9VNveVsXW
WgOxFqJmfrFEM6ud1QAvlGgAtYA52ufhEYOidbWJ2tMJjb1Vczqfhg3KfNPm
3kf/8xy/LX+vhJ8siVmNXY1R7y3Jz0/sjuZTK17PM7cHZEw+6DQ1jCo1m5cc
655oSfdXK76gjaP/Km0U/FxfcpNXqLdK9OmudfShtZNZOfcS3ZmTD7cTY9UD
Mr7GXp838cCKjf/Rh8w6qNGg9H8An8D5X6L/xxI9vEOdeoS1iBdd4/RfTf/T
JfGVc90civGz+mlyM15qdWN2Y3dzBneX6OFt69RfrLUYwxvLm2P4Z0mOwVyD
Mf898PASraXm6ud4dqJFZ2U73PiX/Y9p9Mc0+t/vix6xZvMNPLKT2EsNrH50
jBwrNbL6Uo0+DL64inZ/j+13tB/h+M9KfLax0e1VfLlj4FiogdXC+kRjkzuq
+EpjJmOHS6vEUta0rG1ZA3uzpKZmbc2a11vwqE5iP22U8fKccF9XbJTxpTU0
a2nWnB4qqTlZe7Jm9WBJzcpcqDZV26qGfaCd+FZtawxoLHgx/Aj8jDa5So3u
4ZJ34LuYbkzck/jdWqL3cAh9/+5LbOl6+7QkxjXWHaIe7KSmZy3EmsgbJfGx
ta7B9B/aSQ7RXKI5w9NKalBHNe+nXyc5RHOJ5hhPKqkZWTuyZnRcSU3J2pI1
pf8rqfFY67Hm9MeSmpD6Zlf4hJKa0qhG7/yppOZk7cma0/ElNQU1jzWWI0o0
tVr4hypa25qLtRc1wpElGqTd6De1iTWG3kZzHV6SW9E/aLPerqMp+jf6Tq1h
zaOv0Vh/KNHoatnvq2h3NZja6pEq2swYWG32UpXY2Jz1us36cb17D97Lw1W0
o5pOrfN0Fa13LH8nd0UjqBtcc2rxmeqsRWtqwxr957WsaQ1t9OdRJTWfxZv3
oX5WA5svnVZFG6uRzed+U0U7G4OohWdUiU3UaHMMip5Uu6mx1fZfV9He1pCs
JZlTv7LknVhfeqPKuzLHbq7912qGkhqW+QFzqOZVrPlZ+7NmeCI8usQv6B/6
l8wZ61uvV5lL1nys/ezBb6eX2DTX9kp1bJ1zxHt5s8rcsQZpLdKa0aklc856
22tV5qI1M2tn3vPlJTGWc/vLKrGXNTlrc97DpSU1q06jP39bUvOy9mVMcShs
Daun0au+S2tg1sLU0AeX1Pys/RljHFJSo7BWYY3i0ZKYUe39Y5VY0hqftT7v
+eKSmqC1QWuAF5bElGrxn6rEmst2kusz5/e3vsRsxmpfVYnlnAPOhS+qxFbm
cIwtu+vkdtSYal1zZGpPaybWTsz3PF7iY7Vdc9TxvfpYbdfsdXyvPkRfObSO
b7GmaG3xWH67s6SmaDznNb22PlBfMaSOb9Sna8tG1PH12kBj4bqObTQnaC5x
yTq5Qn2ysV27jq/W52obR9bxxfpwfc/gOr59505yi/oEfcNOncwfbaK2cZdO
fI8+R9+zRSe+UZ/t/ZlTNHc5rE6ucfNOfPm2jXbYpJPra5O1zZt1oiX08fp6
NbLx9kmNfd+yk1ylPtjx2qETba4mV5vvaszRik/UN27fiVZXI6oVrYn4PCvX
qZXsSP+9rWh8tf5undRO1ACuD3PJamn1uLpcn3My/YPq+CJtkrapr879+v3F
2O5okCP47Wi2CV3xB/oFNaf6+twqWtSa3SaN/3qu5PuHhbsTExkbGWOo3Rap
83zW/DZt/J9zyRjGWMacu7HTkXW0vj7V+pcawli/Xx1tYQyj1lq0zvOqedWr
51XRwkfViQ30f/pBNbVaceE646fP9v3OW8eXq1mOh/vX0TL6eN/vPHV8/5zO
93bqfdb99Lnmekqd961PNtfTqeOr9fHmdmau4/vVIGqF8XXmnz5YLTGuzvzT
5zpf5q7ji8+sk7vev1mT5tfU6/s2Y6Qmcj4sU2e+qpmcP8vWmS/WzK2d78lv
fy7xqdrit6r4Wn2utuTVKr7YmrS1aWvM00u+YTigiUe+LqmxW2u3xv5lSQ3a
WrQ16O9LvrlwbnpP3ps1aWvTD+mTSzTCG7TXqKMdtAnavlYdW2HN3tq931B8
VZKDepP2mnVyU+aQXodXr5Nb0qaqHR6rYmv18T7r81V8vzmk1+DV6uSWrEFb
i7YG/VpJzWEf2q9UqUU80Ju5bQ3AWoA1Z2vP1rBfKfGpfl/xQhVf+3Bv1pPr
ylqNNe1tGj3/Ovs+1JvYzxqLtRZtnra0q44tfLA32suai7UXv1GY2sQfzgU1
jb7uuSpa577ezAdrRtaO7u+NXlG3WA/xGxm/lfEbmQ9KanLW5vQJF5TUPK21
PFqlFmqOxDzG//IZg/LcPr9r/I2BqdFaq1UznFtSkzis0dP6Xmuu1l7VEGfr
q+vob+NP41BjqvNYL7MNSKzlODgexqvGrdag1Sd+o3JKyTg4HtZk3xyYb3D8
Fsd47t8lOUxzheZnptNent8eb+d7icPrfKPjtzp+8/NxSQ76wnbWjGvHb4b8
dshvej4q8Yf6ps+raCW/Adqr0feuTb8Z2rPRw5+U5LSGDkp+zlzXONd7Ozlh
c/zmUM2lflel9qYP1hdbE7N+ZM7SXIHx9bd1xsSxMb9szuP7Os9mDsrv2cxb
/6+W0J3vwWbU0fbaVL8nc029wPVWqLPWjKFfhKfUia1do4/BE+qsXd+ZseCK
dd6lmkVt/kQVLeOaM/e6dJ21qA14Dl6ujm1wTav1J9VZ634DZbytTdW2aiPM
9U6sYzu0Cc/Dy9exFe+W2I4F6nwvZU3UWuVSdWqlnkNbs1Cdc6ux1PpPVtFe
foPkt0iuwbNKvnHyWyfrTeeoBTrJnZnntrbrnNGWLFhnLs3WF1tkzsHx8Z3K
Y+u8a9eMtd3F6qwl55C2bfFmbjlntI1jmrnkHDGWWqLO3FHTGds8XkXrWVNd
qJU1YWyqf9U29NaJBawRWxuev07t2JrtK/xZpU4tV5/o3B9eN9/H0P8qvGrd
5N5LtO2zVWITYwDH4sUqsYFj7LdpftPm2FtHMlbWp/s9ZWtQcnXm7MwtauO0
HaPq2D5tpGtlzjq20xhJrf5MldhJH++5Z6vj+9Ww2sqeOtpWDWzs9hT7q42t
UVsbn7VO7VpNqS2epY7W1Ga6dueqY0u1ga690XVs4/8DvYSbPA==
             "]], 
            Polygon3DBox[CompressedData["
1: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
             "]], 
            
            Polygon3DBox[{{3611, 2464, 3380, 1794, 516, 3860}, {4550, 2465, 
             2285, 2284, 2674, 3709}}]}, 
           Annotation[#, "Charting`Private`Tag$143582#1"]& ]]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1: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
X897mtKfgxLP6czU/EU8RtxRMbl6rL8dnjhPmZ06z1Zc1t6Q3Cti7ZmacZ8o
V1YNZGLMoTXWqp2odqb5VS2tOW19ynPXJ+apeqfiftXIB7pHTtYnxh/ljcpN
kqL3Y9Vo04J2tslPJOYQ1WLuXy8xF7ua+38Wnb8UkOfw+xPwdYlzLeVTuyKb
od8Kvhb9O8zLr3lzyysKjnHTkY8Fx3Tx255x/WsfnMKzb6KfwbOruXbGfh66
+dFHyVd1DN5fygWWg99WrCl6bajf7yjPiTUZ1WZUq1ycd67US/ssroNOwXtH
ucy1wX7sGLUDXgc+Flyb9fQh7Q1jX3aL60rrayE2z4m7ii/F+qTqlLeifxn9
iegvi7Ua1WzuKLimtBS5seA5fQVZveTcXvWKl6Ne9ydmjvGqwY7PzCdUax2X
mQeo/nYWug/FsxLXeYby3OHIO+nDJvko2pyQmR+oHnsI33IR/TxG/C11Py9X
LI57UHvxWPQb0E9GfzvtvAI+mXYWgV8AHwc+BpuXxGkT73/5gdHI6bRbjfc3
4JtuCW7nBOy7pZ5HzadysKkF52QT4v5V/enjxDxN63kqzz6ed/54OfixvGuq
V4DX5p1j7qn8iT5vFces4n2u+CaeLV8hTjUosT//JDWnFLfUXK4JXufnYPNE
cH2ppb4xcb7/Wep49BHySL5lbXDdqQU2VyeuV2xLXRdSDVy5+djMXE310gnI
9eg/xeYqbJ7Muz52UOr+D0sc0/QuvfPm4PE8Xvw/9X65C/3sornESuRsbJ7O
u8ai753BmB1axbFC/VG/6lZ4bf8/dmM/M+88epxql3nXn8cX7TuGZn6H3vU5
bdyFzVvib+IwwfFX+fWV4Cfyro8NB6/IO99vE1yjU85+PM9vBE9RPpc5J1St
rB79eIp+PoF8HNmP965FLuXZN7A/lWfrpW5/eOI+9Yg+fHBm3qb60snYvI7N
9MT9F49SjjI9c/7QDJsZmeN0c/CVmfOrc1TnCeYGXbGflpmvq27/XjDPV/47
M7OvbwmeVHS9WXlNi1gPV138isz8vmmsayXou2E7NXPuoXr+puCaaifVYYJr
s53BR1X42xXTF6N/lfc2KDoOicspLh2MzYXIo5F3BH/vKUXXrFQ7ag2uz70L
ys2FakduKY55Qup9OpX2Dky9X4aIw/BsmeIezz7EN4zFflXBfkBzfn9mDinO
+TG/jyp5X9XD/kjto3Jzs7qp9+NQbB8pWP+oeBCyZ7n37W3Ba+Ak7ZHM8bIV
z07OXNvSGcrV2DyVdw12AHh53jWlueBn8q5HbQw+u2mvvZ85B1ONaNfU9eTz
6cPozDnA/881gmu/qlmJW3eO4zkycw1C5xq3Ry60OPpX1Zw1x5dGniO+Mylz
7qQzFN2fHW3GZObcyq9HZa596Nzkqsz5eQvwK8HnRx2KrvWp5tkR/AL4F3F7
8PPB9eq2yjtjzfxcnl0XXPdup/2VOc9RnfbJ4Np1K/RzYm2tLfrngmvsbTRu
sXbdDv3sWHNrUxnzhphvLAuOp6dh3yD1vrsy8XqTn1vGc49Ge+UYUzLnijqT
mhDsP7UeZsWzrdaVzjV6xrxGdX754Pol59TyV/JbOl9cEn3XA7TzAe00Bp+J
7WbwXPrwfMHxaB3yoWDOcDY2dwf7T9XKlB8Iy6feh/59cCPxlrg3tUfvD27z
TPSNU79rXuJaj/hAR+RLkW+pptqmYL7TFrki1oSbKF5nzmNVq38wOLaeVXSu
Io4krnRoaj88SrEiuL6kM4I/M/tB2e8An5o6vvw3c44kv/pP5jloCi4vOX5r
X+9SMpfS2ti5ZP6k+dX+7hW5ym+Z466+vW3sfzvk75ljtr7978y+UmNYm3Y2
Jz4f/Cuzj9A3/pE59msudKYonqqzy8/R19Y8glcH88lm4H8zczLhspLHV2vy
4NRxbQTvOBz8LHgMuHFwPVZngguC61eqf54ZXJ/UGeKc4NpXJ/TTgus2WsPn
BJ876Ky2eTxz0bnw/Hh20x6becG5mGqw+j7V2cRLdYasc0ado+rMSb5Ca/Xz
YO6hc43PgnPAHkX7efHKh2l7cnCdR3vnumCer/rtNcH8v2uMZfK98sFTgmsp
2o+zgutXOi/QeY/OfeRTVkQ/r5rwyuD8QvXkI1LzxrHK90vOH3anL9uxqaF8
BLx3yXm5+PlhqX3j6MSxQ/5TZz3bgmtr3cW3g8+VdLbeNPgcqhTji9aO/NeM
4NqUxlA8QbUh1Q6nB9ev5IvOAo/L+wx3Zoz1HdDn6M9piq3oWwefIer/BHZC
3yg1Lwoln7srzp4XXNPQeUSx5PN1xcoqJZ/bKSamJZ8XKlYmJZ/VyWdWlnyu
qTmqKPmcUt+4R8lnhIplytmV++tsd3uMxTov+z641qTz8d1LPjuUT86X7Hda
Rg6jXECcoUdwHUZnJd8F16N0DvJ1cC1X53FZyfUFzUu/4HNYnYnUjLUYxYee
6BflfS6jfS/ufVXi+oBqKeKRqwvmq2uQywv2uXcXfOatuqB4s84adCZcg3c+
TJuf5T3mC+L5muZCdRjVGZTj6JxL58k14zzIN85JPFficjPFqYJrhuIt18Q9
rn2n8yflcToX/yq4Hq5zxm+Da3Q6Q9yemU+Iw+usXGtSa/ObzLUS8dWfM+9/
xZcfMvsFcZufMq9dcbwv4rmJcqXvM3M+5RQ/Zvan4jlfxrMS5V/KI1YyNo8g
nymYFz2L/CXz/lFe8yv4qNR536DMNUedS64KzknlYwsl57SKv1/HcxnlL6pT
qQ6iOpjOUvW/BrWw/SqeASnv+y4zXxefmR/s3+Qbdy0531a8HhVcgxUH+DG4
Fq3/uxgZXI8VFx0RXAcWF1V/lVeOp6/fZuZVyhP1/weqCcgP/BBc/9SZ3Zjg
M0HxqNHBdV1x1N1KPgsXR/oy+MxC58g1Y/1QdcT/AehLh1I=
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtmmeAFUUWhZ9vRm3tGl9Pz5jFLKKuqAQjQYJIzllAyQaiSs5IEiSDEhRU
kiAmEFAQFQMqhnVNiBjWnLOuWfZ8nv5RUKdvvZ7uqntvnXuqT+gxsPWAfC6X
W6d/ivX/PWW53Mo4l/te+NVCLndaksttU3+wrr0r23zh0UW53FW6dqX6p6o9
pP5A2d+R/W61O9X/Vtf+o9+fLvsj6l+ra+/JVrk8lzusJJe7N8rllpfmcrtl
H6X7Xakxb6i/XmNWaOx3wq/o90dqzEz12+rhjlb/DI3ZLnydxvy3zPY2srVT
u0Ljz5T9MdmHyP6B7MfL3kW2WbrWXfZ/yf6o+tfL/r7sm4VX6+/XVpuDTde2
yxaEv9b4p4QnhFyun37zu+w/qyW6X90iv/86jXlTtnM05laNPVrXZgg30D3+
I/yj7OM1tqfaDbIdpTZd9ktkf1n2SsJbhQcJn625OVR4onBN4edlvzzN5Z4T
Hid8G/On9xmtv/+Q5m+b+odr/CTZa8v+ouyHCd8gXEv4BeGH9fc/xa7nu134
abWp6l+na/vp90do/DT162n8S8yn8I3C9YX/LXyy8F3CVwi/Jfyk/m5f/f3x
ak+pf5buMUb9beo/ov7ZamOFHxXern5F/f4BfEW/f5vfqz2hfqnm4wc9W1e9
3+OyD9O1pbLFGt9CtpN0j33qP6f7zFJ/ttou9Z/QmB0am2jM9/r948KPCR8i
/K3wDuHHhQvC3wkfp3ss0v1b6drrsu1Um6b3by37YNkOSLyWZbr/L+rX0m/6
aHwbXbtWeIPaMPWX6DcnaX0q6J0u19huaifhexo/Lu9rJ5faR/FVfO4o9Y9T
645vqp1Sah/8xxeFK4L1/i8LT9HzLS/z+M6yXZbZt7GGskV6hs8L9hF8BR/A
Fxbq+cbK1lV4jPpnyf5e8D34ezxvB/U7Zs93juzvy95T+EzhK/T3/62/P1n3
XKa/daDuUV/3O0z239SvU3Cst9e1IcK9NH6P8CyNv1PjLy44dtvJfr3stYX7
Eq/C1+E7GnOrxn6ua8/LdqyuzVe/qa69JlvP1PEzU/gO4b9kP77YPjBQ/WPU
5sreWPZXZH9QeJVsNdVmq19BbZ7sTWR/FV9Qe1T9Etm/0d+LZG+g/pHFjl/i
fUSR13gTsa/xzYJ9+rRSzwlzs1m+tlX9NbIv1f0+0/hdut8WXVsl2+O6x079
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
yOXCcbl9Gt/uK1wq/BicS/ZLhIvL7bP4bl3h/YS3w9HIpcJ54XsLzkXVhX/D
Hwvm/hcJ/yW8qWCuXkP4b+GDtd6Dhc/Ueh+t3/eRD9XR30ds6xuZI8AVyoO5
X7fIesSlsl+u/gC1i4X3UQ+rv1L3G6r+NPVvlb/OjVwrt9D4edSBapOF56pN
UL9cf3O+7n1cprfA2clnBwXvB801ZrBsTam51V8TuVabKXyX+vMSP+8bev4j
dK+5iZ/ndeHDy71HsVcN1P3Kyl2jkLsqB9cu1GxwpX8F13Ls4ezlZwTXuvcV
vDecK/x7mWsY9oZqwbUNugv6CzX2lOAai9rrzODai5xJ7qwaXNvAAeGCJcHc
nJqH3H9WcC00MbEWx5wwN9SE7B1nB9eKHwnn0faE03JzZGq5z2NzZzgyufSL
2Nz5zBLxYM3Ta/pNWuKcgfbUOziXwNGpnffF5u4zgrURcvapsfMC+QFNomJs
Dkxt8XdsbnxGideaNS9Vf3Hi9V2n351S7pqd2u2XLJ/cFKzFoKlWil1Twe3/
F7v2R/97KXg+ByXWN3cJN0TTFZ4VXCvAefBZcibaWq/gXEpMLY8dk8RatVJz
w1lZ/X6d8t2feedwcvmI1FwCjgPXGZma66BpoW0NF96/yJwD7oE+d6P+1vV5
6ynHljuXklPRlyoInyV8rfDk1D4zN3bM40sHJX6XDmpD0aoTazVoZGhlx+n3
1WOvKXrWtam5C3sUexWaBNw6CuZbaBxoIb/G1j5O0W/W5l2zUbuxB6MNvxt7
b0Yjofb4PrZ2Qo1LLfZtbC2Gmoxn/zB2rcaeQX74IPZeAme7Rvid2FyOGoa5
+Dh2bXNOaq16q56vUrlrdrjel7FreWoatN2PYtc6leUzoyPrIcuCOQDa0dux
uQEaEbXQd7G1I/j+3OA1+aRgDQiu8VVsbYi4IX56qS0I1s8+DtaYnyX2qWOK
7BPUDUvVhhdZ40J3pcZl/zsgeP6oCakN9w+ujdGoPwrWBNGu0agrFttn8V04
wAfBe+DSjO9/QuwK7y5Yg/8wmDOgzfPOvPuqLGbQANEC8Xl8v5HmpqvGHq1r
jdWvr3adxjYXviTLz/CfsuDaDn3jneD9Hu2rcqYXHhqszaK5ovU2jK3FPhus
LTdSGxucg8nFQ4K1cDTsY9FOg7Vtci65Fw1kLXuB1q+9/h+kMYuCeTx8Hn33
D/Ubyb4scn2SlFgDPwbtOlgbx/+oD7+Jrb3cFVsrhDOhezLXcEU4402x5w7u
BIcaG/uM5h7d/9ASn91Qcxxe4pqEWuSt4Llqpvam+i8Ga/et1CYF1y2MRV+h
/mlLraf73a/2W2xNhpwzOONP/bMciaaMdoYGiBbYI7Z2DYciZ8J30bo2x9YO
4XDUfcw784/+hA6Fr8Dd4HDo5pwJVECbDj4reFv/3xf5PIpzKfgBZwt9grkw
+Way+i11LSTW4A9Tv19w/qKGPFy4f3BteZTGjw/WnNGeOUM6ilwbfLZ0pOzj
gjV2tHZqvkPVvyY4P1ZNvT8wB8wF++sRwgOCa8NqqfMzc8bcoXmit3wSW58a
A68p9hnVzmyPwO/x/42Ja7py9OPgfIuGin70aWy9A82KeuPP2HpDPc1J78j3
5N5oeOgXP8TWh9Cwl0f2PfS/xvp/fWT9Dp9h/0Rr+izjw+xv1D9/xdYr0LTQ
D36KrV+h2R/N2Uywls/+hT7xc2ytEM0PveTHONMCSxyn+CC+iE/hW6wpazs6
da1PTc387Q32zdZqi4PPDDk7PCzz76sic7PdzBHcKDL3Yn9nn+8cOZ7L8Tf1
V0TeW9hjVqq/IPHeiW6wTHNTGz6l562g8Rer31qti/ARwm3U7x6Z67FePTjr
QhuG33PmFfkaNua/Z+Rn4tnexGci7wHsBTzfK/rbnSLnGp6RZ10QmRtyprIw
cr5FmykO1nvgS9T3IbgeRSOjvjskuB5G06PejYPrTzQd6rU0uL5FA6TePjhY
zyDfwk/GRN570Aypt0qD63k0P+qnJLh+R8OjXi4K1o/Q4KhPC8H1OZof9f5+
wXoZmiD6QD5YL0NTpZ7PBetFL3FGqL9frPd9Gd4Ueb/kTGBY5DMctKDmwWc7
8FFq89ODtSZyDLkGjWVW6hxOTkGDm0nspc4n5BX2om6p8yV5k72nR+p8Sl5l
L6Mm5uzo4uBaGQ0A7eT8YG0AnyNOiBd8kXoK7e2C4LMJ6hHOzuoE19bwXWrt
KsHaAZoW/KpLsNaFJge/6hqs1VEjcxbWM7h2pl7ibL1hsNaNhoNW1SBY2+HM
nVq5ffBZPBoWtXjbYG2LMzy0vxbBZ3vUc/CnlsFaGJohZ/+XBmuJ1K/U0h2C
vy2gpudsvUcwP+QbAWr5dsHfDpBDyCXsZ2jXaEqcfXYL1pqoJ4nny4P52qjU
djQ98i8cEf67NzZ3vD7186MZ8P7UpI9k+hq1KjUpuYF7cm9qmF2xcy65lxqR
8+ok00OoCZ6MfX5NrUAME8vsz23V3xPML+AU7IddI+cKajpqOzgSXKVZxp3m
RI51ajhquT6p/QMNdmXG1eE/vfKuf9AENsWuUdAKLkxcz6OxUY+fn7g+RWOj
/r8gcX2Fhkb9Xztxfc+ZEvVZzcT1K2ds1Ge1EtevnGlRX5Un5q81Mn56UeLz
Ys7I0ANqJK7/OUOjnssr51Uqdr1Crdpb7/Nu3poh/tU3tX9zxoL/wbngXtSg
TSLX+PdkehG1PzX+6tgaBbU/mgFcHZ/D96j5+V4Fn8a3qfHvja1BUPujKayK
raGgNVCj3xxbM6B2R3NZHFtzQIuhZr8ltiZBLY8GsSa2JoM2gcbBs/MOxCp7
DPsHHIe95zK9c1xkH8PX2DOpn6n72UvRWB7M9DW0F/YE9gY4Z53IGs/GTH8i
duAc8HlqHrgIms282JoFWg7+Bvei5oHToknMia1ZoFVMj7zXsafMiFzjU+uz
B7WMvGfiqw0i76V8f0F9Uln3OKbc+yVrCf+Bz12cWK/iTJF6ulFiPYY5Y+4u
TTy3zBFz1TDxXDLnzH2zxLXjsth6StPEehAaOnpL48RrsSi2/vR85G8/yOkv
wNVlT4scg8RiE+GP815D1rJ5Yr2HGpVatQUcTPj22PpO28S+hQ/hS+0S+wo+
h++dmFg/6JTV38w/704MUoucILwk7zNw6sGTEuvHnbP6vkvi3PDPNy7Uqon1
DjRitOJWiX0Zn8Q32yeul/FZfLeN8E95+xy+1zKx7+Lj+HrrxL5ITBAbzBFz
xRqg3XWjvilyDiOXdRIuKnLOIHfUTaxvodGil8BBqTdPi81N4azUs6fH5rK7
g3MbfJX6pY7sb+R9po5eUj9x7Y3P4Xv1EvseZ9LoN/sn/n4ELQL9qDgxt0f7
QD86O7E+xBkaZ2nnJNZ3OGPjrK1KYj2JM3fO3qsm1nPQyNHKGyTOL8QEsUF9
xfzPC9Z3OibOlcQcsXdJ4thBM0A76JA4Fok5Yu+8xPoTZwDoqdWFn8n7jIGz
hkJi7aBatr/wPQZ6EJoC2kK1xHoSZw6cPZybWJ9C40evxQfxRXwU7XFn5NqF
GobvIJhz5p41mZR6TVgbavYbUscIsQIngBtQ81KrU/tQCxcl/paEmns1sZK4
fudMCD3h1cT8cW+Rv7e7MnXtzjcu8KH+qfdvvsFj/4dT/nO2EJtr5hN/64Im
twpfSc0f+OaP/fua1PHGGRh8gfpjbfBv0K6WJOZifHPH9zdlaDR5n2mgn3Ce
safIGiNaI38fbss1zjeuSs2n+KYI/sE3WWiE7I8PJPYpfGtk9ns0JP422gPa
Et8b8u7kZLRNfBLfHJXhQan5IWec8Kf+kbk2z4MWOzD1/s2ZInyL78dYG76J
5NvI0sR6DGcu6Ct8o4T+MC9bj6tTrx1rCF8aljrX43/Um+Rcci/1MN8/DU3N
xziTQE+cmJqLkF/QD8am5lN880S9RE4lt5JT0a7RnNHxqEmoTcan1vP4Rm5H
5i/zMn7M2gxOze8404NvjUvNH/nGDj2B9UdbhuOznmjQUzUvc7L9fr/EawEH
gAtMSK2H8s0e+saY1Psj31hSDw9Jzf84o0FfHJB6LyffwRfRoMoyLQlt6v8/
4vWP
             "]], 
            Polygon3DBox[CompressedData["
1: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
w5qwV9kt9l/2N5998ME=
             "]], 
            
            Polygon3DBox[{{4136, 3093, 3297, 4750, 3965, 3966}, {4106, 3032, 
             3400, 2199, 1056, 4349}}]}, 
           Annotation[#, "Charting`Private`Tag$143582#2"]& ]]}, {}, {
         EdgeForm[], 
         Directive[
          GrayLevel[1], Lighting -> {{"Ambient", 
             GrayLevel[0.8]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
VD2u2TG2mZnP7ymZdQP1/GbMs2p93mcEz/hPzVz3SGZZeLrW8tojdCDr/0es
dQ7ZVOksfnjmszXjf3uXWe6Wiy5R/fjQL8+HXKIDr656/y8SvbLq/byg6jtq
pkpbleNqrVs5AwcGj7w+F/vIfv6WWab/q7O5fd5rxVpwtp4P+f8k5J41mRc6
bI7499ExKl1VDo597yY6vuw1Qu/NVhku/iFkIO/xMbbVcU4YD/f5XbF3P2k8
19VaV6yINuz3rJCVDtH2CZUjaqy3rgldN1BlpMqRqv+m1t9lfR/P3PZ20Tbq
9yzJ2HTJ2ByN6RH6ZWxau+vFX1h1H09GP5dn1hkjRHtH/11DZm+I8azVs2Gi
v6nvcZnfuyPzPtwe8706xs04zsxbP1Hfocl26VUaz4f1thO6ir5Tb3npUu/7
Cz27qmzdi969g7Oub9wqOkZ0sspQ1k9jGKl223OGOZuqHyL+R9UPzbvNzpyV
uE+5V39Qm2tV93ujx3lj7MUrmdf1Z9X3ynyHX161rT4h7IRG2WadxGei8+vs
j98je2Bn2VGJfv+Q2obAlpgverzebyMddD1+qkon6aLrRO9DplX/k+ijKpeL
/7lsuwT75N3U9iL2yb2id6S2D9eKXp7ahnxV9H19c5r4z1PbK9gtC1PrFvzv
feUILVGbqapfod/tVT9cdD/V90xt21GP/YGcc09iZ0wMHn2KXv1edS/gTzIn
vXuXHJej9O5I/b6t4jXB1wNzAE+4P7Udjz2PX3lr2PP4qtiirNlx6mdsC2MF
YAb4zvjR4AQ3hf1M/8jalVqfH8q26bHtN9c8Eo1tI43tR9UfWLXO/LXRtsQ5
emcYOie1fcz6HKs2W3AfiX6tdx5Wm3Fl+w/4Efi86Eh0JWd0HfV1bWKfERsP
/xPsZb0a8/ih3cMuxT59W2VUYp8I+/T+sFHxs6nH174v6lGJ2Jb4V/hW+FCj
E/v769a4Hh/yctERie3hao1t2uU5f4u+ZuHTSQfdJX6aaElrd7f4marvo3Gv
UNtazeMc8SvFj69Y56H78ItW6fcLeu+Rqn3MweFfvFeyD7JEdLbKTaqbU/J9
BabxRc74DTx4Bz41fuvBotNTr9NXqXEj8COwD3xa2rQVPy31vL8QnZ3Yf2de
A6oew2nYVKl9/9dS+z2DYmw40/CYveAi4CP4M82c+cS4wZzE7zJ/cBHwETCy
Oyr2E8Eu5lSMn4CjLKgYAwELeTz0JPpyTOhz9PqwJsvLlrJRh2l8HbRZR4te
1+R7b5DkrVF64Ce1b9Vgv5K7jzvwQb13Z611Wgd9Yzp7pndbi79D3/1a3y81
WA5/xu8rW7//wr2k31vg7+r59+JXJtYz6Ez04fyybcXfxL9etl79j/gF4rfS
d14VP1T0CY3jPvGD9d0hKjeo7n7RPUXPV/3FojuXbI8dB/6n720q2kW0pcqF
4v8iOjXzXcyd3NDg+/5blf1LHvPh9Jv5fuGe2UW/z+aeF52S+e7mDh+qcpPq
RsV42mo9jxSdlNrXfTH1Ot+iNg+INutb/cRvLbpeozG001X/N9X1U58DRL/K
rBcGqr5Fg/GY3uqnrsH7/pv4m8qe4ytl+3L7x7fAW3pzBuuNG6zU8+2015eo
vk34yFs0GXcFf11ZsX5AT0wIWwWbZR9969SS9+LzimUS2Ty3YizlG9E7K8aL
wJcurBiPAoO6JTAH8D18+UMS6+sd1OdX6jMVHRv3IPdh/4rvoDcqxnyQec5N
v/B5X69Yb4NhgmWy5u21zkdVjSON1hg31RwHxn0/VHUn6zvfie9V8pqjS99Q
u0T8AtVtLvql+txBMr9No2Ua2ebeRh7aqU1H0U8z22QXif6a2X74i/rfGj9X
ba8TPV7lTvEPiu6uMT2LT6rxvKn2R4nfsGrZO7jWvtUrmtu/0QPaox30zkLV
9xTdrmTf+AjRNYG/gcNdkRgLYC2GB4+e4Z4E5yoF3jUu+HnqX1dNbpHO29jE
mNfawL74zbMDU+OMc+KefyTqjwwsAkxiaWrs+YO4w58L+wGcBgwOrKZnYClg
KhOiDXjgZ/o9JTEud3RqnOjb1JjSxMR90sfU6GdczAVcC1kGX9PU/8T0wKbq
YszggqtT2wu0AZdZkHre79RZ73IHgDFip4HT79PseYFHzw35WhJ6dVHq8S5O
/R2+Bw62V/B1cT+CNc9OjfM9nRjrK9c5HtEguqDOd9/swMpoQ59TY61Yo3dS
9/eu/iyMvWE8Jwe+BM70XWqcDhuJ+U2LdTi76vuqt2hPyX43bdY2tb4j3k6M
GR2SGqMdI7pJozEmztSXqc8Xth62E+eXczy5Yhz4LtGlie2W9RPfd5zlz9Xu
ysSY7HfsUWp6hOgzFfMDsIHZz3h3fNzRUwMb537HfhhYcX9dmnzfto77l2+9
n9ieXpl6bPM0zo00/lMTn/1PUvuqy0PGJoYcNtcZi25Z5wK/Tp0xRfBWcEUw
P+QQ3O+VqCdOQX/4wGnIKs8+Tf2tyYlx0W8Snz3O3ZMl43rjS7ZNvvIV/qft
h40B3jlW75ySeP03bjROip5kPJPju/vEd/G7nw+bE9vz7Fgf1ql1jTFDbBK+
eVliPHFYxK2eCmzwitAD6PC3wB2bravfQKaabRuMF39Us3UNOgc89tfAeMF6
wdXpZ0rqOwtZW6q5fBA4Knjqe4H5g/3f0cL2HHb7uxXL/1jmoX19SXUn6lsv
iF6SGC/FJnkWHdDsfT495Ir7iXuKWBvyA4/cvBWxFWIsj2L/JcZFsZeJE4Cx
HhA8dxiyiYzyDnVXRf2bETMidgQuSrzpsdT3ErYU8+c8gt3jpyyMsWHjfRf9
omu6hfzTP3vA/mLHvqZ+n9H6Pazz+H7FsTlidNMiBkQsCJv31Gj/tb6xjLOQ
GtPGVsZOHh089jdr8GGcoz8i1kPM54OoZ324q4lDgNlyrolHHCDaVGM9sCJs
VmxX6tGN4Pv4U6sTx3ja6tlGNeaxLVaHXj0otZ1NH8QBsemWxniaazwOxrAx
MYfEck/8anbI4YySY2QzwUgrPt/oLe6ZxTHm8wPfXh0xK/wHbGiwZ/yTT8Oe
pq5bah+FenBpbJB5wVOIy7DWrWr8Dfb714i7EX/je4uinr1dGHoNPcO79E88
CVycGNzPFe9/20bfocRa5sf5mBlzZI3nxDqPjPHz/pCoZ27Y9dxB2Pm75x1T
AEOozxvrPlO6e4+87WJwhzlgsXnr8y9kM/wh2hJ7Unwf8U1VY9Zg12tqbZNg
q5ar9m8nBv7eN7PN04A9qTJKdXtVHQMFw38NHEltxuAXVo1RPxw4dWf97i/+
76JTAiOi/tXAssC5lsY4sW/AjbGX1qsaBxsdbcDlwJnqsIVbGk/EHgPPAVes
qH5z1c+rt58LzlGv9bgSrKqlYzZrVd+lpfFssPlOLY19YHeBhYCJXCXarqV9
kiFNxgnnqa5F1fgH+NIZtcYDwRRLqq+q7KX65qpx+PsDiwf/AZtpVP3z4seK
X7dqrBUstZX4YtV4HnGEgTq4Q4ru/2rx1xTtSxwS/jt+/CDVDy0aNx4sfljR
+zQ0sx+xn9oMV+mis3JJ1bqUWE6n8HPxhTcU31vvDij4W2AE/Qv2Dc7i+0XL
yomq+2fRcQHGdV6Mje+fH2PAL1tfen2DBuM+3DtV0SuIqxSN3/27YIwCrOLQ
qnHablVjO+AM4A2XqM1lRa/RjhFbIcZyser/XbRs/a52l4p/WvQi1f8rxgmW
gR3+j9CZxP+Iw3O/EFcjbg++yp4UAl8C41pT9n1EfJk487WZfaXttf+HVR2L
OUD011rPlfN1CXhb3n7jWaL3qrwpfkZgn8QgpokOj9/g2zvnjXdfmDmmsCwz
/rpL3pjn/LyxVOJKxGV2zds3IIZNzGxFZhlDbpHf28r2R4gnctY588Qc8LWn
qK5zS/u7e7KftcaQGWO+6vO4m+ovyxwrIMaDLgCHPCewyL6iZwc/PPwR/JKr
VLqJ361kH4Q12KNqjP3tiKFwRmeHzrk9+gXbXBPrdSyynTf+S/2F+OG1jqXe
E/gkOCVj5CwRz3oj+N1ijH1jbMRw0C1gsnyfcRDLu0vjO1e0h2jPZueXkLcz
RuWOkjFG8H2w7e8bjau/lf9//B4e7J4Y5fTQbx/HHrO/YN0zQo/hh02KNsSO
0GXEG1gX1ucNzaWr+H0lryeITs8cP6uvOi4MfjxCdGHo29OQCz07UO1PYq9U
dpfcnSy6U+APo0r+1qxY84HBo49Oi/jZrCx0c97rhD6eEmNGp74a80W3dSwa
I+5RNKYMrjky79jnVqHj0fXkuozIO1a6ZZyDF+MsgOtMj71Ax08L+X9I476t
ZFyRc91e3+hZte5/PW/dNyn6Zw3H6tkDJWPCYNPnFKyX0YW9Qx+eK3p60bqD
9Xkm7hdi3NgN5GrhRxDfJ6dpb/XRuWhfekvR/Qo+n+RCkBNFztT+qvtHwfPj
mycU/d2+BcfPWJOzxfcs+o4gB4NcLPLFyM0gN4kcJWxvsN968f3Yw6JjqeRL
kKNFPlcf1R9f9F2ytWi3gvUIfhO4DfjNjqrbtuhzcgj7X/Be3sz9UbK/lm+0
7dee3Cg930XtHqe9+IMLvqe3Ud1BBd9JjGXzGA+Y9WYxr06iexW8n38X3VS/
b8lb3/eOO4I8AezzFnyr6LnRz54Fyw9ye1bBMkSfxNWPK1o2zxV/svgt1eam
Jvt7xFyOUl25ENhIwe1oc4rq94x77XjV7RX9d21pH6Bjk79zZMxlotbi2pLx
kB5qv3/R9sRJ4g8SP5V1a3J+ErkrO7Q0bkhOUS+16V60jjlB/AFFnylwFuwR
9MNpBY+VcXLHcNdM5L5VXXPBd8kTqp9XMuaDLcQdx123f9V3yguZ72bu6C/F
jxP/csnYJrYBdw13Tre4H4kfYbNx73P/P4ONQe5I1Vh/U8H3KXcV/fMd4jLf
x32xG7pVbZ4RfZp39G4fxqIxr1Mw/thXfK+4owc0G9sl1ryLnu8a8n9ms/0l
YgpTSrbVp4q+Hbg3+PeMinPDyBFbVrGP9k/ks84YdKHOsgrGfXXFWDnvzg08
Cn8Wv3Z5yXkvn5RsM2PHk4M2oWR86jkwvjrn0dXX2Zchz4S8pBdLtqFfKtnn
xc8lR2ZVyVjEatH74n7nnsd2OCvsB3wrMA2wDfxEfMPNsJeQu7BJ+oieGnYI
NtcpIZ/4g8QQiSWCo7bVuFqLDijaXsBuwH7pE+9iE/WNNcfeOSf6J9YAzk++
XsuC94k9IkdgQPTTJ3wncPG/qr5/6BBs3j/3uWw/BZ+HHL0nAlsAY9hBbQ8r
WPcfXrSsI+c7i+9e8P1AbstORdshRxRt/2H7HSq6XdH3NGd6xzjXO6l++6Lv
86M5IwXr9VMjBkYu3xnN9lHBZ9Cdfwv9eUqzfX7yAI/Ve8cUfG/8Vc8PL9gn
GRk2LbbtAWGPEZdcE/YbOTH4g/iMRfIEK5Yf8qfeKRmXfhcAr8G4ED4y8occ
klvVo9m5v1MCD19BfoHoonj3nXh3GbpF9MWKc2LJqyXfiTxSsAl8dvxxsKWf
I1ftF+7qZmOynTX3SRXnx5JLu6JiPJF4zgOZY6yAsntWfcdiM/xFa7BVwXYY
OSxZ0TYPGBe5s2A4GzR6nPTP+VinxpjSvRH/JQ5MTKm2xr4rOZ34qeA4K0vG
Ab4oOYezUONYwEERpyBeMSLueewVfFJib+BoU8u+E24v+71ijfv6Wu+0wLcq
OR8UDB/8CJuW3BVwamJwLWucA7mJ5lSNe2Fw5M08mjk/izwi4txz64xXgyMt
Dlz0ffGb1hlH6lDnuA/xq4Z6255zwv4E8wSzKav+x9RxsEq9zxnxwuU55xzj
mxNHIy7J2NgOfG2AuFJgG2AczKek9l9wvurchrxhYm3tYzyMi1xgchWw9QdH
/Ig40urMOUzvZ7b3FuTtX7eKuBgxF2woeGyhEZFvgK0+qGp7Z1Lm+A2+2qrM
uVWsLflB+JP4lR9m9sPHxD2Fzzk27iDim+QrdY8cCPAD8gHAEoj385sYGLGw
JzPnLoAlkEtAbIV8qDa6c5Zm9m3ey5xTRV4JeSPE1YivETshp4lcF3wYZACf
5uTIYyCfgTwQfAJ8E/wC8pKIl/Fsn5LlpXPJcWfykMjP6R3xMuJmG+cdV+oW
9jRySv4Y+YP4V+S5XB7xL+Jg5Ozghx0WeU7kO5F7M6/s+Av5SMTAiIURy8cW
7hE2Bvm0xO27NzvG2K7GMXtkDtkDD70i8MRvIxYGLnhCs3H3tjXGCJE/5BDs
ktwj5vRDo+3wBWH/I1/ta5wfwB24fo2xIO63DWqMBREn3aTG/2tA7h7+I7qa
fKmNQh/S38Lok+fzo82gaI+vRgwF7JM8066Rc0IODD7o2jizf8vbruAZ/ia5
PcRg0QP4xvicM8P3wWaqjXfZ6+WRv0ReCmdidZwLbDL2Hr+QQo7On/lPwSMP
fAtdhPyBSYFNfZIZs1oT7ZGdr6P9hBhDu+DnxHjIpyEOwEFN640TE4snl2l5
nAfy3T4POeMOWxL+EX7e++HLkNeOLUGccXzksJHLRrwPe+arimMY4LxzAmMk
H4IYSes6Y7kb1jlfEtlCrp6K/vHL8LPeCz9oevD4bovKxvj+KPt9+tlIdDOV
jshVnfOJOL/k6oyMdcO3HBzfAofiu+RIkTP0VswR/2tiyAm6CFkC+yPfBb0H
nst9SY44ORGzM2OI2E3YseQAcL5vLNtnwN/H758Q+ZPkUeIfIN9/+rZxNtEF
Q/LG7q4MmUQe0dvYFviyW8X4GTs2w5MxN7CPiyJ++hnjUf/bFuzzY49sFDbJ
2Zl1ADrq1cw20neiexTtJyAj4IlzYl74ZNhV2FSVgu8n7qZ7I/5LHJhcM9aa
HJjrMute9DmyemacDfIhWau29cYNmfvczHc9d8H1mbHU72L8i0OXolObiL8V
jHMge+AOy0LGbw05vzt0G9gR2CLrw72JjbZ7wevWNWyJPQOz5cyAfX2TGRO6
RnQ9td24aLyVvEPO08OZ/S38Ovbr5dDJ/8v3goIrkgeJHgVTJf+e9eid+czN
jnNXzDtPDywFnBO5IB+SeBY5WuRqvZg5D/DrzPY5djF5f69lzjMkJ3FJ3Jvc
n5xX8A3+R+GamMvKzDgsMgPu8U3oFNZqw4LzoLgvR0WcnXg7ebqdQp9gZ+JL
kbuHT3xW5Mris1bCJyUuukfB8sk8d4o95RyBGaEr9o68R/IfWWcwefLQ8cn7
x1kGV9glMI3rQx64r0cFtrNzxPqZ42lxXyNL5GjOD7njjM+OdSAPk3lxB5JD
TR4y9+jH2FMl+6q7kjMLZlKwXdWlakxv86rXGVnirGSBda6M8wIuSKzg5czY
NzmAYFNgQzMy58cit+jBSt75BrxDrg85P+QKsr/sP/mw5MCOinPycYwTLPQI
9blxweMBo/wTT82cy0/eAntMDh76ibyT5sDbiV+Q64vNg94mvxc5QZ+PCGzt
X2X7HGcUrENeDjsTe/P/ACNWjjI=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmmW0XUXShs/NlX1ycu+RG9xDCCEJEILbwOAQ3N2ChuDuEiD4AIME1yAh
ENwGJ9hgg7sMgwZ3l+958u61vh+1TtXuPr17t1S99XYPGLXXBnv2qVQqbe2V
Sge/u3ZWKnsi4zDG8uyM3kplw1ql8i1l+9YrlZe6K5W/UXYkf3q3X6XyVbNS
uZ56z6PPO12l8iLlS1O+F+Wv8myhrkplXdq7gmdPUm8p7O2wp2B/jT0zep1n
b6HfifTwn7n579S2SuUH3nsg7X3C86nIA+jf8b7b0F+g3mDeV29VKn+nrY34
z2TK/k57g2jvOJ4tSL0m+iw8G4B+DrIN9VfBPp/ypVppfzDPF0PuRz+T712b
937E957P925Lnflp4zHK/037j/JsR/p2EbIX+naUr0l7l9LeMuhjaeMd6t6A
3Iy+ck+lsnVRqbyMfQ/2acgX6Hcjd6CvSvmGlB+HfTH2+rxrAeRC2nsMGUnb
C2I/Qfkl2DfRh8vQD6fustOlb2tQ56KO9PFbZCjtzY300HZ/+rQyZZsyPi30
XmQl7OWodyJtXUE7/2hPn+37GrS3Ne2NsH/Ww14Z+zzfjWzP/7fAvs0y9MXQ
h1JnPPahyO20sR3vut9v7M6cOXf3Or/d+e/y1F+uI20cRhvL09d1kRMZ+/kp
H96Vb90N+ZIxPoex/g9yAPpNjhHtr1GO76LWR3an7gHOOfr0XdF9tjn6Zsj7
6B8gM/K+kfxuSRs38P0LMUbDePc6tDcd+tW0eSH65sj8rLEfqdNL/cd5PmS6
fJ9zNwfPBlG+Pu9bnfYfwp6AHNudtvZHnkIfTpvL0v4e2P3R16TuCl0Z27l5
tiL6VrSxE/pdHVkjrpU6+sB++V7XUhf2nNhH0NaqHWlvNPrRyOruN+yjiuyH
S9Cv5X8D6O85rOUuxu5w5H70Ucih6KsjZ6NvwrvXow+P0sbNyGadWYOuvVvc
V9jrYj+CfoPzj70O9k/tebYB9lrYD6NPRHbE3gh7IOUvYu+AvWFXvvVZ7Jno
33r8jmL832Fs64zJI5T9jDTQZ6N8E8pP5lvuQv9PFb+DvTdyPs9OKPL/A6g/
Dn1XZPM+GRPH5qBm/I9+aC6+/4bu+KqhPHvOsUVWRP/d/qOvRP9Wpn/3dmQN
O//6riHo/0Gfm7LlqfNP7HNdI/oPx4k6n/Ku6Vt5t324E/vwIuW7U3cX9KWY
sxPQz26Pv3RNubbOao9/tH/XtaeOdbs7s2Zdq68jPbS/bEfW1J603429DPYW
2B9i70z9TV1P7Vnjn9BeP+wTsS91DdDmhn3iQ/VvM7SyXrbg2d3N7MVRtPF4
R/bkRdQ5lrq/IIeh39gd/z6WsoP0v91ZXydi/4W+Ov9dhTbu74gPGkX7q2E/
iL5S6RtXxX6gIz7ya97Zj99X+O/8zE+zlflwXoZNF3/k3l6SZy+gNyhfAX1j
+jupmbW3MW1O7sgaXKg3/su6Q/n/k4z5nKztD5Gn0B/qzrcYI87pzhpbgOfz
FFl77t1NO7P23cPnUmdX6u/Ls1+7EzuWQI7tSAzZQP+MPaYjY/Ya6/Nm3nUL
8ir76XTkV2LHrdhvoH+KvIB+EvIY+uu1lPmfV9A/x6edgf4s/Tmbb22jT2dh
f4T0Qf+T5z/R3l7Yf6HvRJ1x6P9Gfua/u7Wyv332cT1zsqRxrzNztT/lS9DH
uWhr2/7xlY2uxEL94xKUn1mu7S70ybzjSNoahdyI/gL/ZYgrz2NPpb8ja9H9
Jr9tAtIXfWbmp8paG0H7/Wl/T32U+5D/89rKK9T5jLoNynu7UjbaMecdM1P2
DvIw+pq11H0V+Rx9EepP15X9rx/YmT5uRdlIZHI983UKz3+j/1PQH6SN8W1p
07YfQ85HXwd5HH0Z2pqVNvfpyBq6hWf/qySm34q+LOW7dwb7nET5evRhOr5t
OcpPRL+TOheit3h2F/ojPDvRudKf8a0/NFgj6HMxFguzHpdvlbESGYb+APWX
43116nRRpy/1j+L/4/viKxmoHxvZr+7bRfh/O23OR/m+SAf6q8hk5wZ5ibbq
1BuoL8L+ybGjfBL69c4Rdh/KuyjvRNrQl+uMT3O+nfetW3mmvjh6X/4/hP/e
jtTQn6kFF17hGkVfBzkZfTbaq4n56O8Y38fz0fR//VrqLu+aRx/IuuuinRkr
6d9A6v+Xsq/Qd6X+L8zZ3vRnIv25Hv1hnh9N+TfI8/zvZ57tTvkplF+GfjJz
fgRlD1JvO/7fTR8G6N949l0t43tEOd/f8/99xIKd2dMn8CHf08Z6ncGG+jPn
by76dpr+opY9f3xn1pRr6zdkXGdi86fd2ZMvM+8vFdmrp+u32oMZrkH/iec/
0N6a7k/0KUXWdn/6+Aj6aMZ4BP1ayHFmY33Nf47Sv3Tl+5boSgw1dh5fvtNY
ul9X+vI0378H7W1GXxdnfaxBewdQ/3exEPat3cHHB/HsD/SvkMPQj+rK+L5Z
ZP29TxtvoW9JOw+jr4b8sxZ8dB7/v8rYR3uLdyWGG7vF1E/7XF/YEXxzVDPx
azL6vszHh7SBOq3Nj9DX7gqmE8tNKWOIsWThrszF7Pwu3pln+ti1O5MzmCtc
jr0C9nxdGQsx6X6t4Jd/0fZS9G8Z5qCXsfxOf8vv0tj9qlm/b1FnCexfi8zH
+Fp894iutK0Pn6crPklfZIw3di2NTOr4/xjm73Dkb+gnM2cb0971yAZlLiFG
EhuZU8zE+64pEmOMNffx+yzv7hUToy/cGUx9U4lpni4Sq/T5zxTxUa7dOan/
BPqB9PnNtviYR9G/NIagX4OsVYuvXajEv/rc6+vBdo7Rf9F3oI+bl3jPMtdf
B/oWyL3mMq3oayA3YO+C/Snz9y7vPhN9DtrfqTNYxHWhT9Y3n2IMQn8a4fE0
H1mwF3flP33a8s576vHR+mrX7FPoG3YmBzT3c4z/7E4uslKJCcy9XmvLN/qt
zqFz+a3PqsESS3YFa4opNqf8fspWRc5Efx+hG9OefYD+DnIX+h3I2+hnIL9X
8uzdWvIo8ykxj9hHLLNYV7C8mOYvv69PfN4T6IMpG9MZXzIP/5nIs+G016OP
5cU31zN/xpw90Hd2jNri06bYN/zfJpbj73fsH+y8eWewthj6QMZvXsZ+f+QY
9KX43Y33TEAWKYJpxbbix2ubid8jOoLfV24FQz3cnXgotpoHe0J38OdE6h+J
bNue+Gc8+hj7h/bk9Ieh/xf5vD0YWix9PTIe+xXscWI3+9SR/NR8+BnkWcqf
xt4J/fFm9sE97t1WYuC0WCgGayWmGdvMt0/vzf6SG1inM9jR+Hcn9kvIqq28
w3et1plc/HRkIuMwWKyP/lMjuf+NtHcfdW8px98YYKz4uRHseJP4l/I/GsG+
5nTmdr83gt0bxgbsKchmtL0CcgTtT0DO9n28fzP0q5DTnAfsLdEPl3/AvgHZ
EP1y/r9mkWeWrY1MKjKnzu3nlO9W5Jllg5FRvHtO/Qj6P5BrKdsEuYe65yGr
ow9BDjEfwn5OvkUsVI73Q+3JX1akvFUP1uyHHIi+ff/gTp99Ug9GXJp9tFQ1
2LG3nr3cgxxcD6b8mDW5bDVY0z081FhVzd7WRyyGvmg1vmMr2r+C9jfTJ1PW
QDYt9+N15u717DfX/N3oZ9eDjzfGvgu9Wc9/jT+T6vFRC9D2/NX4LjGxflH/
KFYWX91uboas4tj1jx/yG6ZS3g+ZnvbHuv/rWYOuRXPKJxircdgnmkMiN8ql
YJ9aZA7mR1+A9TmiJz5eX38cz44tMmfO3fSU39Wd/P7Ucv27thfh/0UrmOTQ
WnIQ158x8Yzu7DljZTfPZqB/x1L+YT2YXGy+ON87tDfxbTj6gtX47xrCKyvH
UP999J56sNRxxtd61r+53jHIubT/VjN9a6c/X6K/20yuvF6Ze1/YTK5pfN2+
mT3mXnsB+znsSjO5uTH+z2Y4NnkI+Qi5t/eRr9rDR23bzBw4F67JZ7F3aAZb
TfMJYoNmsObTyI7N+DR926bIw9hjxS9F9ox7R47l8u7gPffnL/pL+nMr9oPY
1zTj++yDffmL8u0pn9OcHvtYOb0ie9i9XGsll3yb+q9jH4Js2R4ft10znNsy
6COKcHH6w63lfpBRzczx4JK7cu5n5H19ed/CjP/97jXmbJf25JbyLeab2kuV
+fORrehr0f5t6LvQ3qJlbj4D9V/D3o6y+ZCDKR+j/zC3R95Ef7IZXu89ZDf0
h92flWCCNvpyHPasYh9kd7Ehddam7qft4VfcM+6dxejzZ+gf8GxoezgEuYSd
i3AZchZyF581w11oy3X8qxluSc5A7kDO0HgtxnyoHP9/tafPY8r+jmxPjOhX
xh8xsmN6Qm/mb0h7OND3mlmzrl05BfnbPxvh5qbn/z83s0fdq/pAfeFF5fq9
rtxPcs7yYvJjctHjm8ndjFnyBW8ga6F/jLztf5HR+Ldu6n+D/rwxlLLFsfvS
3+OayZ9Psk+uD/ER797OPdUqObXu8AlybcZTczv7ZN9+baTtfiXXoS332oP9
bbmeb2lPPnJ8Mxhs4WpyArGZ8f1K2t+sPfF3ajPxX47EeO6ace245y9uJh4Y
SxelvEr5Xc1wg3JSclPuZ7lX18QeZTwf3R5OpVHywWPawxHLFYvXvuV7vymS
a2+Df7oBf7Yna2gwfT+AZ99T9l0RPLda/3AEX/GqgcxvVyO5xRx88zj9n3xV
NTHH2GOMMdaI8f6sJ0YZq15EfpMLQQahX4J8jb63mKaaGGQs2kcMUc2YOXbG
KGOV7/Bd7/FsyWo4D7mP8chrxmvam6URPODcTlsjjMUG9P/yWmJWD2WVRvbS
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
OX25g2OK8Ane+RmrXuTcxfOXq0vMLfaW8xP7X+p4d4Xvlfe1jnW9/7RVEY7Q
9/leucPji/Bl8mveTbkOGcD//8b/J8hpIbNhD/MOlf9BZsUegn0u+sgi/NMV
yAbo2xbhX+Sj9yjCOXh35bAiXMRH1Zxtizcu7csY0++PiviUvj05P3Vteibv
ecNZpT/XZ2xdy50fz4Jcs9uX5yO6aGO85yGeoYjPzYcvq4WTlJuU85X7Ndfy
LMcYaizVp7g33CPGeTG6WF0MIZbQJ7mX3dOTa9nH7mdjrLF2k1pyY2Owsdgz
W7Gm8f/avtmv3k8cVMYbc9wVy3eJLcQsK5V7S6ywapH7Pp5p7FBy5mIt14Rr
45AifOggxvTQInfOvHs2tCfnnfsW4bvkn/ZDX7TIXnINuhan5VvoC6FfiL5w
kbtEcjRLlRjztY7cxxF7et+Dz5iGt7wP8jbfN7wtPueeWs6P9BXOqXP7bS3Y
RDwtrtbP6m+dQ+fSMwjjo3HSswkxtdhaTCg2vLnI3Q39nXcbzOEOL/2buZ14
Rl9pjuD5oZyZ3NnwEp/K8cr1jin5Pdega9Ezkm2KcHKOjWN0WTNjpO0e26cI
5yz3LCcrfynnJffl+Mi3ydHK1a5V4nPxtGerw0o+2sXr3BxQ4uODi5w1u8cG
ov/WzN27kSX+d1+4P5zzzYtwYHJh3sGQjxYzi52HlHy1HL1cvXcI5ae94+Vd
L/lJz+/3LnI2pA/aswimXKlITivW9H6efOkcRe52esfRu45iXu9zflPL3R35
f88BPOP3rF9ORG5kcG9ioXNr7mQMM5aJTcXW8pFy8XLEcsW/NfK+geV9Vzlw
ufDRZf6iz9B3yIfMhr5RkbNCY4CxwDMt50+fcmkzZ2Cehe1S8pvfNzIWc5b3
d81/nAs5W7lbz9Q8W1ui5Bsf7c56d92v0hNOVW5VDCu/7nmD3LM5jrmOObex
xRjj+c8bZbzqX83Zfa2Rs13jiedBIxrhql+k/Rudu0ZihzFEvnCWata7MWbW
anJ+c3/vKE3j4xrJ1c0xzZe/r+VuiHeoPP837hn/vAPxhr64kbP5jyvJ/xdo
JFYaM+Xbehu522NOaz5vTmpuOqASvvLHWuKjcXJJfUg1ubP/H4h+Sm+44zPK
+xHGxGm5rmukmpxX2++RDxETTOMGKG9Uwzl592+VIlyUnIHlYgj5Qvlhz3rl
tOW2zbnMveT4Pd/wPMizBM8wPMt4sDt3Lbct+1TrKfEy7S/Wkxxe3+OZk3xl
v37hch0v/bEYYxo3IkaqhiPRdk7ND+dqJFfyzpf8p5yC3IKcQ4dnJ/3CrXpm
bvwyRxU7X9A3+YWchNyE8UysfGktZ4fiUc/u5fM9yzHHN9cXY4u1PQM0dxYv
Gw/o2rT7eOaQ4jFxmbml68G7IOa33hcSw4vlPSM1lxUPeheCx9P8s3nNxiX+
9W6feO+xttyhMH7Kd5uLfmqMqwefT2kLv2a8HdYb7llf4Nmga9C1+FuRuyni
ZblL7w3dil6vl2NZDXdlTmBuYC5mLi9entAWjtb8VHxvPCwquQ9m/NC/2Kb5
rTm+a+W8vsnPzBfkelku0+6HmYO7d+Twzc3NH65tC8dsPvx/7ikenw==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl1VlsVlUUBeDTwk+h0JFCoa1AC5W2NIgPYIwBh6AITjhhHB60IGJiGKIy
o0gVmQeNgCBCLaMKxigCRREZwqAPIGg0cUKiMjUMAgkRi9/xPqz8Z6+z9tr7
7Hvu/UtrRj0wMj2EMAxS0D8vhD3NQxjcIoSu0EfclBtCGe6bNiFsgT3iwfip
9idIWtsshM24zKwQTmeEcAquY1qbGcI1OSG0s96E+xR2Z4cwm3aC3Kly58hd
KU7RHU0L4RjN71BLdwU3y34+3WQYpGY7XAt+6a1DOMD/BF1bXDPcVfFeOI77
Fzdbblt5L8Fdcu+D6eqOFzfZO6nun/C39VNq9oHx4hK62dYz4St7+3CToK8Z
HHH+VfB6fgg5alzW8xU166FB3ZvljqErVuMWtfqJZ9CultMIP9ibhNuSm8xt
GM0LtHfiupvfYTV7O8ubfNPE9+CzaEpo0uSeljcW95ncDqlkL2qeg5/l/gTH
5I6Mc1Z3o5oHoUpuM5pa61Lr8XTjoECNl/EDrIfCRb41alxwtkNm/BF9T9xQ
3Dln7ML7e7rvIF3uZLl5+iiAuXR1dDPV7kx3gGY/lPNa6re9XjvT1ai/TFwn
9x2/hfhS/Azxqdzk2YzAPY8bgDuKa8TN1Us9rBNX8Cwzpyw9fqyvg2rOxI+T
NyWV3JsV4kozaLBfA8319Cy/Sn33Urea5nHIElfy68ovm98m2iP8ynBFuG20
DdCIa+C5Ts7T6ryozkB+98M08cRUsreV5jUYYb1Lvzthjj6my+/Er7Uaa9S4
FjdF7kS5tXI3R728VvFOexcPtwxhOd0n4u50nWh6w0Tzqxb3kL/Dfgt+2XyL
9NuYm9yTMXRj+T5Id0b+l/rfDvl0xXTXw7fiQ7DAXE7RXIXGzOS9je9vz/gO
yX+LZhFU8nxUXFbgPplZP9wgtQpxD0OXeAdw8zKSZ5nBb3Er7xC/cjUWiOfg
F9tfAj3oHxM/Yz+l3nHcX9CK97i85D61o3kF5ot3whJ+P5rLeX6Z+hsRn6e4
Arby6V2Q9Fwhp8j5V/BbE71if/E9gjrcurzkGxO/NUfhN37N+U2IfuLieG+d
LYiz6d5WdwX/2+nWix/Bd1NjId0bMEu8zezX63m4GmPtzcNdkpOmtwDt/VwU
j5Z/2nqp9TLo6jkuwjXhVorroFv8ZsQ56aFHfD/g/YxkflW8i8UrxWvFl+kv
6atIjY6QYX573bl8uaNpRkFbXFNO8r2tkdsG7pV7NjM5+/8zgEA3JD7jOPN4
N+J3ULwLlprBL/zTPat8XtP0XGzdyv1bHZ+xnkvk/yrnJKvitMTva3PZp25P
Ne/mexOv1XJvtb9R3gaokLtHz8PklsAQvrvbJN/W+I0tU7cUWvKrhllR43y7
+WZnJWeJZyrkvwS3Qc0d8p+0viHOCTrQ7Vf3A54PQQc1uuQk3/z47a+C8/R/
iHvp57BzlUMndf7Bdcd9KG8IXHC0hbw2wED9bcd9AVU0w2kPxW+1+idgPq5e
f+/y76jH8lRyX96D5bGv+F+bSuY8HM7hzsb3QH+F+quWfyYzeVZxpq9mJ/e5
nmYV9JX7hPg2+Fzd/vzuwN0o/g8AWP2x
            "]], 
           
           Polygon3DBox[{{3807, 2745, 3364, 2087, 553, 3885}, {4091, 3026, 
            3251, 1659, 1410, 4428}, {4745, 3240, 3315, 1296, 824, 4228}, {
            4234, 1656, 1407, 3312, 3233, 4742}, {4434, 1669, 1403, 3311, 
            3243, 4746}}]}]}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl1EdwTlEYh/GjfSFI0SJmMMlgxwIbM4mxDxsLZtgZCywYY8PGYKNFS9O7
6Em06D1RI0qIFCFKGDXRRfe7Y/F8z/9933PvOffeTNImzRg7vU0IIdnP0lgI
UZ7ip5mzuoaQxHnq0XJ/uUAeIw+R18jj5Uw5LjGEpmidPEtvIi/gaZzDuZgj
l/AiPsuruZJ3cgOX8hsu52UJIaS7X2LbEO6qW+QMLO4Uwj31Eq7mpXyfs7km
uo5reTnX8Qqu55W8Cg+i83AD5/LD6Pn4EedzY/SM/JjnxocwwJ5JzvBE/V7O
RMzZqtStzlrGr/gI13MhV3ABn+aFXMT7MTs6D0/leTyBZ3IWT+YMHseDeb49
UuyVjX7qzI7ed/R94rwPPoQqdFePcs0d+SRWx6KPEcJ5PojbGGjeTe+WfAIF
+ItzOICbGGlNCSdbl4Qc+Rf+4DcyzYs5wSwRXbFK/R0/8QMZ1hTxN3Qx/8or
8RzpZq38AvvxBZ2t+cwrkGbexIXYhx34hBH6y7kS27EX29BX/yMvQwXOoAyl
2Ir+5jf4NC7iAnKTfSdONbvOKfa/xqewFtnooNceh+VB1vWUe6EH8vTacVsM
N1uvPho9o/u+47fYhXXRXhhmzeboO5hv4ONoxjHcQ8x9DphVy3uwGxuRj6Gu
TTVfZ96He2OTfg3uo1i/lt/jA1oQb02Rfic+q36MJ9H71mvkN3iNnXgY/R3o
P+IGvMJLdHRtfXQGswdch2d4ijizy5xjdoW34BKuojz2///HP0a2pe8=
          "]], 
         Line3DBox[CompressedData["
1:eJwl09dOVFEYBtANKDMMTewFEWzYsQG2xEcw4RF8AHkD38HExHLlhRcqCYoF
GyqKYgMrDCgzNkRUxN772nqx5vvO/s8wp2yqNjc2bMkJIWTYreTKTakQRuRW
x82JEA5yiBYOc4T9ZSEclcdo5TgnOMkBs1PyNG2c4SznaDJrl+e5QAcX2Wn9
kuzkMlfYZe2qvMZ1uuhmu/Ub8ia3uM2deJ3W78rq4hB6ZC9p+uhnh/k9eZ8B
MmR5wDazh7Lcdx/JxzxhkKfxvs2H5DMqnDMsn/OCl4zwilqzUfmaN7zlHe/5
wEc+Uee8z/FZ+rtf5Fe+8Z16sx/yJ7/4zR9CMoQc1pjnyjzGMJZ85lhPyCQF
pChknfUiWUwJpYyjjPGsN58gJzKJyUxhKtPNpsVkBuXMpIJZVMZ151TJ2fEa
mMs85lMdj80XyIUsYjFLWMoyatjonOVyBStZxWpqqYu/Y14f75218Z7idbOB
4XzPr8ResV8TcTPbxKViVK8hG+/bcaeeic9B79AH9CJ9yH5vd1yoD+ptughZ
H616gZ7WW/T+5L/XEJr1PiW+liY9Hd+Bvk/vje9E36v3xHekd/v+Hsd5elfq
///aXyKPePw=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl09VSVVEAgOGl4OiMOnb3nTPGI9jYiV2g2AGYWKjYgS0GGNiKnYgiiMUh
FLniDbzyUh/Ab40X3/x7rb32Omd2DMjITs1qFkL4TUVSCGnNQxjWKoThjGAk
oxjNGFLiXNsQxuo4xjOBiUxiMlOYyjSmM4NUZjKL2cyJ+9pnrs5jPgtYyCIW
k0Y6S1hKBstYzor4n1y/UlexmjWsZR3rySSLbDawkU0Mcd1m3cJWctjGdnaw
k13kMtTa3bqHveSxj/0cYKDzB/UQhznC1Q4hHNVBzh3T4+RzgpOc4jRnOMs5
zlPABS5yKd5b11/WQq7bs0ivxP25FufivbemWEudv6E3ucVt7nCXt87d0/s8
oISHPOJxfHb2eKLF1j3VZzznBe/MvdRXvOYN782Vxn0pd1wW18V5PhiXx1IR
GVfqRyodV+mnOHb8Wb/wlSrjb1pNIq4xrtFa6qjnOz9ooDE+45YhJCd7Lt7b
r61D6KTftLNWaxdNaFet0W5aq921TntovfbU79pLf2hvbdA++lP7aqP204I2
3j8d7Hf7awvN0z/tQuiovzRJm/Svbymhv7RMm7REE1qkhZQ5ztUSzdQiTdd8
TdVcTdFMzWnve0n6/53+A7Xdgy4=
          "]], 
         Line3DBox[{1293, 813, 1553}], 
         Line3DBox[{4312, 988, 1550}], 
         Line3DBox[CompressedData["
1:eJwV0FlTiFEcwOG/mZrcNMO1SNn3UggJkZA1+17ZKtNKlDWyU/Z9qRBl6YqZ
voVbH8dzLp75nfOe95zzzptX11LdPC4iRinKjGjPiPg7PuJNVsQhvnKYIb7z
hc8MT4wY1Ne84pv5gL7kRdpn3q/P0x7jZ/ox7TV+qk/4wCfzx/qI9wya92lv
utP4rb5jEQ8Z8GyGLuQeDxjz7L7Oz46YrgvS97AsnU8JB9N93rukB9jAcSrT
vnSHtQKd44x8nctSaqnjj/UKnUeBdy5oJ9O4xR1uU04XF5mUzmMjO7jLznSn
/ev0tzO36FY2sSt9l7VCXc82NlNNDieosL5Yl1PEbiZzkmJWsIQj6QzvTtFT
XOY0KzlGE0fJpZ4rNFCa/rV9LdpKM1O5SjfXWEU7Z2kjj+vcoCz9O/u362r2
cY6Z/KCRHs7wizVU0cEsRvjJHgqdc1P3Msxa9nOe2dTwb0LEf0v/Tn8=
          "]], 
         Line3DBox[{1332, 1141, 1557}]}, {}, {
         GrayLevel[0.2], 
         Line3DBox[{4498, 3403}], 
         Line3DBox[{4501, 3404}], 
         Line3DBox[{4502, 3405}], 
         Line3DBox[{3414, 3619, 4760, 3413, 3618, 4759, 3412, 3617, 4758, 
          3411, 3616, 4757, 3712, 3410, 4942, 4552, 3711, 3409, 4941, 4551, 
          3710, 3408, 4939, 4550, 3709, 4940, 3407, 3615, 3708, 4938, 3406, 
          3614, 3707, 4967, 3864, 3613, 3706, 4966, 3862, 3612, 4756, 4642, 
          3860, 3611, 4949, 3744, 4496}], 
         Line3DBox[{3415, 4463, 4524}], 
         Line3DBox[{3428, 3626, 4768, 3427, 3625, 4767, 3426, 3624, 4766, 
          3425, 4847, 4557, 3424, 4846, 4556, 3423, 4845, 4555, 3422, 4844, 
          4554, 4765, 3421, 3623, 4764, 3420, 3622, 4763, 3419, 3621, 4762, 
          3418, 3620, 4761, 3417, 4943, 4553, 3894, 3717, 3416, 5175, 4529}], 
         
         Line3DBox[{3441, 3631, 4774, 3440, 3630, 4773, 3439, 4854, 4563, 
          3438, 4853, 4562, 3437, 4852, 4561, 3436, 4851, 4560, 3435, 4850, 
          4559, 4772, 3434, 3629, 4771, 3433, 3628, 4770, 3432, 3627, 4769, 
          3431, 4849, 4558, 3430, 4654, 4848, 3895, 3890, 3896, 3429, 3893, 
          4971, 3720, 3745, 3719, 3818, 4528}], 
         Line3DBox[{3443, 4462, 4526}], 
         Line3DBox[{3456, 3634, 4778, 3455, 4864, 4571, 3454, 4863, 4570, 
          3453, 4862, 4569, 3452, 4861, 4568, 3451, 4860, 4567, 3450, 4859, 
          4566, 4777, 3449, 3633, 4776, 3448, 3632, 4775, 3447, 4858, 4565, 
          3446, 4857, 4564, 3445, 4655, 4856, 3897, 3891, 3898, 3444, 3892, 
          4653, 4855, 3888, 3887, 3442, 4970, 4506}], 
         Line3DBox[{3458, 4572, 4865, 3457, 4573, 4866, 3459, 4574, 4867, 
          3460, 4575, 4868, 3461, 4576, 4869, 3462, 4577, 4870, 3463, 4779, 
          3635, 3464, 4780, 4578, 4871, 3465, 4579, 4872, 3466, 4580, 4873, 
          3467, 4581, 4874, 3468, 4582, 4875, 3469, 4583, 4876, 3470, 4584, 
          4877, 3471}], 
         Line3DBox[{3475, 4781, 3636, 3473, 4782, 3637, 3477, 4783, 3638, 
          3479, 4784, 3639, 3481, 4785, 3640, 3483, 4786, 3641, 3485, 4787, 
          3642, 3487, 4789, 4790, 3643, 3489, 4791, 3644, 3491, 4792, 3645, 
          3493, 4793, 3646, 3495, 4794, 3647, 3497, 4795, 3648, 3499, 4796, 
          3649, 3501}], 
         Line3DBox[{3500, 4891, 4598, 3498, 4890, 4597, 3496, 4889, 4596, 
          3494, 4888, 4595, 3492, 4887, 4594, 3490, 4886, 4593, 3488, 4885, 
          4592, 4788, 3486, 4884, 4591, 3484, 4883, 4590, 3482, 4882, 4589, 
          3480, 4881, 4588, 3478, 4880, 4587, 3476, 4879, 4586, 3472, 4878, 
          4585, 3474}], 
         Line3DBox[{3503, 4599, 4892, 3502, 4797, 3650, 3504, 4798, 3651, 
          3505, 4799, 3652, 3506, 4800, 3653, 3507, 4801, 3654, 3508, 4802, 
          3655, 3509, 4803, 4600, 4893, 3510, 4804, 3656, 3511, 4805, 3657, 
          3512, 4806, 3658, 3513, 4807, 3659, 3514, 4808, 3660, 3515, 4809, 
          3661, 3516}], 
         Line3DBox[{3518, 4601, 4894, 3517, 4602, 4895, 3519, 4810, 3662, 
          3520, 4811, 3663, 3521, 4812, 3664, 3522, 4813, 3665, 3523, 4814, 
          3666, 3524, 4815, 4603, 4896, 3525, 4604, 4897, 3526, 4816, 3667, 
          3527, 4817, 3668, 3528, 4818, 3669, 3529, 4819, 3670, 3530, 4820, 
          3671, 3531}], 
         Line3DBox[{3533, 4605, 4898, 3532, 4606, 4899, 3534, 4607, 4900, 
          3535, 4821, 3672, 3536, 4822, 3673, 3537, 4823, 3674, 3538, 4824, 
          3675, 3539, 4825, 4608, 4901, 3540, 4609, 4902, 3541, 4610, 4903, 
          3542, 4826, 3676, 3543, 4827, 3677, 3544, 4828, 3678, 3545, 4829, 
          3679, 3546}], 
         Line3DBox[{3548, 4611, 4904, 3547, 4612, 4905, 3549, 4613, 4906, 
          3550, 4614, 4907, 3551, 4830, 3680, 3552, 4831, 3681, 3553, 4832, 
          3682, 3554, 4833, 4615, 4908, 3555, 4616, 4909, 3556, 4617, 4910, 
          3557, 4618, 4911, 3558, 4834, 3683, 3559, 4835, 3684, 3560, 4836, 
          3685, 3561}], 
         Line3DBox[{3563, 4619, 4912, 3562, 4620, 4913, 3564, 4621, 4914, 
          3565, 4622, 4915, 3566, 4623, 4916, 3567, 4837, 3686, 3568, 4838, 
          3687, 3569, 4839, 4624, 4917, 3570, 4625, 4918, 3571, 4626, 4919, 
          3572, 4627, 4920, 3573, 4628, 4921, 3574, 4840, 3688, 3575, 4841, 
          3689, 3576}], 
         Line3DBox[{3590, 3727, 3726, 4945, 3589, 4932, 4639, 3588, 4931, 
          4638, 3587, 4930, 4637, 3586, 4929, 4636, 3585, 4928, 4635, 3584, 
          4927, 4634, 4843, 3583, 3690, 4842, 3582, 4926, 4633, 3581, 4925, 
          4632, 3580, 4924, 4631, 3579, 4923, 4630, 3578, 4922, 4629, 3577, 
          4944, 3724, 3723, 3725}], 
         Line3DBox[{3713, 3610, 3700, 4965, 3857, 3609, 4755, 4641, 3856, 
          3608, 4754, 4640, 3854, 3607, 4948, 3743, 3699, 3852, 3606, 4947, 
          3742, 3831, 3830, 3827, 4937, 4549, 3741, 3829, 3828, 3826, 4936, 
          4548, 3740, 3799, 3798, 4953, 3760, 3605, 3777, 3739, 3795, 3794, 
          4952, 3759, 3604, 3776, 3738, 3791, 3790, 5176, 4461, 3603, 3865, 
          3775, 4499}], 
         Line3DBox[{4525, 3847}], 
         Line3DBox[{3909, 4115, 5065, 3908, 4114, 5064, 3907, 4113, 5063, 
          3906, 4112, 5151, 4213, 3905, 4111, 5150, 4212, 3904, 4973, 4659, 
          4211, 3903, 4972, 4658, 4210, 3902, 4110, 4209, 5062, 3901, 4109, 
          4208, 5061, 4353, 4108, 5149, 4741, 4351, 4107, 5148, 4207, 4349, 
          4106, 5147, 4244, 4510}], 
         Line3DBox[{3922, 4123, 5073, 3921, 4122, 5072, 3920, 4121, 5071, 
          3919, 4120, 5070, 3918, 4977, 4663, 3917, 4976, 4662, 3916, 4975, 
          4661, 3915, 4119, 5069, 3914, 4118, 5068, 3913, 4117, 5067, 3912, 
          4116, 5066, 3911, 4974, 4660, 4386, 4218, 3910, 5178, 4534}], 
         Line3DBox[{3935, 4129, 5079, 3934, 4128, 5078, 3933, 4127, 5077, 
          3932, 4985, 4668, 3931, 4984, 4667, 3930, 4983, 4666, 3929, 4982, 
          4665, 3928, 4126, 5076, 3927, 4125, 5075, 3926, 4124, 5074, 3925, 
          4981, 4664, 3924, 4980, 4382, 4387, 4381, 4388, 3923, 4385, 4979, 
          4221, 4245, 4220, 4294, 4535}], 
         Line3DBox[{3949, 4133, 5083, 3948, 4132, 5082, 3947, 4993, 4675, 
          3946, 4992, 4674, 3945, 4991, 4673, 3944, 4990, 4672, 3943, 4989, 
          4671, 3942, 4131, 5081, 3941, 4130, 5080, 3940, 4988, 4670, 3939, 
          4987, 4669, 3938, 4749, 5167, 4389, 4383, 4390, 3937, 4384, 4986, 
          4378, 4379, 4377, 3936, 5166, 4511}], 
         Line3DBox[{3964, 4135, 5085, 3963, 5004, 4686, 3962, 5003, 4685, 
          3961, 5002, 4684, 3960, 5001, 4683, 3959, 5000, 4682, 3958, 4999, 
          4681, 3957, 4134, 5084, 3956, 4998, 4680, 3955, 4997, 4679, 3954, 
          4996, 4678, 3953, 4995, 4677, 3952, 4994, 4676, 3950, 5179, 4487, 
          4537}], 
         Line3DBox[{3993, 5017, 4699, 3991, 5016, 4698, 3989, 5015, 4697, 
          3987, 5014, 4696, 3985, 5013, 4695, 3983, 5012, 4694, 3981, 5011, 
          4693, 3979, 5010, 4692, 3977, 5009, 4691, 3975, 5008, 4690, 3973, 
          5007, 4689, 3971, 5006, 4688, 3969, 5005, 4687, 3965, 4750, 5169, 
          4397, 4538}], 
         Line3DBox[{4009, 4161, 5110, 4008, 4160, 5109, 4007, 4159, 5108, 
          4006, 4158, 5107, 4005, 4157, 5106, 4004, 4156, 5105, 4003, 5019, 
          4701, 4002, 4155, 5104, 4001, 4154, 5103, 4000, 4153, 5102, 3999, 
          4152, 5101, 3998, 4151, 5100, 3997, 4150, 5099, 3995, 5018, 4700, 
          4399, 4540}], 
         Line3DBox[{4024, 4171, 5120, 4023, 4170, 5119, 4022, 4169, 5118, 
          4021, 4168, 5117, 4020, 4167, 5116, 4019, 5023, 4705, 4018, 5022, 
          4704, 4017, 4166, 5115, 4016, 4165, 5114, 4015, 4164, 5113, 4014, 
          4163, 5112, 4013, 4162, 5111, 4012, 5021, 4703, 4010, 5020, 4702, 
          4400, 4541}], 
         Line3DBox[{4039, 4179, 5128, 4038, 4178, 5127, 4037, 4177, 5126, 
          4036, 4176, 5125, 4035, 5029, 4711, 4034, 5028, 4710, 4033, 5027, 
          4709, 4032, 4175, 5124, 4031, 4174, 5123, 4030, 4173, 5122, 4029, 
          4172, 5121, 4028, 5026, 4708, 4027, 5025, 4707, 4025, 5024, 4706, 
          4401, 4392, 4542}], 
         Line3DBox[{4054, 4185, 5134, 4053, 4184, 5133, 4052, 4183, 5132, 
          4051, 5037, 4718, 4050, 5036, 4717, 4049, 5035, 4716, 4048, 5034, 
          4715, 4047, 4182, 5131, 4046, 4181, 5130, 4045, 4180, 5129, 4044, 
          5033, 4714, 4043, 5032, 4713, 4042, 5031, 4712, 4040, 5030, 4393, 
          4402, 4543}], 
         Line3DBox[{4069, 4189, 5138, 4068, 4188, 5137, 4067, 5047, 4727, 
          4066, 5046, 4726, 4065, 5045, 4725, 4064, 5044, 4724, 4063, 5043, 
          4723, 4062, 4187, 5136, 4061, 4186, 5135, 4060, 5042, 4722, 4059, 
          5041, 4721, 4058, 5040, 4720, 4057, 5039, 4719, 4055, 5038, 4394, 
          4403, 4544}], 
         Line3DBox[{4083, 4227, 4226, 5140, 4082, 5059, 4738, 4081, 5058, 
          4737, 4080, 5057, 4736, 4079, 5056, 4735, 4078, 5055, 4734, 4077, 
          5054, 4733, 4076, 4190, 5139, 4075, 5053, 4732, 4074, 5052, 4731, 
          4073, 5051, 4730, 4072, 5050, 4729, 4071, 5049, 4728, 4070, 5048, 
          4224, 4404, 4405, 4545}], 
         Line3DBox[{4214, 4105, 4201, 5060, 4346, 4104, 5146, 4740, 4345, 
          4103, 5145, 4739, 4343, 4102, 4243, 4200, 4341, 4101, 5144, 4242, 
          4311, 4310, 4307, 4100, 5143, 4241, 4309, 4308, 4306, 5160, 4657, 
          4240, 4278, 4277, 4250, 4099, 4262, 4239, 4276, 4275, 5157, 4249, 
          4098, 4261, 4238, 4274, 5155, 4273, 4480, 4097, 4354, 4260, 4508}], 
         
         Line3DBox[{4539, 4398, 5168, 4136, 3966, 5086, 4137, 3970, 5087, 
          4138, 3972, 5088, 4139, 3974, 5089, 4140, 3976, 5090, 4141, 3978, 
          5091, 4142, 3980, 5092, 4143, 3982, 5093, 4144, 3984, 5094, 4145, 
          3986, 5095, 4146, 3988, 5096, 4147, 3990, 5097, 4148, 3992, 5098, 
          4149, 3994}]}, {
         GrayLevel[0.2], 
         Line3DBox[{2441, 2620, 4944, 2683, 2426, 2605, 4912, 2411, 2590, 
          4904, 2396, 2575, 4898, 2381, 2560, 4894, 2366, 2545, 4892, 2351, 
          4781, 2530, 4878, 2336, 2515, 4865, 2321, 2500, 2838, 3340, 4970, 
          3339, 3378}], 
         Line3DBox[{2442, 2621, 4922, 2427, 2606, 4913, 2412, 2591, 4905, 
          2397, 2576, 4899, 2382, 2561, 4895, 2367, 4797, 2546, 2352, 4782, 
          2531, 4879, 2337, 2516, 4866, 2322, 2501, 2844, 2837, 4855, 2845, 
          2307, 2842, 2841, 2840, 4971, 2681, 2846, 2293, 2473, 5175, 3331, 
          3379}], 
         Line3DBox[{2443, 2622, 4923, 2428, 2607, 4914, 2413, 2592, 4906, 
          2398, 2577, 4900, 2383, 4810, 2562, 2368, 4798, 2547, 2353, 4783, 
          2532, 4880, 2338, 2517, 4867, 2323, 2502, 2843, 4856, 2308, 2487, 
          2839, 4848, 2294, 2474, 4943, 2679, 2279, 4949, 2464, 3380}], 
         Line3DBox[{2444, 2623, 4924, 2429, 2608, 4915, 2414, 2593, 4907, 
          2399, 4821, 2578, 2384, 4811, 2563, 2369, 4799, 2548, 2354, 4784, 
          2533, 4881, 2339, 2518, 4868, 2324, 2503, 4857, 2309, 2488, 4849, 
          2295, 4761, 2475, 2280, 4756, 2665, 2816, 2664, 3366}], 
         Line3DBox[{2445, 2624, 4925, 2430, 2609, 4916, 2415, 4830, 2594, 
          2400, 4822, 2579, 2385, 4812, 2564, 2370, 4800, 2549, 2355, 4785, 
          2534, 4882, 2340, 2519, 4869, 2325, 2504, 4858, 2310, 4769, 2489, 
          2296, 4762, 2476, 2281, 2667, 4966, 2819, 2666, 2836, 2692, 3332, 
          3353}], 
         Line3DBox[{2446, 2625, 4926, 2431, 4837, 2610, 2416, 4831, 2595, 
          2401, 4823, 2580, 2386, 4813, 2565, 2371, 4801, 2550, 2356, 4786, 
          2535, 4883, 2341, 2520, 4870, 2326, 4775, 2505, 2311, 4770, 2490, 
          2297, 4763, 2477, 2282, 2669, 4967, 2820, 2668, 2693, 2735, 5176, 
          2736, 3359}], 
         Line3DBox[{2447, 4842, 2626, 2432, 4838, 2611, 2417, 4832, 2596, 
          2402, 4824, 2581, 2387, 4814, 2566, 2372, 4802, 2551, 2357, 4787, 
          2536, 4884, 2342, 4779, 2521, 2327, 4776, 2506, 2312, 4771, 2491, 
          2298, 4764, 2478, 2283, 2671, 4938, 2670, 2694, 2739, 4952, 2740, 
          2712, 3357}], 
         Line3DBox[{2449, 2628, 4927, 2434, 2613, 4917, 2419, 2598, 4908, 
          2404, 2583, 4901, 2389, 2568, 4896, 2374, 2553, 4893, 2359, 4790, 
          2538, 4885, 2344, 2523, 4871, 2329, 2508, 4859, 2314, 2493, 4850, 
          2300, 2480, 4844, 2285, 2465, 4939, 2673, 2271, 2459, 4936, 2779, 
          3333, 3361}], 
         Line3DBox[{2450, 2629, 4928, 2435, 2614, 4918, 2420, 2599, 4909, 
          2405, 2584, 4902, 2390, 2569, 4897, 2375, 4804, 2554, 2360, 4791, 
          2539, 4886, 2345, 2524, 4872, 2330, 2509, 4860, 2315, 2494, 4851, 
          2301, 2481, 4845, 2286, 2466, 4941, 2675, 2272, 2460, 4937, 2784, 
          2786, 2785, 3362}], 
         Line3DBox[{2451, 2630, 4929, 2436, 2615, 4919, 2421, 2600, 4910, 
          2406, 2585, 4903, 2391, 4816, 2570, 2376, 4805, 2555, 2361, 4792, 
          2540, 4887, 2346, 2525, 4873, 2331, 2510, 4861, 2316, 2495, 4852, 
          2302, 2482, 4846, 2287, 2467, 4942, 2676, 2273, 4947, 2461, 2808, 
          2650, 3388}], 
         Line3DBox[{2452, 2631, 4930, 2437, 2616, 4920, 2422, 2601, 4911, 
          2407, 4826, 2586, 2392, 4817, 2571, 2377, 4806, 2556, 2362, 4793, 
          2541, 4888, 2347, 2526, 4874, 2332, 2511, 4862, 2317, 2496, 4853, 
          2303, 2483, 4847, 2288, 4757, 2468, 2677, 2274, 4948, 2462, 2810, 
          2652, 3389}], 
         Line3DBox[{2453, 2632, 4931, 2438, 2617, 4921, 2423, 4834, 2602, 
          2408, 4827, 2587, 2393, 4818, 2572, 2378, 4807, 2557, 2363, 4794, 
          2542, 4889, 2348, 2527, 4875, 2333, 2512, 4863, 2318, 2497, 4854, 
          2304, 4766, 2484, 2289, 4758, 2469, 2275, 4754, 2656, 2811, 2655, 
          2831, 2689, 3390}], 
         Line3DBox[{2454, 2633, 4932, 2439, 4840, 2618, 2424, 4835, 2603, 
          2409, 4828, 2588, 2394, 4819, 2573, 2379, 4808, 2558, 2364, 4795, 
          2543, 4890, 2349, 2528, 4876, 2334, 2513, 4864, 2319, 4773, 2498, 
          2305, 4767, 2485, 2290, 4759, 2470, 2276, 4755, 2660, 2813, 2659, 
          2832, 2690, 3365}], 
         Line3DBox[{2686, 2685, 4945, 2684, 2440, 4841, 2619, 2425, 4836, 
          2604, 2410, 4829, 2589, 2395, 4820, 2574, 2380, 4809, 2559, 2365, 
          4796, 2544, 4891, 2350, 2529, 4877, 2335, 4778, 2514, 2320, 4774, 
          2499, 2306, 4768, 2486, 2291, 4760, 2471, 2277, 2661, 4965, 2814, 
          2834, 2833, 2835, 3392}], 
         Line3DBox[{3012, 3177, 5048, 3217, 2998, 3163, 5038, 3302, 2984, 
          3149, 5030, 3301, 2970, 3135, 5024, 3300, 2956, 3121, 5020, 3299, 
          2942, 3107, 5018, 3298, 2928, 5168, 3093, 3297, 5169, 2914, 3079, 
          5179, 3351, 2900, 3065, 3292, 3350, 5166, 3349, 3402}], 
         Line3DBox[{3013, 3178, 5049, 2999, 3164, 5039, 2985, 3150, 5031, 
          2971, 3136, 5025, 2957, 3122, 5021, 2943, 5099, 3108, 2929, 5086, 
          3094, 5005, 2915, 3080, 4994, 2901, 3066, 3296, 4986, 1116, 2887, 
          1113, 3294, 4979, 1117, 2874, 3040, 5178, 3344, 3401}], 
         Line3DBox[{3014, 3179, 5050, 3000, 3165, 5040, 2986, 3151, 5032, 
          2972, 3137, 5026, 2958, 5111, 3123, 2944, 5100, 3109, 2930, 5087, 
          3095, 5006, 2916, 3081, 4995, 2902, 3067, 3295, 5167, 2888, 3053, 
          4980, 3293, 2875, 3041, 4974, 3214, 2861, 5147, 3032, 3400}], 
         Line3DBox[{3015, 3180, 5051, 3001, 3166, 5041, 2987, 3152, 5033, 
          2973, 5121, 3138, 2959, 5112, 3124, 2945, 5101, 3110, 2931, 5088, 
          3096, 5007, 2917, 3082, 4996, 2903, 3068, 4987, 2889, 3054, 4981, 
          2876, 5066, 3042, 2862, 5148, 847, 2193}], 
         Line3DBox[{3016, 3181, 5052, 3002, 3167, 5042, 2988, 5129, 3153, 
          2974, 5122, 3139, 2960, 5113, 3125, 2946, 5102, 3111, 2932, 5089, 
          3097, 5008, 2918, 3083, 4997, 2904, 3069, 4988, 2890, 5074, 3055, 
          2877, 5067, 3043, 2863, 5149, 3205, 3277, 3204, 3291, 3225, 3345, 
          3371}], 
         Line3DBox[{3017, 3182, 5053, 3003, 5135, 3168, 2989, 5130, 3154, 
          2975, 5123, 3140, 2961, 5114, 3126, 2947, 5103, 3112, 2933, 5090, 
          3098, 5009, 2919, 3084, 4998, 2905, 5080, 3070, 2891, 5075, 3056, 
          2878, 5068, 3044, 2864, 3207, 5061, 3278, 3206, 3226, 5155, 931, 
          3368}], 
         Line3DBox[{793, 4076, 779, 4062, 764, 4047, 749, 4032, 734, 4017, 
          719, 4002, 704, 3980, 3979, 689, 3957, 674, 3942, 659, 3928, 644, 
          3915, 629, 3902, 614, 4250, 902, 2168}], 
         Line3DBox[{3018, 5139, 3183, 3004, 5136, 3169, 2990, 5131, 3155, 
          2976, 5124, 3141, 2962, 5115, 3127, 2948, 5104, 3113, 2934, 5091, 
          3099, 5010, 2920, 5084, 3085, 2906, 5081, 3071, 2892, 5076, 3057, 
          2879, 5069, 3045, 2865, 3209, 5062, 3208, 3227, 3241, 5157, 3242, 
          3230, 3374}], 
         Line3DBox[{3019, 3184, 5054, 3005, 3170, 5043, 2991, 3156, 5034, 
          2977, 3142, 5027, 2963, 3128, 5022, 2949, 3114, 5019, 2935, 5092, 
          3100, 5011, 2921, 3086, 4999, 2907, 3072, 4989, 2893, 3058, 4982, 
          2880, 3046, 4975, 2866, 3033, 4972, 3210, 2854, 3028, 5160, 3258, 
          3346, 3373}], 
         Line3DBox[{3020, 3185, 5055, 3006, 3171, 5044, 2992, 3157, 5035, 
          2978, 3143, 5028, 2964, 3129, 5023, 2950, 5105, 3115, 2936, 5093, 
          3101, 5012, 2922, 3087, 5000, 2908, 3073, 4990, 2894, 3059, 4983, 
          2881, 3047, 4976, 2867, 3034, 4973, 3211, 2855, 5143, 3029, 3261, 
          984, 2156}], 
         Line3DBox[{3021, 3186, 5056, 3007, 3172, 5045, 2993, 3158, 5036, 
          2979, 3144, 5029, 2965, 5116, 3130, 2951, 5106, 3116, 2937, 5094, 
          3102, 5013, 2923, 3088, 5001, 2909, 3074, 4991, 2895, 3060, 4984, 
          2882, 3048, 4977, 2868, 5150, 3035, 3212, 2856, 5144, 3030, 3270, 
          3197, 3395}], 
         Line3DBox[{3022, 3187, 5057, 3008, 3173, 5046, 2994, 3159, 5037, 
          2980, 5125, 3145, 2966, 5117, 3131, 2952, 5107, 3117, 2938, 5095, 
          3103, 5014, 2924, 3089, 5002, 2910, 3075, 4992, 2896, 3061, 4985, 
          2883, 5070, 3049, 2869, 5151, 854, 892, 4243, 834, 2142}], 
         Line3DBox[{3023, 3188, 5058, 3009, 3174, 5047, 2995, 5132, 3160, 
          2981, 5126, 3146, 2967, 5118, 3132, 2953, 5108, 3118, 2939, 5096, 
          3104, 5015, 2925, 3090, 5003, 2911, 3076, 4993, 2897, 5077, 3062, 
          2884, 5071, 3050, 2870, 5063, 3036, 2857, 5145, 3199, 3272, 3198, 
          3287, 3224, 3394}], 
         Line3DBox[{3024, 3189, 5059, 3010, 5137, 3175, 2996, 5133, 3161, 
          2982, 5127, 3147, 2968, 5119, 3133, 2954, 5109, 3119, 2940, 5097, 
          3105, 5016, 2926, 3091, 5004, 2912, 5082, 3077, 2898, 5078, 3063, 
          2885, 5072, 3051, 2871, 5064, 3037, 2858, 5146, 3200, 3273, 1099, 
          1100, 2127}], 
         Line3DBox[{3220, 3219, 5140, 3218, 3011, 5138, 3176, 2997, 5134, 
          3162, 2983, 5128, 3148, 2969, 5120, 3134, 2955, 5110, 3120, 2941, 
          5098, 3106, 5017, 2927, 5085, 3092, 2913, 5083, 3078, 2899, 5079, 
          3064, 2886, 5073, 3052, 2872, 5065, 3038, 2859, 3201, 5060, 3274, 
          3289, 3288, 3290, 3393}], 
         Line3DBox[{3385, 3334, 2713, 2744, 4953, 2743, 2695, 2672, 4940, 
          2674, 2284, 2479, 4765, 2299, 2492, 4772, 2313, 2507, 4777, 2328, 
          2522, 4780, 2343, 2537, 4788, 4789, 2358, 2552, 4803, 2373, 2567, 
          4815, 2388, 2582, 4825, 2403, 2597, 4833, 2418, 2612, 4839, 2433, 
          2627, 4843, 2448}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
02u+kLc/+M7X0Yi8/aG6F2Wu5P0MZBbU6SHvZ6+m0+HI9L//ufi7dRWOkZAY
8vHd6bkpJYx8fGeohEbx+IY97QvyJ58Pb8pPPLxFPh/Wm2WvVSCfD1GF117j
+XOI7Uwjnj+fvF/Q4vnzzH/l8tlFUn2wkIjoXH6D/PXN/FW1V+xB/cT4Mqzr
HKu3fFjQIG/UN+4yQq4fNe8h6vSpP0PMya9v3f9VkD7DHmI8r23YthAJvTYq
Ci8q78J+uVWbUvtIwJn8plp7exCkt5zi0wsrA7YLu6kPvieBhuy+l8+fnIEz
mnnHLsgXg8Ovjk0WJBJ83e1cyrTLDcZExGg2GRaA/8PCm+zfSVCapr9ol+ME
uW32zq5NORDk3PLtwiwJxrYNPNXNsIHBk8dNo9Sugc77fS4NP0mQFPXLlu32
EeDXEFtUEMqEg5zB8RK/SaD1k5626KQp3F2ko3UcvAwL9hHyIuR++LyzZcel
NkM4/2KhYoNtCnxfnqc0SK5zqZUR421ZG7e2gTzeHd6Sr6TI412z/eAox+dK
eKDJtOZ3Uiu85DNp19UlQXff51Ux/lnw7YPYZw2barCpP1XbTZ6HwOPft/A5
xcEt2c6eE65FIPOSo8afPN7nQkpD+yaD4IUFddh2oxxg/HmZPZE8rm0a27lP
FnnAASN5B4feDEj8PpIlQt7/e2+NBFolToC5guIXX60UyNIyu9lP3s8cRvZc
VTMb2OA/OndtTwLcuCzy+NYCCeo76z94lB6Cm0Fspya1YqA6oMRiyyIJhOjG
pZXPGsGOcNsXyYwRwBPInulMrq87lSOcJ6ELP96nrNbnCoGNB7dMpZLr40YW
DO9U1UB8aKMiK2MQPGocKKzA5y+u8R739yvDvokEWT4df7gbrTHTTq5zMzSy
1bID0B87tz7UzRseVSRpP8PnaPs6jQS/58MLDdv4yzR3gFFRRLljiARPUyWn
n5YlQGOwZ7J+bzbMjMhFDpL7/z0yK6r5BIJgJWvY3q27UqFSjY5qL3m856JM
whvOuIPa9egvF9/GwfFDnUWd5PEGXKrRp8P1fZp2R34UjYDIL+fE0AvplrcU
rU2wgHwesbxdwsHQfjtXv4BcX6ZRbXg0yBAyBRmuj6v7QRy7buAjcj2Kvvfy
3S5NuHpXOVAt1xNmNqTseI3Pxfo9WfvO7Ye7K74qfolyhy1Txzeit/GheRai
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
M92p3IvOPFMogBOdOc2CpD06c4fiA4Qzt/2QwojOnH4m+gg6896niq/Rmb8U
jWexvJUDks0c79GZyyvUzaIzfxKx/BU6c/tuOx105icuhUahM9fZpD2Pzpyu
deIWOvNbCzb56MxXLYReQmcuVSZogM687sUKwpl3r1rvVaruCG8DWtvumWcB
vYBVFa5vsqI8oRn9+dlni1Xoz4+SKgl/Lr3XefQpjzV8JBnVoT/vULtA+PO4
hM3PjIIsID5T5gT68+unzQl/rqN/jBb9+fCDbT3oz0OX8RP+3G6n/bLiT+nQ
wsi442RXBbxYc30A/flPt+Ry9OfORjT6lztvQtZsbjH6892/Bul7bQIhS6PM
Hf35yMHVhD//whdai/68ZZbbFv15LH894c8Hyt1DRRYNYNCuQD+TJRzCOX4T
64xcqdEf1V6vDU5M/FPo0rVcKC7dk70S0KVvFLNTRpd+bgfFpcPG+gB06RKh
PH7o0kd8KS7dM4dTic4qADwVcjcH+KRAqdEk4dK3DGnIoUtnUhpvQZcewHKb
cOlfZ8P40KUL39iVgi49pkKRcOnsbzi97Tzlodn222n7GWdounuXWNfDviGf
Cb06/YD3CfTqX6YpXj1f9moZevXX9sVu6NV5VSlefc+enfS4vsa2LyU30as3
7i4jvLrs8rRJ9OrmZ3Sfo1dvWNQjvLoO092JyxnCoEBXyIDrXAyUUNa5CFnZ
3a3OKQghip+nbp8ygjRbimPPpnHchI5dynZiMzp2umqKY+c7xrkd3eY1lwkq
XMehUIOyjkPoCWFVk/RGkMp5ceMDRza4Dcw74ToOU6GHG1+aJIG2Qra4kU0E
fO8UIHx7+ipJRw/JU9D1YWQWfXuZLDfh2w/Uxd9aHnIEaB+YXEbfnnmlhvDt
6yy/N6Jvf8sl8wV9u81Gim/nLwwdQN8+QrMmF337eyeKbzdIklNA327Jbrzt
yKAWPLSl+Pbw9msO6Nufq8uvwnUcft+m+PYT87Jn0bf3Z2q2o29XX/Lt5ez8
Kujba3lbP6Bvb1ry7WMrW0evHGEDj+l8F/Tt8Uu+nb80MRx9+5k9wa/Rt6sv
+fbRKz6G6Nsdj4ttQ99+acm3r/zZ8iuhkAZc9p1MQt/uv+Tbb3nZunm1XgRl
g5MHQ5JDgO38DLFeg5r4wO/GRDdgoM1RNGlwgfXSqwnfrv31x43rXOZQlDq0
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
HST3dWz+dMPY15H6KX3d1ZQRQ+zr9NgYzLGv2yhN6es0TWz9PMl9mskofSEz
uU8bHq56h31aXuCyty/Ifdr1m+lP5sh9WvGjYSbs0/w2PL3lSO7Telc78NGT
+7S7B8yIPi2MMeQp9mkyIy8LsU+z3S5I9Gnq3C5h2KfRSvDmY5/GrEjp09b9
sif6tJVsZW+wT0unofRpLiTRVuzTdpkwCWCfll9I6dM+bXmQh31aQKB5GPZp
A46UPq2/713DPnKfdnStSgX2adUXKH2a8qrJ09inCbCWCGCf1nOO0qdNz14d
lCD3aVWX+pOwT2MzpfRp63Y3S+HvdZisuPK4i9x3JXMfYfp/2rvTqJzat3/g
UVKIylRokDSSRqHhUDSQSJoMKQ2iaC6VohGlUtGsKKmQFGmmaFRINGikojmF
lBI9+9h7v7h/91r3s/73Wr+1njf/t3tZl+u62td5fo7zu4/zRHcN/BQ/i/ts
SI1tY8F9Ng63RpHuShDWKkB3JQr6C+N+GgnvrUl3fTZ4vBv3zXiWe/sEukui
kNo3o43nfCO6y7BXKQbdFeJDuWuPdtAudNeARqA8umuskXKXUDZLMLprSGTu
BXTXxCbKXeDGOzJKuOv1t7LF6C5mJcpd0+ycMuiuksVsTuiukLmUu2KX5hqj
uxI9jv9RINxlYEC5S6avWQjdFar66cdewl0srJS7zMR31eG+E53s8n7ori3H
KHfFV/xORnexDQkO4v4Sr2l3hWl311/+WA5ynUaSbRrJ8FY09vuckFEY9o/L
QHeN7by5F93VtYJyV2FuIlhIV8JYyrDbfa6bINiUPVJxfhRyFqssbibcxcvA
IbGKcFdS+MQXdBfHV4ej6K7q23lP0F32tLt2mw/tR3dxZukFo7vO0O5SmjzC
jLnk7UXXElNG4+FGkOdqzCUjA84fzyfc1ex/0ZuHcNeyW+Xv0F39DFVafYS7
3nIWt9cT7jr51pR017VZTTd0l4jmkwvorhjaXU/vFLagu0r93+xFd5XT7lK9
d8kY3SXI93gJuuse7a7X6xufjRO+6knWSlxO+MqtoFkVfaXGZq35mfBVv+7a
LAXCVx3BmqSv+nk1rTMJX9VY7126hvBVbxTlq2a+gSj01dzNQQwXCF+dpX2V
Isi8BX2VXLzTEn21n/bVIt9fBuirG2lue9FXgrSv3FZl7UVfeWl+rfurr0wq
y9bVEY66z7jgCwvhKM2trKSjDu4/qpRKOMr5yWdnW8JR3kufko7advlG4UbC
UftaNmcqE44alqMcZSGXdnQf4aitCzamzyEcFeFMOeq2TkYIOurNx5kYdFQa
7SgPdf711wlHDTAUqaGj2GhHRQgIXkNHda+aYmAiHNVPO6pm6cN16Kj6O+N1
f3VUkwGjFDpqMNO9Ex1VRTvqcJ3yBIN0GHT0nPlmSzhqQ/bUJnSUd2A9jyXh
KAFOecYdhKNGbKdJR434u7r5E46STPSa1004qtaFctTe8JFrUoSjbBvPM4YQ
jpJXpBxVsvqU1EbCUUrr9EzbCEc19VKO+jalY4SO2iIyW4eOUqIdte+2mC06
ylcpshQd5Uw76q7grzB0lKqFZzk6yoJ2lMthxTJ01JZTpsv/6iix0upWdBT3
65ML/+oo4505gugoxfLO1r86KuHehRZ0VMht7mJ01POnDrLoqAOWux3RUcWH
u0LQUbGzdbLoKIkB1VUFbrHgYb9iZ/ZoKTRp9CfjOQj/V575t9fbim3a7hCe
MVhpbL6b8Ez3XmXSMw0OBQ4biXF+N5t/xRtinH9aoM6A4/x/6/99pKP/vT3T
Dfhn1ueO3ywFN1lGo9OFxP2w99Ea/J4Fpyo/HSa+57cnt8jj9xxxq/jZvq1p
cJkrVO9hSTUs47y17+0Rwhu9danaZWbgqPfY5bpKAuTvV7JIJubfwh6B1Yfy
zaBeTe39SGsSLL1X2/tnmhhPxlwCE+qMQdO98/PUo0Qw/Rx0S5v497tm/BYw
8hrBQaOoJoH7ccCyjfOXHPE9sDb7r8S+4yr7OczYd5yWy06ee+XMHr0gfnsI
nLhVmCXkeh8Ceff2RX0dhegIlRaBN96Qz6P7/VF4CqiNh2xbQziq5K5SYvpK
F0jOP3eDyzARBEvsnbSI/7f4H85/ZxryeZQSrw0er+J0KoL8YO3D9fduEPfn
ZPHgJ25/DcgwrLUpf+4NBdGq2wqI66byrzPlZlShWfOWFzOHF+RJf2muIa5/
qjiqg33Hh27wz8O+Y5H872Tfccq5SX57VQdgd1nnuH1rGLDcYhHpxXVCzVPq
ql6WwHl9AddA+UWwGBUJtCFeR5s+b/3u385bn4K0uEsm8mAowLDww72TIBhX
EU6up2mEujW1SMMVJXOvw0rHQSbOZBOOGysX2Qhi3/HJq9l3se9YRZLqO3bU
nMmoaTMCle2KrU8tXCF2t7NyJ47z9Pnjr/52/rhinuGyOOf1MP/PwK+G23pg
2ue+F8fVOSsUTbHvOFNebBv2HYekUH3H/3S+dqzp3AZR85ySCLX+2bCcWFg/
X3sdnquV9znpyEm+eFgj5pNt9jYYJDwn3HSIv9fPQLnQehkPYKzpSinUdIMs
cQ6FLBy373hETny0gM19SnIXFtiAz8TxMnSpl0ufg1KXHkwzf926Qf0Y2Ag7
JaM/+a2S99R+1ID5kQuJcd8Q3ji7SKHT5iXUsA90KMGkemW+dup+yBV9Eoaf
K48+D/rQ386DvvcP50H7rtp1E/uU/aWVV2Of8ly6T1mi8cePxcfXwz3GQdl3
P1RgS7tMOl7nXnK58R03PxzwDFKpL1ICiZjscnJ8Pr5Yub2WC3YKJrxgYtgK
2ssDSc/wWm/pe+KxFOwCj3SnaMuB9g5hsv9x2ZPgC3MEl0Aluw2HtLE08D2b
GiDnlyJ/R301VsiTfdk6Mb0Jjh6zJPc1Yp4bHop9ygmpCaewT7m/cIzsU9bS
XFPIwucMWXZy/Xz5hPPzgrY24vdWObXki7cJNDaIq8QamMHjAqNO/PvqFa55
LCS3D1hXNqXvUTSEH2pJY+jDR7rJC+WeqMCVTZ2vXBfrgM3ygAf4vTnacb2Q
5d4MQTsM3j68qAE2c9gNyXVI+jzl2r+dpxzLyfsS+5fvddlcxv5lS7p/+fBk
zButrpWg3c4zvbFNBsxc15L7OIXVfu9/YcAJKXlRZaLpkiDnZET2ax9yLnp7
rnQRPFPtra3U3wAT726T/drbdqzQXP+VGYymhybMzEVgobrUBF6vGzH1k4qe
C2NRsj375dZDpW0ydZ6ygkcy9i9bnZw3HnTVCm6OU/3LjmX5yZeVjKBT4U20
Y9hB6CjvFMK65oC4gY9xEzFu2KXf5+PSAa60IWq/moha07apbcDja2n1UFgd
1vi9Jr8HbhMxPe5SSehOVy+wkdwOCQJfM/D6WvocZPe/nYPM8spt8RI+TmhK
uGiFfc0n6b7mfmVljW1VC8E458gZrV4h4LrIRvaxvr/X0F/0ZB58/MbcGu60
Dowsb5LOsb3eGHrwwBzYr/xo9/YCfjBVNCA9wPXLntlv0Yyyt2bVErElPPDU
3Jc6tyveQgv7mjcFFzJgX/N5P6qv2VJwnLE/QhXevXujXzygDg37vIXw3yen
r//m8lUWnmdNmfs6AIjy1qaSDqy+sbPsqyjYlkm90RzZDE3qSQ3k90+fR3z6
b+cRyzUxcwx5zQNOab3j2O/cRfc7MzP1fPj5kgHOPP7km+21GlgzK8j3mc63
XWxt6bTyatGa3IKElTAv9DbpmbDo4tji5B/K9zjicz95L4P8g8rU+a0NMxrY
7+z/WX4S+52Ph1D9zkXKY1MPr0hC2O99txd0bYaXeoLkvnnP54fq+boLwjJd
E+etaZIg0sVDvs9a+pzfu3875/eWb89q7IOebz0xg33QGXQf9NZfutOZbD+U
BQx+e0Wt4YA2zxLy+tHIhm+aTF+V/5z1i1Z9yAYr7DgoR9lMuWIf9IC00pa/
9kF/+MRzyeA0P+jmvXS88UQEAiS3kPf51X84D5d3zgsu7I/O3Gcy8df+aKFn
Ew3ztw0pF0Z+t4hlYAZli7Pk9YJvqUzYH5310LwT+6N/m1D90Y70+bCL/3Y+
rDfHw4bADxbAVV8TxLvxKlj6SNoGEvPd6uvvV5ieN4FHBV1M49NX4Fmn36kZ
XD+8HhKQpWgE7DHm5+bNvQxhFyUNNbC+HnC4jnmZXX+9POZlB1V+k3mZXshK
3cyMWLi03MUO14uqGi+R60Vijo7Nt7VDYEU6e2BmTRJM92Te2Ew4ZI1vvdNS
Yl6olrPKqQz3gjkziqm4H13F/iz9Kdl9wP1pQ0GIoxvs6L+a3YLj8HS9707i
9xv0QFOB29cZJHsviHzGOnrjtYYW4j4fzoLE2NMOMAO993F+vHl9RxzmaN7H
pSwxR2N5QeVoqz0+6l+9nwqGQrH6NsNp0MUxPYXrXaPPJZ9XDl+BHJfeMdtH
MTD1abI7kZjvIoYdZvwbvIE3Lm6ucXoY5D+evn+L+H4GtSSMmgg/aFm+6xWp
CAANnpgeV6wHq57PPCfmNXOThv7ZSBuiDvUPwXpN5NBnc0liHO51/9xyKOs4
3LTblIr7PoXN3ljeRIw/IVfbHTzHzWDBPiM5cv9S9gvvHYnf6cC2J3mLFpuC
u11wB45jBRvUuLKJ+9/KLkcz+8Jh2CMuPoXjfE+KMBfmbgwvypZh7nYti8rd
zHNXOeT6RZZ8WqIwVFmaBc6esck3h0eBc7TBoMowHbyO5Q0vZUmCHDurU9Lf
RsHox6ZChcRAuBVxZtlgTSgYFXQ32xKfd3w09En5KhcwndHYXpLqA6/2meyM
Il7/S+1x2+uEl0LyWcVWDrvCpHHqV9zHeB0r0+H3hGcqil5nG660hyU1Mlbo
AccF/L97ifk913DBB7YNxnDrjqILvv9nNoyuMsR8FMr42+NOvyGMBb+/je//
cYmCDxcxDsf84SnaMnQAFOVyjuG4PfjHYstzYrza1K8bbdyoA5NzeFvxutr2
+hQfYhx4xjo/s/L1Hui5MC2K9//Nefbs+Ht0OyvRLzCkCW6TwaZ4vdpkxyHM
3Rx6Wzkxd+vcReVuhRlvKiKFMkoyJKeV1fNTQLVjkXQP8b0VWCU/2dB+E76r
whMBzWuwVO7X/O+Eb33PpArZafhAhf7BqL0/feCT7KUbFsTrxIxfrd8hewpE
Y5hSJO2dgd3X1RXv5w36macPEZ60itE1NLOxhkfG2X14f7ZxhqmJE97r0BW/
Yu9lBnXGirHopbQ+eZ5ywm/9O6Jl2/UPg8ke3zv4vU3YHEpB/xiyMnAodeiA
95+aGvwetn7cXVdHzOMrCgP+REdowewce1n8XKw66eI4f715sNSndVgd/Df0
OJP7M0jPe6NGjPNi4rtDKgx3wCOLlgS8nmTT8tCCGD8ZNk+W2V7cDqyrG/Px
+pWORGEcx85GMnoIhSmC5THxWry+LvniLA8x/kgVrT+nPbQFJFdOkU6Y5TEW
PTSUV2JxpNzXY0kEHBTgFehuJV6/nl1+CeGxoPxodXkpJdA0jyT3N3s9eMds
t29hyTovZU7lwUAocvmtpf2OGGdK+c9ZWYWBd/Q+gRAWT0jqE6t4Rtyf1SFO
ixoIv91x7x3K+y4DarkcPeS6QUXWT/TJ2752eRtzSWj3miHr7kLrdQkX7YpL
Yjx++6X/9gWr1JjC7y9H4WHqu4XH9gVCRoHlZd58J9iX/zMQx73fExKOkn+s
YIXMC24pd1P41Nha9g39WVcfhT6828XqKsazAZrDgdy/jivgC1sN4R+1Z9lc
DKzC8E7WkvTM75tnLdADByJW3FklsQ4So86T87703HduZp+elFS3i6wxtfCE
zK4DV8uqRmFTpxmH74gfrFq85cbGC6fA7IbOnDAch1eb25x7agb3PsUd2vDQ
ED7/5t+P9QXTXK5qkevawLdBJuoO7Ib5amHkvri8nOkbnhJedSrTiGc3FATu
DDZy3lk8X2LpecJj2kN2o+uS+YEvvZPcX4Ul0YO5mPCJoady/o301fDhXTA5
jyuyjA3g/P5D0tdrRm8lXGeLJefxvLgTu9PmlpTcCa3alHjdBb4pmDteKRsF
/SQL5W9fzsNFmQs/pvkt4Qjr2t1Yr0V06bckNxnD10nrQja3/aDwwFsPx7dt
7u8rLIj67jC73P4QnR0gXObGRa6fJKYbRBB11uY3t5YbRmwBk1Je8j60dyge
R28nikv4svHxwgM1X3K+8+HZ44me1PwqHDcdzQUW4Xzk+7QMcEtHXwm8bUw6
dWoZvG9cSs7vjkcOqqBPDl1zYrbdzAFmDNT+ikJ2e+Y+IDwwp/uuC7c5G/hY
LiLnX7mCTW3dU+7QuvXI5P1xExhYeaWpHl0xX3aPuoARvI7hZG7ftxvsst0X
4Tgmyn3ay4yoT119vsm6L1QChRwRB3wd14gIs3aiTnyxaKhgm4s0+Kw6T7qr
lzHyXjxR31VfU4lpCRGFqZg4cv8fM4mL9VhHWA7mSgY9XwEs+ofIz6VZOS8L
nZzqVbhP5gonJKzfT77/kswzkuhGjmSe3261iyG1pIu8fsUoJxPd1SWjs2Py
Cyv4xW8jP1dhzbzf6JyAT6sCm/mYIeWiE3nd0465Ax0yp/ZB1P0VjNCjG/tf
3ReisUbj3f3iMIh/nfZYRa8O5J7aLcuZR8w7j49vx+eLpBv8duPzRRdOqtvi
80U9XUftNC9dhJ59c5LHn+cB+7cjySvbibqpPbLvd9YZKNdw3esakAkm2kr6
Wl9HYUXUxwI8TyGq0mktnqewIlSeEc9TkGQV2eZSaQ9paxZ0jo+mQhr//tac
SeL+VFPOxueR/N7pNuDzSN9yDpHPI+k5eFcsDkkD3dMaZV5Li0Hw2BO19gri
PteOtcH9NwIjWmdw/422zcfI/TesmZtdcJ+Nl3Zr3f66z8Y/fQ9OvhnlW2r8
oPREmYz9tUqIT7q0V/D8KCQ2vGsr7z8HRjZZr/Hcw1/KDHdxXwinmiiWrqV5
IH/2ag/ug+evxlqN++D92+9/VnHHo5GaBKhR5EtQl2qEPo9fWWISX+Aufa6f
H32u3/3/f67ff1yfv9pTUDHFHuSrxA3C6gvg0FhJkWjTKGhzsaji+bBtL5hq
8HzYi71CabguyqTwMHCw/Aq8FZ/g4RIsgPwnlW9PNP/735FzAUgqba6DMutG
l7ntpfDMtEl0TckXsClTG7KveAinbTgE1f3yQCr2kOo2Yh4J6njfhb+L9Fz7
nfi7qP+qTv4ubrtX8OD97+v57Aze/+KlceT9n6iWoLmEuM/9zA5anSPu82Q1
rh14nx+XNWMJIuqIzX4KL7CO8GUSJusIMQGpM1hHnOn74YV1RPFmT7KOyL1h
1YR1RGOe9FesI56eFCPriH/6XHV7zDc7EO/fJV77IL7/risLVfD9Z9hfDsf6
giliJgXri53VB8j6IifukkoqUV9cLvhejvVF+LmLZH0R3MESifVF+VmBb1hf
nOCk6ou5TEsjsb44ERzxHeuLMSmqvtBmnHiE9UVpsJ8d1hdzjlL1xcEcnhms
L6rXQh3WF6/ffSbrC6Hqmxuwjuje8EMN64j4ZeumsY6QyakSDCDqBeEVM3xY
L8CVH2S9cCWI/SzWC/PcxBeKEvWCqXoUWS8MMFmvKCPqhVU9hxcyRNmAR5cf
WS/4HDtzFusFTWGdX1gv8BpS9UJ73JEtWC8wbeINxXrhvRJVL/y23TaK9cKX
k9GvsV6oNKfqhfkW78SxXtCbkHLGeqFmLVUv/DpkZYv+N7Cd6kD/e+sbk/4X
S3w0iv4PNROSRv+nq3aS/jdNePkR/W92p/kA+l9C/Sjpf+2Pg5Hofz8NbQ30
/9XR26T/by/744L+L2v6UIr+90+l/D+snLu6j/C/qovWT/S/3S3K/6r9eYHo
/6PXroeg/yGQ8n8A+57L6P+yaNFq9D+fDOX/l5G/lNH/clKKN9D/fQyU/xdc
b0lF/6cfXFGA/t9B+z/J224p+p/N8eQP9P/bCcr/Qr/Sa9Hzc/58TUHPm92d
JD1/b8W4Mnq+VNQ0AT1fse4i6XnbTttp9PyC9bnZ6HlOBcrzy66JBqDnXb6H
m6HnN+yjPK+pnaiDnhfx4I1Gz9caUp738rMTQ897jHsAet5vF+V58eqANPS8
cdEDTvQ80J5XSVBsQM+HR3vNoudHaM+LHpi3GT3/cN7xAPS8Fu35+V/Cm9Dz
n/XcwtDzYbTn2TqyHqHn90x+LEfPz6U9/+zSA9LzL7lMPdHzR2jPvxV8N4Ge
Xx9c5oqe16Q9L+R06FCEVRGUck86xLbEw42ned8/vhqFcH6FHej5wOZeffQ8
C+35ZyNvuk0THkOOds+sTNlVOHn+jpt81yjczTfzRM/LyUZVBROeLzu6gfS8
0o77K9HzP4c7xtHzorTni/JSZ9Hz1W5Jiuj5etrzwsFNNXZa2ZDvW3DGNS8Y
HL50SXoQ9RrM3cyGng8wfLofPT8oO0V6vssywxc9PzKxbAF6PqGe8nx+tVky
ej75WNFZ9Pwb2vPnp7mXoudZrr1eg56voz1/gn+M9Lx5fg/p+QTa88uUPiVu
WpIBSeualwnpBsD9uCJf5e+joOvbwYmeZ2lg0UDPb/9AeZ5nSswBPd+zKmM7
en7fLOX5VYtelKDnF2oxeaLnW9Upzycqv9qInj87VhmFnl9Ne77n1AgHer7+
pMEwen4t7XmOExpz0PNGJ+uz0PNdtOd3z3b3oOdnmj87oecTac/fZf8p5cqW
Blrs+q2igt7A8MCExZ6YF8oEPqih57Nj+PLR84uWUZ5f02b1Hj1/gvNwMnq+
6CHleQbu6VLS89EMiuj5jeWU5zn4QnXQ83HpMb8NCM8X0Z6PcQ2dQs8fXaLt
jp7Poj1fcm/jOfS822WFq+h5S9rzz4+eSUHP/3IziUHPt9Ke1xlylELPP2bx
mT5NeN6c9nyMlug3XN9TnykwRs/70p4PCXu5B/1WcEfhNvrNpciZ9JsEl+AA
On9Dw/Eb6PwrDJTzdRklDqDz3Th3dbcRzv9BO9/tao49On93nPlCdP7ux5Tz
t5mcNkDnr+Bdn4TOb6adv/+B31V0fjuPqxM6XyiWcv7h5rpKdH65+VV+dP5C
2vlDBffS0fkJH/6oovNv0M5XH5DhRee/kGfuQeen084fN9hKrq9OHu8XRuf7
084v6Tk9gs7XfXXGCZ1/m3b+5RdQjs6/w9Pmh87/RDsffpXponPucUj2onOq
zIYL0DnjG3+FoWfkFz84gJ5ZnLiG9EzHwdf70edZTX/80edJrTmkz2f75vBi
Lpn1q5vpS2sSuJc+JHPJss8MvphL/lxcKjv9KBHWT50hc0n5uzysmEvKjzdz
rbsfB0LWTGQu+XrR91jMJdmuTthiLskSU9mCueT2WxOumEu6cMaLCrvehxLb
972YS/YeOfobc8mfZ6tlc8JTQDfNjMwlbReyPMdc8qwM21fMJeNZjclcMiNG
+x6uc7qAnTWuc3JPTpPrnMVFF9Mwl7yTJXUSc8ng54JkLtn3wLUDc8m8F2G+
mEtua1Ehc8ni6ptJmEuOcovHYy45UDVC5pKpdqKFmEve92w0wlwyrKabzCWZ
84YAc8lNLYvjMJd8ocNI5pL+3EdOYy45G5G5F3PJei0hMpdMYbfKwHXOLg2T
CFzndEuk90M2WhCOuaT0h1A+zCWfB1K55PLMVBvMJS/8YQrCXDIonMol5xfP
24W5ZGFXWw/mktNKj8hckmFM4wXmktsD039iLvl11InMJR2d9JbjeqPgie3r
cL3x031qvVE04NZULHE/j79ZPIG5pHk/lUvyLJe2xlzywNSwGuaSEvFULtnA
d3sPrr89vcDBgetv4/T6m9DjnCXWfPGQzvdspfnbYMgvqyHzx96uyUHMH0WD
+D5i/siiuYTMHwujdtZg/jhopX4C88fRdCp/XLcz7Brmjwc7B3QwfzReTuWP
WYODlpg/al/5UYX5Y6UtlT/eGe4Xwfyxx2K4CvNHNWEqf+x+0FKKeWKsRr00
5okfMqg88eTY4B/ME9XGPFUwT3zeRuWJzi1NbZgn+mglHMA8sT+ayhNDxIzV
cH45ySbegHmiGJ0nHg0+0ot5ovQdgz7ME4HOE2NUeAJwPPzgL8KFeeISOk9c
2lFqhePDUQbGTswTj9B5IuNrZzv3qkiwUG4cxDwx37SCzBM1tnPwsPI5Q5xi
zFr+fHtIVQ8k88S2Va9OYZ4YVZB2CvPEr4FUniijlPsF80SOp8l1mCdaKVB5
ovByAwHMEyXZArowTxTjpPLEP94H2zFPTJ9Y0ot54l4GKk98dWDRZ8wNCxW8
EjE3XE/nhupBK5txHrcuuTZPok0G1OjckJs1YQRzw0HB8ReYG4rQuWFHF38D
5oYe+6teY274nc4N9yS6aeC8MNj+7RfmhvPp3ND1lYc7jpNM+V7/kRse3z9z
wNLCDuIlAvbgvse75lG5ocDj1nHMDdcIdzVibjiQTuWGRmoMGZgbKlxbV4W5
YV8SlRt27orwxtxw5QU+L8wNS32o3NBKsMcEc8Nr+oeeY26oQOeGp7YmrMB8
sDW10hHzwaN0Psh+ao0W+sF9fJcX5oPL6Hywh2WoF/PBKJuk95gPHqTzwatf
GINwvmPsvKmJ+aAZnQ+yiVl/8SXG/9NG1syYDz6j88FNcn8uYz4Y0cS6AfPB
AicqH+w4dVUM88Em49kzmA/27qHywTqZeGZXoo7wSnrhhvlgMg+VD0olTGth
Pvj2Y8o7zAcr6XwwTO8oJ+aALxXO/kcOWPXuSiu6Itg37SzmgAvpHFD/mToX
zsu2B/7cwxxwPp0Dhu7s9MZ5qlYiMh1zwEI6B+S/qe2POWBEuPCSztztUHqZ
ygG9OKIXPSLqmtiHubmYAzrTOeAz1RF9zAHnfTV2whxQlM4BL/V5cGLet2xc
4wfmfZl03tdkd7YfPTB8qdYB874OOu/TUU7swvnRZNUJb8z7uOi8r2R15BXM
+y6pBQLmfe0TVN730Nr/MtYXQ1JWZN7nR+d9faGuKzHXKzpV9uWvuV5r5vYi
nGflFkXsx1wP6Fyv6sMYK+Z6I7cV2jDX+0PnesvO653BdSQXsev/T+tI/3S9
mePsUVxP89X+kY3rabJ7np7A9bTkbzntuO4kGVEXiOtOR7MzduO6085RLf6O
TDfY071l7o+bpSBQ7K+PzymFSWbvxueU7LastcPnwY4f2C6Hzyn1c/mU47kM
4b6LMnE9KvHX7Btcj3KZqFPU2ZoGxS6C9fj8Un6fwC58finv+VgYrpN0FN7g
wOfHTHgfpeA6iYLujyJcf/O2vdyD628HrXXJ9bf+XbKl+LxTXs94PT7vNCwm
Qj7v9G+/h3+6ruur8BT3pWTmWf0W96UcmzatxX0p/+nfh/gJXMN1s6rz9y/h
utnmsdgcXDf7t/9vkcK3P7j++e1UkLqqXh1cer5zIa5//rc+17+9fnxk2zHF
zXVQUx1tiOtLMnxzt+D60nLPHS8xJw1QUOvGnFR45TSZk0pc61xrdP0ZMO4q
7+xblQKihQVGeH6BFCe3SXBCBQir7H0za5EBLRkyKaFe/3ef69ypwo9ZbqXg
vnztXffsGngteTFMgXkUIuc+icS/u8riq8fw786WLtPzv/3dW0y5WPB1AmsP
/HQjXufgGo0kfJ0PI5KZJxe+AAuJ2YkjnTmwttyj5X/b3+B/ADYjI88=
       "]], {}}, {
    DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        TagBox["a", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["h", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, FaceGridsStyle -> 
     Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, 
     PlotRange -> {{0, 10}, {0, 5}, {0., 0.11897674224237137`}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SqrtBox["DetH2"], 
       SqrtBox["DetH2Trunc"]}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.800406888148905*^9, 3.800408426324402*^9, 3.80045825583946*^9, 
   3.800458785588089*^9, 3.800474963192038*^9, {3.8004750164772873`*^9, 
   3.800475029626994*^9}, 3.8004787920678577`*^9, 3.800482948476508*^9, 
   3.800484177174033*^9, 3.800485530527165*^9, 3.800490978069049*^9, 
   3.800542706731534*^9, 3.8005523281058483`*^9, 3.800578593822358*^9, 
   3.80064361823412*^9, 3.8025249802657824`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"f8da1215-8224-436d-a6f6-669fae3bea1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pAG", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sqrt", "[", "DetAG", "]"}], ",", 
      RowBox[{"Sqrt", "[", "DetAGTrunc", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"h", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7994289539105787`*^9, 3.799429069823216*^9}, {
   3.799433254035104*^9, 3.799433285300692*^9}, {3.799433333854372*^9, 
   3.799433375087038*^9}, {3.799433500788445*^9, 3.799433500964443*^9}, {
   3.799433533925202*^9, 3.799433567968049*^9}, 3.799433631635578*^9, {
   3.79943370496087*^9, 3.7994337327055397`*^9}, {3.7994340939797783`*^9, 
   3.799434128365823*^9}, {3.80040673640632*^9, 3.80040678635528*^9}, {
   3.800406956510212*^9, 3.800406961404627*^9}, {3.800490796197031*^9, 
   3.800490797460039*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"8ef1810a-3848-4ea7-8e99-3bdfa3b8b19f"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1: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
VdPT7YQmdR2kK/3kFuavJCaHBMt3RZPuT+409TYbxy366n2EmdUNrSteHzqz
bxbmY5PfWfrbyqHBjFhTZEk25r1f/owIn6yIVtbtan1iloP5Bu2K+xeOKaL0
B/PNxy9lue5P36+q/VVQYvDj/eV/WP6oWWxBtp0Kmv5k3AEP0TuYhyZ9HT6g
QRUFRR1cKfWe/dzz51NrF85TQ9kS+5fpfWW53PXRYrKPNNDLF1ue7prJ9n93
yjZmU19NtEZ20a3F81k+0GrtA1ELPdQl1/bT2t4sn3xfzSDubx3T8HXzrbhN
cR3joLY4+deQNzF1U9I4+pNxKPDnRBx6f3dAak/R3wK/hY2Lzybx/Y97qilL
LoveZPsxlfBTUjrNBPSQGzhAtzO7Twl4/+V5fhNSxRHZ3nTnl7fHm1meLeBv
Cs+g+KCunPYtn+6FSTxheamAh5m4/1R3kmL9n6l8nrzozFzXRClO/+bnrS7v
n9GT07/9nT2Sbw+z/KOAix04MWynvCzmPgJ+4Hjc8vPGLJ8u+NzHE7r2GO4h
h7rrpS2LPVzCiAri7SZdx/0DFmZy9CfzIR3XSyOHk/kQn/L3uZPUTgv+HuHw
il86d04GXcPcV8DD3gSdH6+bztpz/csOLVHfmKa+nauiFFk7ozBju3RG2DfG
rnyxx7djbphHCfrR2FbtH5ckj6xCI8alfCxkyvSPSV1re07IY9zqJNLvYr9C
7FcNEhkrvjj2CuG3iyP50CPxAxay6/1b6Kd62UWncb6io53vgX6cOzvwkQi7
vrReS6hHtMX75lMz5106wnLH7a31p+y+M44a4zaYJLP5nyBBXBmRen5A8C32
cyGuXN/vZFetTaydsRfE9SrJRxp2bM8h2ishb2lRsympLIe4Pv2Lx8x531kO
cY3fgpNzfuuy9gTimsjSYPGF09jPhbh+yRqb8NIQlkOc2zztSv/9L1kOcf3D
PjtjQ7RZHVTiWq6LxOihL0uvbaqYyD7PqUTFzv08TjNPe0xZGz1SHtU61w4e
GlfE7BOMr8fXwL2mI8pwe+AyxslSL+RK2f3rRvDaPHlpdCP/evCGEvZ59k7y
yzJ2l0b3/QwK1J6zfFRwp/TiWhkUFlvwwGgP+5xr78RET9wngfpe8TXP3cmO
y9Gi3TFzwiVQZlJH3nX89BNPukmhBwon7L9HZBF69kSueYFXq8az/VuUljw6
dUMdff0j5iUnZFfNZerHJCyWRaYH3/pZ+7HtPe6sON3yXQ+5axi9naDGjtdh
gW6HXMK2zUhi4xF/gT5bYpd12XpUHoUr1CWOGFyEdY6/MSA8aCobx4ULeIrG
/lJTR7YfT0E/JwaN1Hzq+46zft9lWq2xj2PjGm8BX33/3muDrW8x9xPwbe/P
/A5o/Mppf3Nr3kQ9tS+c9uN9R9x49o7NJ8Dz9J3t91nvGnuOCN53TohaT4fJ
bNy0S8APa1kUmhk2cObPsrMits3RzzH/EHF91+j+Cqifo23lwz7suBy987NI
O0UJ7amO7BtxluW3Fh76NK5FCSk9jz2w/jLL3zxcu9nuZC9Up/BXVtOIHa/x
j8NqfpT2QmciT9x7P5rl+dPfuqy2U0dSvtXpwzSE1rVNhlyNqg6a0/de+sxo
dj5Ub2pOq7PXRonWa2ZPd83m6NO1W+2BJOYz5vsFfPOruOHJFWzdNhDG1xBZ
tq5l8wNbBLzlj6SJwSs2P9Bxv2Dnj7ugvXH1y3nuM9g4Eex/bb7ZD50vjzj6
V1frfQxyr+Rwi5NyD6eu+sAZ35LYPXNEB33iPP+b9FWnjxz8xWk/u30+tHD4
w6tbFJ/NYnUIFnBvz78rvhxmn99ZwE0PDvS63vkXR5+kte++BaazcSvEm7mn
7+tZKLPj4jTo7fLwtvjxgJhl1owH7LjD/ropLaLL4thEguugc/Y6Y2ZUsv3w
7a0emlQ2bzszhLTnCuioZ4nngIWk/ddFIzLcg9dIsPyTs4RLYKYsqhztnJR5
R2j/6iaS43hTB/0YFiQn6c4+p937nEmug/TQlWPLHu68yHItkzr/LvNl0KFu
b5sPrWP7uaX5+4jtCXmUo3v4pUl39nPLjvbq671FF7WW7OkSF8z2Ezsr4OOY
brKofMbur4PC2H7W/7HaOM1TC6k590xf7sn2o+Z2wuHebC2UtmKMa85ktp9p
ipuGODRoIfnPZTIqTWx72vcQ/u/3OvL5/933OrLfN0j7fjza97nRvn+M9n1Z
tO93on0fEe37c2jf90L7fhLa92nQvv+h4zlYBRQwvCikzP/lmI46sPfHQa+5
CzrON6jP0u6Jk/e+afe1afevafeUafeOafclafcWafcBaff1/us9Dtq9Cdp5
e9o5edr5c9p5adq5aNr55/+pc8W085y0c5u0c4n/U+cGaef3aOe+/uu5KVod
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
fNu8KpIQT6sTmle+t3oWnOung3L+fitWdGN5kqhCj62lOmiM4urILgNYPvuL
QXLAGV2k2P90eH0yu981xNhF/h6mhwJn7ZxyexvLe+95eO51zSumpau4yagx
rL29cm/gobrwR4xR70qP4xfZ+QO/Fz+gl6Z3pCqrD/z+u99+93uqx1kd4Pfc
g5SqpxhJse9rtyfLI8hWD60//Dp643z2efwnnU+/Ivad2RvVcsTLmLUblz0n
J5XXH+X8ruvi8/19g/qGMrbdHeIK3dh51envyn08fulxf2ejvWz7AYNctr+3
jebsX7qOmTbfDM4yg09N0/xbwMb728K02/macpWV2yax++BFw37jemyK5+xf
0Ru79s53vMrYKEfWfp3D2hmt61EGPF5za5zO7gNs++U5T5qOKwcwhU9+z+m3
lJ0nR31XN/N4o83Rkcbv2PkPv1d7alB2dY0Eq9vzqXkVY+5FMh8X5FnH27Ln
XkpyZjzi8VzNx+6SUuz77lD6GFfUZpdPDv5bFa/H6lzyZJffqoGxTG9kdG3q
MZbP2j1yP4+v0Ytpnn6YjaNnTA8d+3zGd8YgwmfuFxm2vePznJVdjv1kFkfm
Zb+aweo2eYLFO4ntH5mwrdrr7NawOph63TQPcC7j7O8BYQkrdxikMtW+13M0
8tg4veezqe285dLg7hLurN3ru8ogEWneZobnzXCLPMHGTV22NCXweOLf2FlF
DMuL6udlKt69z8xdJHdmZjnLCwytPM/OlEWfnBcoTfRm9Q/70Pewyj4FJNrJ
3NRWhvUTwi1Dq1t3KqPZm8c9E/nIrou1KYNvfrukjIb7DpgtfYfljRYy8zwG
qKINJp9DTvmy9uf83uuJf9JU0UtDUdX+fVne3UhfYdRTdbRm5BbtD6rs+vKt
PlJwI18D+YhPeLtnL7u+ri/NMZf30UL6m1btnXeKnVfw++Nfhkme6RvH2g34
nXHtGt91/erZeQW/N604t4vU+ZEs1yytP7x8oAiafClT60Ee689Hp61OniTT
yqT+tFm4djEb58LvhhtF1U/825/l8Dvgm80PON/ZwO6P3T4wvXzb/GrSX1p0
eGbrr6snOb+TC7/Tek1efHzzN9a/zZq83md3/Xv8+8vAt8ssbJHSSmIGZnT5
uNqbjX9FTLPaudq1Z/veSrPzcPK3Z0WjvG8wisk+Z9fvZv0BWT9UzOM1nqv9
jnmw+Rn4PeV+nzY5xjxixx1+T3mLazfpoVbs+MLvKZtWpO3u94AdR/g95cDi
yIFyE9hxhN9T9vhr/ER2LqsP/J6yZu8D22yD2fG6Wuaqv+OkKDqo9caXKWDt
A/yecrmzfY9NzeT3h8iimQq9ZwrHj3AepWDq0njh+PG6ID/5IqPkonD8CPnG
5ndNciuE4kf4ntjJ3Ra1CsePEBc3ONa9F44f4RzPqHx1pQah+NFAbMQLXvxI
3rsPvuq9oLotfiTPmRerJOzjxY+iFdkRokLx45vV01x58eOx0eOy6oTix3P7
PU/y4kddlc57hONHkXozD178aOaWMkM4fkypWCzHix+DDt79Ihw/3q+6/uNR
W/zYckDOVDh+tO7sE+XbFieuQT4vhePE+2W6DSVtcaLNkjRFG6E4UfOU205e
nDik6s554Tjx+EMzW16c+DnTP1Y4TmytDS3mxYmX3kf1F44TtUTmLuHFiW5P
B50QjhMf9MtojxP5f6uJ8W1kxl51+iMcDyYvsjqu0xYPkvmxQw65D3jxIGMR
ESAcD8K9vj/5Kht6C8WDYg7ehVfa4kEyn2bYq2zs9rZ48GnWsofrheJB9aak
6dVt8SB5HySl9uqcwLZ4sMnHd6NwPGjjtDeUFw/u2zKqtbdQPAj5z/6VQ3cL
x4OQ59x2Z+FN4XgwUJDP/NvL6L5wPAh5SxPn+a3C8SDkJxMXfRwhIxQPmgny
4RMepru7C8VBWpOuz7puz/1+GHzfsEm5T7WQfwjnPL85KCoKx4lwznN/qO4O
Y6E4Ec6D9WiacUk4Tuy0XeQXL0789/f/dEbbPQcfE44TIc/853iAspfQvIW6
oJu1kqS/UJy454W0Ky9OJO+JwH//NjKZLRwnwvc4WFbYHxCO+6AeaRGvsEw4
7gvanpT9qob7uyGg4x/FctO3QnFcS7DupvC2uCyDCX4gHJdJd3bsatEWl+17
G+QuHJedfWhzwrUtLpu2fZ+VcFwWs/elKS8uqxwsqS0cl001Mk+71xaXIReD
YuG4zOzL1udlbXHZ8NSbe5YKxWXPuz/W5fn/hTfcBwr7//YN1UN5cdNhywRV
4bhp79jbQ3hxU9Xgb2OF4yYfVLqVFzeNnVHeSThu2q7gZcGLm+r6iscIx03v
DywSa2mLm256dYkRjptWa8fc5cVNImnBKklC9iHk5MiDvLhpw6qHacJxU5xG
xE9e3HRoxIHXMkJxU/YGk2Be3FRoGWaYJRQ3lSuoWPPipr8eW62F46YfLcmK
vLhJdOCRd8Jxk+lHeWte3PQu3u2ccNwkumLkIF784v744Azh+EVq1p9WXvwi
Y5BcJBy/wHmknPtXFgvHL3A/ZbVvUoVw/ALnAHsbFh8Wjl8i9zzaycsDOL8e
H/lWaLxOSov58OIa+eczdwjHNUvUzkintMU1t4ve2e0Rimuc/e//fvegiInV
/OE0Wp6tR9yZGeYtpXmPCRtYeaInw9Y9ReT9V1i8LuWcn4f66S50865wXFAU
f9ed5+d312l8J+znPw+761Xe5re3Spdf+i7ktxemnFvH89tHB1k/EvbbbTeY
3Of57RtuhfgI++0/7P1y0fFSZpyzlptjJus/j+rpP5/nP/uf8lET9p9fnXu2
jOc/H32/MlrYf16qJC0jsksZvb621l3Yf2649f4Mz38+HtioI+w/16G73jz/
+eFxa0dh/3mQ9tMwnv8c0jLIUNh/Truxbx7Pf14ht2+QsP+sX1h8hec/B0ut
HuIu5D9LzB1/iuc/d2dsioT9Z81jT4p48fhadGCDcDyeYPFoEC8e333j+Ajh
eJx/r1sbXagY1F/Y34Zz9fO7n7CUE8p3HcgfdpaXR1oVufp2sVAeqX16tvnn
r322Kgr75/zzkXporL/Ri3NC/nmB26Z86zb/PPHkhERh/9xar+Qyzz//PlVl
grB/Xik491n24PcKYf8cvo/Jbl3RQWH/HPbdcQYztgn72znOUXE8f5v8nl64
RxbAlBsK+8NwDvBpysGWIUL+MJyHfHdo1UVhfxi+J2f9TK9gYX+4ffq766BW
kUBnYX945MTaVF4+xPOZmq1wPsRjU2UuLx9yZqyIiHA+pP212vxnf5/1I4X9
5/Nvtxrx/OctMp4Hhf1nqCMOya+aJew/j1waOv7wjhLmbVb99md/2Xt/XXKe
ft24qZAJDVnKvPnZhb3X6eT1w3NsPjPOb2vx3DgJzNe77hu/LDiXyY7I8uor
xp7P2Tz80aPy7neY7sdcpUyWd8N816szfro1mYye7hSZj93Yczu5tl2Tp567
xVzeuH5SlYw05vc+J9/adCqZGVa5UWGcPHueJ8VwU+V1qSRm747KtE+3We6u
vzhN5eJZRn/0+iEfpdlzPtPOv3qrb3+G+eIsubFlFMtnaY3R8VR6wPmeKEnv
6ZlKTqWce5HPrZMPxQ0owPs/8KpjZTtMYu9wzikFPRllljY6k3NOKfTDd6PH
u5M455SGNEjOD7t5hnNO6VGz9dJT7+8y8hNclbfMZe1tv2+S1/uUFTHRok+r
rkez9nZ601njk/uKOd+fs2fIh2oH0wJOfdnRfuXDB8+LGaZMxTNmFdteLrPl
cODOMk6d9/7lFYP62Jcy+RMbJl16wPILgnu7zpFv791zYp+fVgek5XtpeVpa
HphW56LlgWl5Y1pc/1/zYLR8IC3vR8sT0vIJ/zWfRssr0vKHtHwjrR73X/Ny
tPwkLQ9Jy1vS6ib/NX9Cy+/R8ni0vB+tXvNf8zO0uiGt7kPLh9Pq1LT6C61e
Q6tv0uqhtLw9rZ5Oq1/T8mO0ui0tf0ur59LqwrQ8P62eSMtX0+qMtLw0rb5P
q3fT8ti0OjgtD0mrv9Pqtv81j0rLx9LOXfzXfCCtjkyr69Hqy7R6KC0PTDun
QasL0+qJtPMYtHr3f63P0urRtHol7RwIrc5Oq//S6t20+intXBCt3kE7l0I7
R0E7r0Krz9LOI9HqLLRzL7TzG7TzMLS6MO0cFK2+Q8vz0+o+tPMktLozrd5K
q1/TzmvR6k20egStDkU790Krg9PqwrR6Ou1cGa3+Raub0OpitPM5tLo8rX5N
q+/Tzr/R6nG0+g7tvBDtnADtHBHtvAqtDkg7X0c7t0M7n0CrT9HOLdDOO9HO
1dDqlbRzgLTzRbTzErQ6Gu0cBe1cFu2cA62uSjuvSKv70/J+tLoVLV9Ey1vS
6gj/NX9Cy8PQ8mC0ehwtD0bLm9HqI7R8HS2PRMv70eo4tDojLR9IyyfT6j60
egGtfkTLm9HynLQ6LC0/T8uT0/L2tLoYLR9LywfS8rq0+jKtHkHL/9PqFLR6
Hy3/TMtz0vLYtLo5rf5Cq2vQ6jK0OiYt307L39Ly9rTzALS6Eq0eTavD0ura
tPoC7dwCrf5Fq6fT6sW0ujytDkI7X0Gr39Hqm7T6I60OSztXQKsP0uqttHoo
rX5KqxfTzj/Q6pu0ujDtPAatfkGr/9Lq3bQ6LK1uTqsL0OoItPMttDoOrV5D
q+/Q6v608x60+g7tvAetbkg7N0I7J0OrS9LOCdDqm7TzBrQ6LO28Cu1cCq0e
SjvfQquL0c4F0c410erd//WczH89n0A7T0Wrs9POXdDO59DqRLRzO7S6Ca0e
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
z3y/uDJCMRjzLOS/MXQar0zZNKU/5lnI/6rwoupL/cWT+2GehfyvCu1LehWu
e9kH86x5j3DxN3QJD16W5Yh53p5Tp6ifWXV43fJAG3LdQMN/ogKeOXu7Q6bF
VsyzkP8KuCOoiVv6lJWYZyH/q8Hp5+Hy5Am+mGcN/1HVYEAno2Pd9s7EPAv1
vxosXzxgy7XQKZhnIf9NYFx0lXYHbaT1mYniusdAZn1GaJfq0KuJWWmcy2DM
s9AuCtgtt5vzt8eumGch/xVw+kXjz7vcnDHPKC7Lix2TTZc4YZ6F/K8Gd55P
7X+uuQPmWcj/anDv7UHWGT0h5jlSk/8msMqAuK2mjr0xz/p1q/Ur+FED5voM
rEOuGwjjjRowSDfp+PjPGzDPWxOr7vLeUwM++DP22rBLi5n6XAPuH7IFLO81
B/OsmY+AGrDLUHVM4f6pmGeBnxrQxnphckDrCZhn4Xerw1OPzbPc20jrM/lo
/YRZn9HwycUf7/FgzM9B/TDPHXh/Bhd/EyOdfvCKE80zF7/rkLGVLyntMc+C
76QG1DU5nMa9NjHPwr81YAe7pJdhl3tinvvwvhku/iLfPeNGXOqGedaMl7j4
L+vsHHint7Q+o6m3U83ghWH7ppPrBhr+bc3gty37G1dD4yj0HjQygz9is8fC
p76YZw3/BaZwxQSfA48UnnR9PmkKU70PrHEeNAnzrOF/pSm0UsKL49NG0XVj
KDe+a9zjrE8raX0mGq23MOszGpyL/9sDh471HB3pfObif9clLfqvB8Q8a/jn
4t/lcb/TELtemGehzpjCsSojK8/IbpjnCzz/XPyeRyILLsZ1wTyjeJVbGtY5
2r8z5lnDPxd/4b7iwekDpPWZpUuql/e7WxO2WwKW6lTdgXkW3nc1Ycw3z9qZ
maswz5V5/hdx8+tdZ1vW6zgX8yy8B2vC8Yd7Nt21cArmWcO/JXefNfN2evQa
i3kWxodmMGZ490qv9aX1GQ3/l8zg1MoFoXN0pPWZSeK6xxlmfUaDc/H7hOxa
vNcYYJ41/HPxv139cEC9oT0wzx94/rn4DTNb9HLaZ4t51vDPxX+sYGZbh+Od
Mc+LeP65+It6+o1N69cR86zhn4u/g6u+890T7TBvp1e2W9mf0PEiPPZa5MpC
Yv9zxL92PYYS1M7z/uNH+NMR/+7/xqnDm16W4aOD7f8lez+X6ViMNbqR6zL8
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
cQbt2diN9JehOE9GDupB+ssKxDh/Zjk/If1lKE73Nk53SX+ZjxinXnibP6S/
TIifm7cudNxluy0G8ynkuTG0OKDTh/SXCb9jDGcWLe5O+suE95QxXAq3R5H+
MiFPqsLfd5c5kf4yIZ+rwlfXvi0k/WVCfa4KO+3U8cD+MrTOwMVZe4Lec9JH
huK8OmLhYW0+srY+HTaSPjIXMc5lxtXzSB8ZirPFSb/upI8Mxdnh36a/pI+s
uRjn2K+/T5M+MiH+6nBOc987d3pLvkghzxVwULPy6TcIH5mQJwro4dMi+xLh
I0M8ua6Z14P0kWl4jqoGO9unjiF9ZMJ7pxq0r1o6lvSRCflsAhv1avY20oZZ
Z+DiDHR4nUb6xVCc69cua0/6xVCcSdNhiTa/WI+Wlc6TfjEXMc7RL78PJf1i
KM7gb++7kn6xp2KchVUNTpJ+MU08P2rA4me7SqxU+zCfQnvVgFFdLxiQfjFN
nHtqQOAXOIr0iwntWANGjn+Vu4zwiwnx1oBL5vacQvrFBH5qwDYO/hNIv5gm
/pvV4cTvTYKxXwzlJxfnn6hJrUhfGIpz9vjS1qQvDMVZ1mOW8iLhCysQ46w+
8c4Jbb6w+QXfCkhfGIpz9uS48aQvLEyMc+oVj+GkL6wfH9BUM9hW56r3ox/S
vFh435nBodGrI0wIX5gmfiMz+GlN+j9A+MKE/YpNYaWcCHvSF6aJ/6QpXH/u
rgvpC0P8TR/ddy7pC9Okw1BT+CItaQn2haH3OxfnjLe+eqT/C8V5tHPMetL/
heIssYyvSvq/UJxHZvkakv4vFOfFnB1Z2vxfM58ZVCP9X83EOH/G/3El/V+a
+O/WhFdb10z+ZyT5v4T8rwlDqpyPvkH4vzR5sqgmfO0wv9CC8H8Jdb4mjDF/
lr+T8H9p4resCePWHLQh/V9C/TeDK9o8vFhM+L+EeM3g2lG5HbH/C60zcHGm
rFzTlPR5oTh1Np00I31e3mKc1ZxvmJE+LxTn5RfbqpM+LxTnqV1FTqTPC8U5
37BWS8nnpQbOmhuxOi70HYHVDysrwNUgcHu0/+Sbm2W4ME6W+6Saaptfo7yt
8Hq5r+qVeL3yi3HlPcg/xe+vJeJXfL83CyT8TS3F+/RtF2NngfxNeN1P7j/S
9FPeN/RzREFN7D9C63gfwMupaw6QfiLh31LQODut8RPCT1QoztMLsxv5hBB+
IjSv3+V1qegRnkfXFuvzW2Dt2nVHPPYNoffCOxDb/syFEYQ/aIAYz4Mez2v/
Rv4g7nn7iLhNQJNpXQgfkL4Yp+eG3rqDCR/QPPH+lYZb11ASPqCHYvz3UuOe
mxA+oHAxzh/V18aHEz6gx+JzJXnP2tmM8AEJ7Sj3AaH1hE4nI5o8JHxAaF5f
v7hxZsJpSd+C/jv2PmgefS034+skwteD5uMPXMw+Sb4e8T5cP20YeLq3Nv/O
RLtBTUn/Duq/NjvXK/8j/DvC/cxhiM+isovYv6OuoL+g72hyHZT26xvChG5P
uf/bJ9Ox/M/3LwG6gW6vXiD/Dv4uVgLcKtn9VhI+HYT3i3x5OYXw6SDcOdUo
wgH7dIrxPv9p2c2GYj8OXpeQ1wft/Qv1I7l/RCuO18NfgBaqeW32If8IXl96
Aez2jNu7lPCJILyx8QIvfcIngvAvpzPu1E6W6gPCP1TZHBPjIvn4rLWuB1pC
8wrwKpr/h11vRN+z5D6LggrWD5uL11+dPiD0yi5Jv91YxB/XWTXyEuGnKBLv
s+JM0LD+2E9RjNf3tK9b/gIWrgfSlhL+CKEd5f4IF23vC463XxWsi+qI/8c+
r2YeJNOLovop902g9VW10yrFYeSb4PIBra8Oir097AbhU0C8RSb8zBmFfAoc
n/O1/S4X/yPxPv89ev/zcYqkk2wqrmvNuq+qHE/o8IV/VeDQKKtzewkdfqi4
nhO+7lwSqcNH61fZrbItSB2+dj1bsXgOhVwnj+ohWwdQ3r6M9z29B+vkUfxy
PfwcrfyjdennsnwOjW2r9/LybpkOE/2uQ/+/y0MI/TPiM+nLrhmk/hm9f20r
PUt1IvTPWt/v+Hnl+mf0/tWeb6yeGa0fynXFWtfzOVx7fzcV34/y+zzUxhvv
uxevD7h9PbsB0iHzvg8RrzkpaOQdQm+Mxi21mjlUxnpjXIfldRW9T2dE1svM
xXpjtXYdIx5HfQSZ228F1Cd0xQjvNVen12VCV4zwbTc2dvXAuuJi/L5m+Ufr
umte1NpO6oe3NLNcU+i+sYJ8+yzjU2u/4Hj4XoGPxkZbe2HeHgDrzn9aJmCd
MPqu8Race+ET9RHpgbnfDRPxUnD+5nNCx+ss5pvX3z0PNxI6XsTzrQt2PqMJ
HW+iuD4ZeGVUk+OEjhetc1ofPLif1PEK99OFcXPatISEjhetf/a4P7seqeNF
9aTeG5cxoYSOF72XlZNMMyQdL/qupAJ1K8VnH2D1t+76cOc+5ZmzOQl0fbA1
hOb+qYF6288w7VsVmg0dterVq2P0e+STCVTsePE784Q0TkDz9Oy2yoLlOZE0
D9w8zqO47xmD9D3MuEXuh61onNPPw3BUrO56Wb8T6gPro6wNDw9p/qrq8lBZ
vi2wyNB5d3aJLH8id967e3xxmOz+3xRzrXq0CpHV4d3jO99wib8qu49jzRnt
p81kcG6++cfKJ8h6ZLqsX3/o5zDyi+sF2e92hiow4NY1GQ9b85z0nC/LfUB2
cbcPzzh8VcZn+PwVE/aXX5HxEDNk1/icoCuyfsqeR49wYT+rH7I4KzqPxkH0
b9bcr3g4HunzuTi7iP6OIgv/d1bvsnGcL7X6ShpCB9P+l3y0+AXeij4XFeUT
VANhfyT5e0TQsX+X4ey5XQgX1lflz6t9PF9bnAc9B+lXZj1oRjzXFK3vXzXY
XsH7jj13DPFp1enkCfKcO5QPAxwz77sT5/Gh3/1WfVZR4DM5nxa9ijqR5ymj
eNpndYm89/OdLE9aljy2XOpTJOPBYkKR8ZlqD5n7KEHdjrOmqq6wdb42NAFf
86NtnzLXK2D5dP+nrZ+y8wILaNTvgT95PqYG5tct9f78Tj3OnqtbDBae+Pin
axnbjubQgTmvXIinCfcEn/PIc2NRPBN9Vn6Vx1MMajzr90h+fyPoH93qq5z/
2jAk9OZ12fNy7eLv1GXlelm7KMHTdbZb5byZws2LNlWX8c+116RvQwNl7cU9
VRezzetl7cLx9uXZuIz/d94qaMeK8uR/m58VtXtF+VZhO1aUVxXkz/+2X1SU
5xXlT0X5WRH/FbVXRXlSYV5VlCcV5XMFeVtRXlWUn1r6heDPPGIn/O/5wPx3
l+ETE+sweDFYcXj2ioEyvBT0MTx/tCeHC+dnIH1RKdgyoXJKV53j4nkYFhjf
O9zw4PSMaHwePcLnJfy903b5IXzOO8LzZm6eFX33AD4nHeFtfz0Y2+v0Hnz+
OMJjOi184jF4l+jf+4H5SNpr32+55xXxfC9diPA6cU5joy8lie9RA4wfGm3W
52WHM+J5SyYYt15cnqLcdUQ8H8gU42vHfa4ZrnNIPM+mJsbLms07/MJzL8OP
EtT46NsxT3cnw48SjKhdVhRYeTvDjxJ0N2+/oP/frQw/SpAVZRj10jmY4UcJ
ojomTfMOXs/wowTFvycVbly/Fp97jnCfXybRvtUDxPPqSvC49PvqzJpP3DIZ
PlWgpIt5QLBVEsOnCryrXXK01cgTDJ8qkJJVT6+k/SGGTxV42bz3TFPD3Qyf
KnC7+abTu7ZvZ/hUgbS0RqOCg7cwfKrA2tWjmj5ZvYHhUwWqnvDKf1NvLcOn
CtzqmxCxMnsVw6cK6A6IWPHbfxnDpwrkjbTaELJoMcOnCmw1VhS1672Q4VMF
orrDui33zWf4VHNjRGXW6cx0hk81iO+8f3XBkZMMn2pg9G7gfV3ngwyfajAj
qJ7jv63hDJ9qcGPq9dmKJ1sZPtVgWc1YxZGE9Qyf3HxlsFu7Q6MDGD7V4FRi
0e3HdssZPtWgRHnXObLQj+GTu09a5oGdD30ZPtUg8Fd088yMuQyfavAUhE70
OTub4ZN73gN5rS8/8GT4VIOx7/ac3pY4jeaTm5e5wqZL39on03WJw4N7Zg1V
JtSheebwurP73t6ZGkXzzOGfOj3u/3HgTppnDs9yCy4J+b2Z5pnDH0Gfq9u+
rKV55vCCbPs+7T6toHnm8EFferednulH88zhX4fcyUwrnE/zzOG5d7Osc47M
oXnm8L02p9bcmuFF88zhfaZ+LW8+fRrNM4dnr7c4F97Hg+aZw6vuGdZvUshE
mmcOf1Yzuu2QYHcmb/XhzC7LP1VvE8fwbwD9qwUMut4/lnkv6MOUtmuXv0xg
3hfc9QuXjDqax7YL7/dplrGk/M0+pr0MYF9/pxGvT4Qz/UIf/rcipGXy8m1M
OxpA5aTcd9WjNzD9RR+OXj3hXM73tUz7GsDYPs/mWlZdyfQjfVg/4M9lG8Pl
TLsbwKuNP7l8dl/I9C99mHT/3smmAxmcuz51yZfuNjY+TL/Th53Ffa3pPDGA
iypHwKLsGUx/1Ift9Y11amR4MfljAPW92yyIvuTB9FN9OCXh2Jjop1OZvDKA
AYt1e2cNmsD0X32Y1irg5mgwmck3A1j8qcWQrbpjmH6tDxunzjW693cck4cG
cGxbfz3l7+FMf9eHladEXpiUMJrJTwNYdapR2MhCN6YO6MN3f3uH9x88gslb
Azil489bL64NYuqDPmzb6E88DBnK5LMBfDytyqXhN12ZfDaCw6opZ1bxjWHy
1giuWgnvXZTlpxGce/Bz1UmbQpg8NIJnPO3G1skPYPLNCLa88Mbo8Do/Jq+M
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
pxoYR0zbxOvMKT65elsz5f6/d/bJNJ8c3q1p1yW7UqNoPjm8x5ZFl3g9OcUn
h2/ZXdUh9Pdmmk9ep12t1nteT07xyeHKywMm83pyik8OH1XvUydeT07xyeFt
jq27wuvJKT453CNxVh1eT07xyeFT/Qd48Xpyik9el64fWcjrySk+ef28fkA4
ryen+OTwbR4eNXg9OcUnh/uNKfo5ONid4dMA5nfV75HZPxZ82nRj39rw7z0R
7mhfsHXa22c9aZ4N4Lu2/9UvORHO8GwA668f5VUjegPDswFclDD8Lq/rpnk2
gOabbszl9ds0zwYwMvzkCF6nTfNsAN/a9e/D67Fpng2gU4eH3rzumubZAAac
ftKM11fTPBvAuW3dbXgdNc2zASyvUavk2+/hDM8GsG6tmEW8Lprm2QAanire
zuufaZ4NYMtJqzbwOme6DhhBjy45f4x8Y2ieOXxi7YNvKj96TPPM4e1d9xzl
dc50fTCCoYqYNF7nTNcHIxibbjqC1znT9cEIbp7i9ZHXOdP1wQhWDX8yh9c5
UzxzeIj+nx68zpmuD0YQFKW15nXOdH0wgg9sxr3ldc50fTCCTb/H6PM6Z7o+
GEHP7Ztv8Tpnuj5wz7s1sDavc6brgxE0sLvmzuucKZ453PvlylO8zpnOZ2O4
Tddyrlf9Q0w+G0OrZfUP1rK6z+SzMRzdueWY8lPBTD4bw6Tye7vPuy9n8tkY
Jtba94DXOdP5bAxv7QyO5nXOdD4bw82v2jjyOmeKZw4PXhM+ltc50/lsDCeY
Pl7C65zpfDaGVz6ovHidM53PxnDsvqSBvM6Zzmdj+O5O61enk5yZfDaG7bq8
z+F1znQ+G8O/yb1P8TpnimcODx/xeCSvc6bzWQGF99c+Jp8VcO59L+i04Q6T
zwq4at9n61E2gUw+K6DZsv6veJ0znc8KeOL1+UO8zpnOZwWs2y9jD69zpvNZ
AeNPtLXjdc4Uzxw+7GOkRudM57MCphTV6cPrnOl8VsCtjk9/5NxxZfJZAV/q
vbTidc50PitglRFHj/I6ZzqfFbDsuzqM1znT+ayAbjrdjvE6Z4pnDl/YQ2cT
r3OmeIY14DT7Y74xu3bRPHP46sYXUmsuvE3zzOH33hvl8TpnimcOt082mMHr
nCmeOdyt8G0Sr3OmeObwYqvGC3mdM8Uzh3+f3+kXr3OmeOZw5RSnRF7nTPHM
4d307CvxOmeKZ15fvefXdwenPjTPHH7zyEULXudM8czhI5f0zgtv05vmmcMf
5FQ353XOFM8cvtDx9The50zxzOui1Uv28jpnum6YwjSPC2M8DoUxdcMUrjoU
NUOtf5OpG6ZwXGG7+f65y5m6YQrrdDicxuuc6bphCo0OX22SnebB1A1TWCXu
3U1e50zXDVPo+HLeGF7nTPHM4XbJl6x5nTNdN0xhi6qblvI6Z7pumMLihRc6
8Dpnum6Ywl5fsp14nTNdN0zh/LkJ3rzOma4bptDaYu8eXudM1w1TWDLqeENe
50zxzOG1O4bp8Dpniud0MzjIZ3+bzctC6PEbh4/ccfzypGeLaT45/NwpxdD1
871oPjm8Rz3PIf+9nkDzyeE2u12LeJ0zxSeHD+n5Xyde50zxyeEum9N/JU/v
S/PJ4Q6jGyzndc4Unxxeq+spa17nTPHJ4b09bsfxOmeKT16P3Wh2Lq9zpvjk
8Loh5td5nTPFJ4c3qLtpNK9zpvjk8MJBGw7xOme0z4Xwv0vrG8I+QXKds7Af
h/z7tbCPv3xdXXO5Fp2zJkwtOmehveXr6sK+OfLv18K+OfLvF8K+OfLvEcL+
PiI/OsXgTaMtl3j9M9qPW8BLwfXj/ud4/TPaBxnhv+OfZPD6Z7T/LMIX6eyp
nGN1TtwXXtIvPdny6zivfxb2SbfE+GvxnAjhuSRddPdY1RteFy3skyvpoqv8
aGfM66I1fBK66P2VEq/zumhhf1VJ59PxvHlVXheNzoUScCWwXFl/Jq+LRufx
IHyRYdRVXhct5I+ki25TZdAxXhct/N0Q4+vE8yCEPJH00nZlyo68XlrYj0la
T/iduaw9r5cW9oGS9NILPsT86Ze2Bu8TLeAqMLvfj968XlpoX0kvvfZvXWNe
L625nNBLW697EcfrpTW/S+ilm2TlmvB6aaE/SvPZL2vfduX10kJ7WWHcM9N+
Ba+XpvoFNw43u3fX30d/L90vOPzHFZujkf/QeE+ap9xd79cqo/JqvJ84wmd+
vr6F10VT/YLDs5qN68jroql+weG/9kZN5XXRVP5z+ARv/Tu8LprKfw4va2c4
htdFU/nP4csnz0niddHCfs2SLrqzq3M6r4vW/C6hi3ZYnl04/cBgcZ9fSRcd
NNoe8rroAnHfK4E3I2h3q+6SxMz1AO3Xj/A+6SFLThT5i/xI+medYd7evP5Z
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
pTmItP4B3rObbnfu/cz/AwzdwKI=
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1: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
vxLtubTTomAd9Tq8Gm7M+DzMszSp8j6JYu2lwXsdiq9Xwh35X8GxK7/PYbyG
cM5ZFeuT5jGveFmV36Xe45wqn6P2yomr7tbU+xHblTx2ytcrb3+77BS/D6jy
70bB592Rem5pjm1e472JHeJ66FVynk1rYFl8lqc573j4LY0h/CLjuEZrk3Lr
snMjZc1njiuknyhfyJ1jUxvtd9SP66oP5ewq3+v94LW/W3Afa8d+3pU6X60c
tWImxfLdgzWUchrdgmM15a8GB9tPxSMtg/NUWiOKXb6KMYViC+lB5aNayT/W
eE9uXI1tiXJZB2re1nasoZjj3ML7QIpTzixsWxX7zCxscxVnnV3YTyg+mhr1
x7U876WF88uK6RQfKk4cRLtPgnMdynmcV3iPR3GT9KniHcU9ilOVA1EupHf0
WSdIL0XfpDzGpMLa4mq4V/QjypX1jHZVObTu0T4rb9Y3+ruT4MmFNc0ceEph
XXJNbs3Vh/vuF6zRlA9sHRx/yjd1Vf9rO55VXHsMY7cT7+sRzi9qvAf1TOr9
T9n5PYLjSOUS2wTr3L7w/rLn0Zcp73d+4T0wxYYXwMdxrfMq3rORnr0itR1V
XjeJWluauxTjDNlb7d9p/jYs2Z6vzp2juy3zvKtXsm29pPBemuJurZW6Jdt9
2fU6JfuJhanz98qBP557L0p28t70//epHsu9d3Uk5aEV338F/HHwfZUj7Fdj
fzSP9nfEuEC5I+USpd038Lthla+vOE77bdLyl6V+Vj2zNPMJhbXsdVz/9MLa
90b4+MK6di48o7CPV1w/q/A+ovIPG4PzbMq3tYzX1BieVNj3X8+5JxfWBPOk
ZTLPw1G5/bTe4xHwRYXzQcozXFg4H6ScximFNdwCaZ/Ma01jMq2wBp0Pn1Y4
hrwB3ptzzuH+jSuOPy6j/czgfcxDSp5P8ildol95sHD+S/mx7XNre8UvdTju
SByPHKuYVHvrlOdy3WElz5+B2lODB5S9D/4N13mn8H2Gxj1T7e3KhyoHNlt7
4tTPopyp8+EZiq3p3/CSc99b59bwin3WFN4nUE6+yB0jKOaan3oeKbZeUvhb
AeX9duJ/SxKvtSa5NZjWYIPcMYXyA41z6zGt6ydS+9zeXGeS8jjV9ss96Ev3
kr8DqJ07vlB8t1Vu/SYd1z+4/xqT+rnjIOUi/gzO102gvl7umEhx3/TCOSDl
x7Rf/DXX+Krw/u8JVR47jclgzj2z4j0s7X/Jfmq9ymfJj68onJdXXl32dXD8
7kFjrX3qEYn7NSi+a+2jyT9Oj7ntBv/nI2o8D/pSfq4xqrLeqRf9iPbN1a5+
XNey22Npe2Xhaw+M95KdH1DyPpz2uOfTtj3lE5m1xwUVz53DYg5T++bKIykP
r7FSDu2g4GsOjX0+Nto92b8pytmVPZ9Xx36qv5qHur7uE1LnM0fITxTOuym3
9mLmPmo8pVU1hv2jBtAc1b75tYVzkcpJ6lkbxGffMXf8qPhg19yxnvxO59z+
Whrkj6g/htDPLjFvoDV4VI2172jKI2qsd0fVOLfQLPp81eu7hiNrrMOkKUbC
u+WO1+ZGndwrvq/dc8d6slFHxnO1T3df4fyv8sCvFt4DUK5efdBzjKmxxpLW
Wsr/9s2dd5I9acnxdGK71CJ3Dkr26t+Z42X5ss8yx+/yj7051ie2jfvk1mPS
ZTekXi/q/3uFda1ykusK6w/lKt8trE2VV+yQO7cg26UcnHIxWg9a17In2neQ
H9Qams15VbnjYuXcSrnjZeUYk9wxsuL1nzLHtsof/pw5vlZe8a8sxuO5+ylf
dDDX/SZzXK880q/wBYlzkhO570/6zojyzyzG7IobcsfCyufU5M4VKCf2exZj
fLhjjDsUf/yRxT0O6n/InDdQDmdKxd92jKJ8u9qxd4+y50ufqA81n7Wmtd5q
cc61iXNxm+eO65VH3Sx3jkV50b+zmH+A09y5EeWX/nfNxf0D7ZVrLWhNTFaO
nnu3qO35oXnyD/f8LnNOQPm0LXPnAZTr+28W/Uhu39Ij2saQOyej/NX4ijXV
yOivlS9V3lSaQdpXOviTGOPkPO/Yiv2m4kFpg23jNQfW2AZp7Wg/V9/CvF94
ran//YJzl8phbk/ZnaO1conV/s7qJPn7eP8WJft95YQ/4ne/+N3Q9lHD1416
XmtJOkR58Q3cq21hHan9WX3HdSJt61ScT5TeUEzcPeoZ9blOjFvF7aLWkX9S
jKlc+qAa6xnl2tcXzjl/UuX9HelwfVOiPPuAGvdJtuKD4JhF35O0jflk2Wrd
W32Q9rm9iHtiqWMZfQOheKZ+zBs3LVsvyjfIRsnPSlt2Co7XlFPQt0zbxTxw
kxhTyE58pHxMjMEVi2ufWt8TfVj4e4ldqJtQ27ZMNk0x4BYxNlGM0qawNtJ+
t/K9+s5D3wR8Ffew1G/labUWtCZ6l/19l77z0n66vm/6gGv0LPt7JH2X1DV+
v/HfasfG0i9blR3bJpTjM+sIaQz5hpaFx1H6StpDa0H+qFGMhb5L/d2OYr0f
4DEVa0vlMeQL5Wu0b6LvNK6t8l5wwxjHaT5fXHg/SftNU7l3ddn71/qOSDGh
9qw1z7aLGrh7/A5E81DfwFxc5e8xWhfWtdrHV9vt45zUtxyKRbWnvG/U39Le
+satUbQV+r5Isav21sdVHPsov/FN4W+ztBa+LvzNmeaw8sbKIfeq8bc70qzK
H+gbD8WM+pZDOWHlk6WL/gd1iSiY
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtmnngVdP6xvf5yvfY6+vsYx/T77qGa55JmjMkFaFSQqVoQJEGIVM0UEpk
1iRSUSqhURpEIZkzJEqZXfM1z37Px7P+2N/vfta79nDWXut9n/d51549+rfv
V5UkyV/6U0v/j86S5GX9vygkybOVJLlOR4M0SVqqbVEpSQbqeKo6SY4RLtfo
v/q/ovO+6v+c+p6oo5/6X6O2D9R3jHAL4Q7Cq4SPUv+XdN5H/Z+RbbzwMuE5
6jNQ+FjhV4X7yb5G+BzhxsKHyH6k8DjhpcKzhS8Wvlv4CeFZwgOE7xCeJzxN
uC/X6x1b6reVCklyqs4b5kmyl8436Df00Xk/9b9K/S9U/+bqf4qOS3Q+TG2f
632PEF6tdzlC+A31ny7ck3cV/i+/T9dP1fkdajtXtsFlPUfPm6NnnKDzPXTt
QN5Vx8kV/4aZatu+4N92sI6HdX1ntV0i2xXCI4QHqX9b4Ul6Rn3hd4TXC7eU
/W3hy9T/ReHrdTSU7QS1LVbfQ2VfofMusi/DJvy88PnCq4QPF14pfLbwCp6n
Y5muf0FtjWXrozFqp/ffW+93oc4PU9uTsnVV/+UVv+PDqb8Z7z5ax2Sd36y2
7vw+4WeEe6j/k8I9dI9ddL991dZd55fKPlTnA9T/JNnbCp+oZ+2n4wWd36jj
XtnHyt5D9qn6TU2FNwtvEh7FHGFsmF/6HucL3yU8Tbiia2sL19NzNut+r8ve
XG1vyXaJ3metbPfrfscKv6drNjI3ZV8vfKnsLwjfKTxfeLrs/YTPoy31N85l
u0fXN9D5u2p7W7bvdN2eelZrtX2htl7MSf2fLry9+t+lY4HOH1Bbf9maCL/I
fNN1q4Un634NhTfKvkH4eNnfFB4o+/OsJ/2WI3X/Kh3j1HaecFuNZx/12UZ4
gPoPZr2yRumf+VteIdvV3F94HWtP9iuFu+j6BrpXjY5JwetjZ91vH+ZEjb8J
32aI8Cd6t7PUthtrvahvLNxBeM8qr6FndH0r9e+v/teqz0eyD9LzrmM81dZa
tnuF3xFeK3wV8yfzvbmGa9vovk11v13VVtL5BfpmJ+j/r7p/N62fa9X/Ztmu
Uf/T1f8a4ZuEB+NThLuyptV3Wx2T9T6TZF8r+xOyD5L9njgeS4UvF75K+AbG
R7id8NXMOeGrhNsLDxW+RXiI8JkVjyljezVzRr9viOxjdX6t2s6QbaLwKuEF
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
d3BauBIaCVrJY4lrw2g0aDVwKmq5aOhdqlxzRVunxkx+9WPMp/sH106ooTTN
zOnRTirBXB/NA20KToYWcr7sn1S7PoYezJ4C9IIfoh6Apk5u8kfMz9H0O+j5
F9VY698rc/2ofXA9lZoF+dxPMd9Ho+8m/GfM36kJ44uaBdeb8HcNo68kFyNn
Q7+kZkwut23m+l6T4PpzTeb6Y+Pg+nbIXH9sFMwX0WjRVdFXl2X2sfjaCjUs
rc/V1c6tyBHIFagBkPtsFayPPCv73olrhtQOqUlTl6A+8aTu1z3zvXfTsSp+
f3K7z1JrQ8xR5mrT4FpXmrne2FD4HOF/Z67PnxRcX9ol8t1WwfUkaoCThE8M
rje9Wu14Sw2rud6nW2ZtF00abfqfmjZzPbieh/5xI3NZ+OyKYwaxrm5wLKFm
ju8/Lri+R80CnZh7PpG5BsT+jv+m1gvRIND61ybWJtDc0d7R6KnVk5OhtaG5
kKvB+dFSyTnIBdoG1/vgxHBj6qZwQ/gXPIyc8ki4URr1T+E6wltS547kVOjP
1KLItdDo0EJ2Cta/zgneWwLHgeuQs9bV+Qepc9nDNWZnJY5RxCo4I9xxU+rc
ghwSLRHOBHdak1n721fH2sw1gSayfZ66VkDNCm2gKlhvI+dH6ywFawHkeM0L
cY9KxTUbcudvU9dyqNmQW/8vdS2Hmgc6I898PnMOiBZ7f+LckJwPrXdK4lyQ
GuBAfGFwbZD8hdhETk5uzh4V9qrAgb8tWfOAD5SDtTs0o+Wpa4JoSYPi930+
xgNiOLH8MfhX6nrJnZGf/ZqZw3wZXM+A2xxQdu5eK9Z/lhKTNVe/inrDGWXn
imgQaBHkG1OCvxF8kHzlvuA5AH+sW3btEX74W+Z9QbwP34868AWZ+cfxcfzQ
6Kjv1Clau6OehhZBTIdfFIuuNcHB4PbkU/cGzzH4Kf7y6Zh/ET+pp8LH4eU3
lswnGxVcQyR/Igf6Qva/qp0bkd/MD57T5H98z0XBNS9qW/x+xgLNAO2A/OOR
4P1L7KWhhkQtifElt9m3bG2FOiT1qg16t1Oiht2j7G9AXzjzjmWv31nBa5Z8
gpoG+VXromsd6JWsuaayf5g7F+Hbsmfkt9T8kfVBG/uj8J9zguc8/gWOCdfs
FbUyNC+0L/wP/IkaLbVach5yHzQEtIRJaGRl56ePB2u65KtoGuTm36XWOvDp
7C3CJ+Lrz9DzdtW7HyY8sWQfz14mfCS+H066NPojuCr+eW6w3kK++WjwnoSm
cXypyVGbYz7A9Xpn5lfN4no8WM/6peA9Dm9W+7d9EL8XtTrqafDPzTEmkVOQ
mzAnmBsjdNydmKPjXxkTuGXDqA/yDfmW5DTkNuRQ5FLsCWBvwB5F65mLyMeL
3sM3Ued50Xv7yF/Ze0GN/JPMOUG/gmMmsfOtascmfgO/5foYD+D8cP/rYryF
88P9b4jxZUzqePRHteczOQi5CHs62NuBpvJOye/LXiSeSS7I981rvL8K7WhY
jHdwNPL/kTH/xKcSf+DcrKdvgrn48Bh/yKHIpeDo5LdfBXN3OBa1EDQAuNeh
RdcX2H90WNzzRJ5AvkCuyh6qVVEPge+Qf7K2m0e9DT2CuYHm9mFmH4WvgtPD
7dnfwPPJs0eXrEmgTbCnIhS9R4q9Uhti/KO+jDbGfP8lcw5OLs4eiW2K5rDk
omgkcFv2D6APw4H+2a+gIy26P8/emFubIOcg9yCnPrZovkKuzRpYAN8oem2Q
E5DbdU+cK0zQMY/8WvbTc+c3rE04FFwK/7F36t+P9lhdY3+4vfoPKFkfp95I
DCOW4fNqiv79+ELWE7GM8fw4c30cPZeYRmxDL5oWXOMkP2cPGv6a9Y8fwDeQ
W6ERUwtnv+d3GrMKWkY57iFLzeHQ5tDc2MsFx0OLQ2NjbxkcCu0NzsTeHHJ0
uBSaHnu54DxofXAo9uaQk8Otbihbm4Mzj9J5bz1/96LXW6Pc64lcG42D+Y1m
u07nBxWt5bK/j1yHPaS92F+bmv+iKaFrobnemlqT3S3ynakxPyB+43vQ0tC4
qb0vL7kezR6l68peIzdG/gR3Y02OiXwE7ginRQtlzcJ10ZzYCwcnRotCY5wW
8wX4FTU7avGjE9fyqIFdFceH+xNj0WrQCIm9xFhiLZrMzmXHZLQaNEFiNTES
LQcNktiJJsLeYDQCtBI0mFkxfyIfQwOZHfNLtBH2J6Ivo38Rb9iTw94c9gCz
v5GcfUHMV8jl4RQD43yhtsCcQvtBk2SuEdPx5exdQEug/ke+SQ2IWhCxhr2r
++tYQn5asra7VN90ZMl8cV7Mj8mv2sfxYbzQkonFaHfoB+hRH0c+h09Bj0RD
I796KvJNfN51Md9FC2W/MbGUOIv2R43yvtQaPbVLatrUttH0D435HLl31zg/
9y16ve8Bfy5aLya3Pk3HkLJzRmrN6OHkknsVvf7RZ/csmrPxfGI63Jf5z72Z
c8w9agbD4nhRSyBnRV8nhyGXYe9W59ifvRPke+zlOh1Ni+eX/S7seV1bMubb
tovvN6zsvnxz4gM+k1h9ebAvpUbH/uth8XsxRufXeH0xduTM1FqpqZNL49P+
VfR44OvysveusJ6oHaFPoQ2RI5ArsGejGXy16L0caALTY36AVoDPmRT1KnzR
iszxkzjaN3cOy95gNCVyW+YYc41nVsqOMczVAcGxhz3Dc1PXpNlLTF6Or6Em
8FVqH16Jeh88jvEhdnaI4/n/l/09NQ==
             "]], 
            Polygon3DBox[CompressedData["
1:eJwt13e0lcUVxuGDymVx9R5yroXYsoJgAUuiFEWEpTSpooKCCmjoKEWlKpci
nQgoSpVioXcMVRFQkKYUoygaQUUEC2JFY03y7Mz9411n9m/ePTPffFO+U65d
z1t7nJTJZF6lkvRANpM5Jz+TeaYwkzlUkMl8TINymczh0pnMxXQJFakbxXcN
X5F4rLx8cR/6MzZX/TF5X1JfrBw2Dzsu/orux87GnsY+FH9ED2LnYs9ih8Wf
0Gj9/qb9ZtRWHxuxu8tkMpVKZTJv5WUyVQy8p/g1vJly51MzmU50SN4Y+l3e
zXS33E08w3m7qa+F3YQNEw/j+15cj+pSTf03wZeXMA+8U43pLZ7v/PbFftbv
u7RKPBT/Ss71MUbtrdDHhXIz8t5V/6PiQs/Vi84TP6ftIzxHqQpfG+19gE+k
N7U1jO+q6Ed7I+SeLJ5G92BzsJXYleJ2cnOet6l+ZqjbJ7e1cm3sFnNzxPg2
4vfx/izvOmosd71+78V+EtegRtiLWG/sfP7Zxvep+DOaqM0yWHO+FjRZ3VN8
f4v3K14l9yrx33Px8tPcxRw+yjcar44NFI+L6RCPpKuxAeHBSovH0LXYIGw8
dpr4Es9W0rO8h/+ELcK60X956lBzbLPxjcCq8PTHRsXaFTeTe43calTS3C7D
etIf+WYZ10F5H8Q6wCpj/eSOlHtKPAfVwAZjj2EF4iF0GXY/NgT7T+R63hPi
+jEv2GpsD1bEtxc7iDWWd5TqGcNf4r2p2yruQt+IK8ez8K2U2xn7QnxFvCds
KdYV+1ZcJdYktgqbRZWU52trAb2tz130sPJuvvfVNZTXlg6K5+Un/6zi/RX7
bFYu7e0bC9O+jv39dC7tuwZYOfM31JjLyztuDfVUt5sGqN+jzQN4I+0vwWpi
j8dcUXu5m7H7sI3iXXw1+F7B7sU2YC9Rf76tWA/sFfFevlp878U+x36lCtjV
4i+M7XN6LpfOlCZyO/F+Lu/yWL98S9S/pL6d+tWl0xlWhWcj7TP+svZCbc9z
SNyBPua5iKryzZO7TG5duVNivrCzeFZg9bFp2AKsLPYPrGmcidgy7HxsRzb1
F/2uUbdTvIWvm/ImbLe667CO9Jn4MroWW1y8BmMtzsylc7B+YTor48ycnUvn
ZdPCNO4Y/wXRb7Qrbk+HxBfG+tDeXDlvyBmk/p/Yh1hTnsNUJ94ltjzmO84N
+khcIdYg3xy5e+UOVP8G9gHWJJvOpzinns2lc6FRYTqP41x+JpfOsobYy8qd
lF+QuyPem9yaypvN/S956bw8Fvud7yS+22Kt8G3RzjjsFKwl1hHbWpDOkhL5
6byJc+cGfYzHSmKtxJ34tvFNwnJYB+xB7E3sX8XnxV79lvTe7yg+w/6At+dr
F3tOe49hedgd4s782/mmYmdgnbE+2NvYXdk0RzFXs9StFLfOpjmPuX8aWyUe
K/dk5duxDnGPyp2GnYl1wfpi72D3ZNOajbW7SN2L4qf4zlLuivVTt5+vTTat
z1inz8S6Fi/nq6c8FZuv7kxsMlaIdcR6YW/JfRIrwO7BesZcYDuxPtgObD9W
T+7r2EPYLux1GmBecmXS/MU8HqNC8at83ZVf5tmjrmbsLawDthbbhlXFNmEd
sXXYdqwatgFrj63BtmKVsSnY6VgnrDe2z/h2YL2x7dg7WN24Y7LpLIwzcYm6
l8RP8J2mfDfWQ90euROwU7G2WHdsN/Ya1jf2I/YuVl/u41g+1gbrhu3i24Y9
GOcytg+rzbcd64Vtw97G6mBLsVrYhHjnWBYbgf0gvpFuw9Zo73msSXzTxHqJ
fszpSuym+KaJPcj3J7mP0Y3Yo9h07Oxsym2cn87SOFNXyX0Cb4SNj/b4zhNP
oluxydhcrLx4It2CTcLmYBfE81IDbCw2AztHPIEaYuOwmdi54gOxP9yVZeKb
CFvmOYqw93kqUjVsLd8j9Fe5vbFhWInI5X2fpvOXjfvfmJ/Eb47vGb7ZfOXE
BbGu7MmvqZXzICteKOdyvgdi/8Y7ljsQO6Bcia6Wu07uLOrHtz7WKdZAPD7O
NWxUfJNgZxTfR9dhQ7BHYq611w+/AJuv/LVxfkN5njPP2bDBWO4yllLxfcd3
B99MeUu1d2k2fe9+Es8fd0WMRxsjsR+VG9DtMS/am8LbSu6MeAasUuxLaolN
xxZjFcWj5P5b3JBaxrPJHYpfydcHG46dJO6RTXM5U3/vxZkWdwR2f5w1fFv4
bhCPi3sBG4lNwk6Pc4huwEZgE7FCcXcqhTXG7sR2au9R7HpsOPYklhNPp87Y
Ymw9Vj2bvou/K37+mIehxjQjvmH4lsR9zndtrFHv8wrli83rJVQ9zjTsa76D
+ekbt6x4MV5NPEbuVP684u+DrtjSuN/i/tbHI9inytVjf8X3szGvw+7KT57w
9uL7Dv+W5qmroO5m7IT4e5qPXYjdUpjee7z/uVh5rBm2WrlFrI24u+OMz6b/
JfH/ZE4urZub+AYrH4n3T/Xi20t9C2y/9fNUibR3vuFbgF0k5yG+0Xw/FaQ1
fkV+Wo+xLlvxDcGOKl9D9fkW8K3CmvPNw1bH3WIsL2JtsBXYxrgzsBfiGx9b
jm3ALsPWY22x57FNcV5ig+lSrCc2GPtdH2v5bscWYuviXfGswW6Lb0lsbdw3
2fT/Jf7HHI/z1LMdzqX/XPHf61esC/Zx3JXe53G5B6i1eTizTDpT42wtHfcy
30fxTaLNSuIecgep+60g3T3989P3YHwX7jEvi7Cq2GjxFL5S2fTO78xPZ2mc
qev5iuL/AdZNXMT3i/b6Z9N7XVCY1kOsi4ez6f0vwn4Q/0gDsYpYd7kD43mw
1lTZmt2Tl+6+///niD7iLub7Urw/7spsWmMLC9P6OlG8N2OPzsil/xf11A3g
u1j5vrhTtfGz+v8BnR0dsA==
             "]], 
            
            Polygon3DBox[{{3896, 1810, 1730, 2365, 2833, 3895}, {4475, 2522, 
             2344, 2343, 2723, 3766}}]}, 
           Annotation[#, "Charting`Private`Tag$143647#1"]& ]]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1:eJw1mgW4VdUWhY/nXODA3oe97120+lQQ7MJEsTtRH4qFoKCCgR1YT1QkDBQR
UenusJWwW7ELQcUCBRSlVBDf+B3L77vrW+PMu/baK2eMubc699KTexQLhcLQ
UqGgv8KeoVCYkhYKTWoKheOrCoVhEnZX2U14kuoZeaFwY9nym1QfK/kjwuer
bK3n7lFn1yeFwvTcsjaq31S7AWr3luoX9Pt5ydfQl37PUT1T9XsqPYTfB6ue
p/Kc2k5VGS+8WqVOpVCYrXql3lOt/iYIT8vd9wjhS0sez11xTB+U/Cx9jFV9
lcrtGt8d+r2v2qxXfYved71kvVR/qjJZbT5Tfb/+P0r4cpW39b7LVO+n9rNy
v2df1S0lv1/P3qz5jpHsSpXb9Luf/neF8P6qH1A/o0v+3Td3f21Vv8/8VJ4X
frXs8b9W9jrfpNK/6LXqU/Q8pmQam/DoKq9Pb+Fr9N49UssHJp4rbXlmsfp6
RPU3Za838nNUmqdeg6vVfo76v1X4nZL3Yb7K6Spzc8+D3xdU+f+0m6e+3mbc
qrtWGfcqejwdVX5T3+tVOgmvUv2B2t2idh+yrnEPflZ5oux9fFL1PMnnRvn8
OA7ez973jn1Pyr2+y+L/5kT8Ev2rzcuqT9R7MpWZkvcLnue7cX3vKHq9mQfv
Zd4Tc+/L0rg2rBHrfWGVx8H8by/7HPUuu68xcSznV3ld/l27C+JZWaf/DSx6
37tJ1r3K/XAuukW8pcbWS2OrXeO7xJ1qFc8I7a+I63BhlHGPJqpuod/b6blh
nF/t3bbCQ4V7C0/R//+ncrd+N1f/ffW/Ouq/hXA/4bLw1sL3CNcVbiZ8lnBB
uKnwmcJ/VxcKDYU7sIfC2wsPEa6vNtsKDxZOhZsInyG8UW0aC58u/JdwI+HT
hDcIbyF8i3AttW8lfK9wItxSeIBwPeH/CF8vXCW8mfAVwkXhezXf6zWXQ3Lv
PWeGs3OL6uGaX594zq8peV+HZT7n96tNs1qFwsVapxqV8SrDVfqo3Z7qewpt
9OyjnO2S2y9Wyau8ttyrUSr1NP5Waj9I7f+n9tO092eyD6oPkfwZyUdK/ljZ
d+Vx1WNVVgiPK3vv2DfO16bq6w312VT1V3p2Z8mz1Oe0h8qd+v2RfvdVnz+q
HqBnrpPsYNX3qFwrfJDqT/S/fmrzE3cq9f1emlpPoC96ouNKXiP070A981DR
a8gc6R99OUvP7Ko2eRwD7++vsli/26r+WvU41VdH/cJ5vDCe2720R1P1/6Y1
vpvo519VhmrOK1UPK/tOcjdZr2/Upp72I63luz036oj6Wovp6rOR6m0r1qvo
17vRlXrPXZn7pX/0yGr9r6vq11X3Lnnv0Hero/5Ep+2n/82S7KHEe8meVqvv
JioteZfqu3Lv6Z3q/87ceru/cP94Z7m7nN/3hZ9KfK4/EH468Z14T/hJ4VOE
5ws/nvgOfSw8O/Gd+FD4mcT36SPhZ4UPEH5ceKhwn9z7syq3LXhH/zss2F7M
Fz6cNdaYxmHbVNpK9qjaP6xnh2e+74nW7VR0m/ATku8tPE34AeGucWzIRwhv
rrXZKDxS+D/Cf9OP8GbCfwlvVct3hvsyTPJNJd8g+VDhZsLrsePCOwlXqHOf
Yc4y92RUHOfF+r1E731L7TfXHHrqd0nnZG48V5upnq2yr3Az1TPiXaiveqxK
C+GS6vEqLYVr8X+VMZwH9bkL7YTvFt5JeDT7mFjnsSb3Zj776Mb7hCeqzTb6
XUf1BJVWwrU52ypbC1exZio7Cqepz/UOwklq32d74XrYVZXthOuyNprXRao3
0bz2UT1d7xqsMbTT/OurzFC79pK/I/ljcS++FH4psZ3+x5al1jPToz3HBmOL
35X8NMk7RL/lDNV1ou/VXnVzlYdL9qs4PwvU/vPoqywo2wawDgtT+zVToi1o
KzytZP24TO3uEF6uen2NfZfvtIf3lN33ANX9VHpyL1RPya0LuIuD1M8PJds4
bN350d69Hv2WN6I/0EVlJPtXcb1E7xhcZRs7Otq07tGuLYv2FN2CjeYuc6cH
qa9Vqh8oW2+g/1mj+frdUc++q/oc1Z2jz9cz8Vw/17sqms80yRtW24ZgW/tH
XTE+2ovD1W6u6rH4bPQR9+NAyZ/Ankh+hPA84XHCJwu/JTxL+Cjh54UnJL6j
Y1We1e+TJH9T9UzJj6ktH093ao7+d5jkcyQfw13T+enD2Zf8v6rflvxRyfcX
fkz4EfaQ/Vd5Xb+Pl/wV1VMlP074ZeEpwnUr9nvR/9gHMPr9mjhHbMO1SfR5
UtsMbEfjinUjvgS2BjsD5n9ptecyWeVY/e8lySarj6OFXxCeyLyEXxSeJHxX
PDN3l62vsK08y1kZF23HHLXfT3hT1XsH37dmOndthB9FBwlfq/obtX2dOyK8
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
EBf/H2xs8MI=
             "]], 
            Polygon3DBox[CompressedData["
1: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
cT+OK7nmZH+Oi/Gc+vabWI9Tr95Scf27Lta7ffUe1+hZXKXjGcbECF3X7cRw
jWfq/Cs0HihbD73Pfanfgq8/0/s5J76fifH5DNc50zR3qo6Pdd4I4bc1fkvH
nIL3fy7uV/yTeD5c50/V+VN1/hbNm6G1x0E+9Lx+EH64yjF8kcaH6vs2x/28
Y2o/xB/H6tik8T863tf4ZR3rNT5Y8zdq/vaav73mHyK8SXgH4R2EtxIeITxN
608jvlUcLxrG+JTXNcys8jstaLy/7H/JvrXsW8t+WnwfQ2M8aAYHiPyhKPs+
FfOJejH+ULMNiM/rjRifVsd6nPhGDdc/5rOJsreu+PlMifl+G+FRwu8Jv0c9
qHusK38q6vrWatxc9oLW3FXr7aL19hJeQS0rXE38FF5JrScchLcWHin8rtZ7
V+udxH4IzundZT+r4npjXKwHO1ZcD2wb65P1Zb87niHPcny1a/d+up6zgv1h
MLWafKcL9ZH+L8XXZD9E4z+rvTfYI/DMn6u9d3jeTwjng/cJ/obfHVX0u+Ud
j+M+9P2jNO5DjK54TdamhiG/H1O0L+FTszTn6KJ9BZ+ZJHxs0d/FO/5K+KfU
+ae+Pu+u9Trq/xeJ66l7Zb9P+HXhi3QPq3Q9g6td25GTWpKPOC9xPbZL0T6A
rw0M9g1qQmLrkcG1IhyNWuGIYO5WW/czUGsN0bq9hA/UGj2Fe+n4JTj+d6ty
jCU/jtH54/A1Pq+Yt8HfOGd28DPiWeEf8Kk/dUzT/FbEKI3H6vpGCNfReU9X
XBNSGz4cuRexFX47VPOP02eTNP8damHN7wqXCY79Q3W0r/Y1cq1L4jufG8zN
X9LRDr/RZ01kHyW8XLalwbXi2ngN84Nj9TAdHarto+zdAcG+C6cj1j4dzPV+
COZmXXQsCua0aAe9g7kue45YMSh4L8IR4Aq9grWEr/X/AdlHF/x+vxF+sOD8
SJ5cIzxV4/k6NlCHln2/3PfGzDkcLr9PcG7/sez75b43ZI6fqwpeg7WoIeDm
zYJrC/wW/6XGOiQ4hhBL9g2uNah5f5Q//VVwLcwz5FnOxb+Cay5i/6HBtVh7
zVmcOF7WLZpvXVblmN5EOBUeX3BN+0owBya3dAnmxnBYuPRDwdy2kHn/sI92
FL49NbeGM8Gd7qDmLZhz8z7uguMXrAGgBdxKDC2Yg8BFbo7vB00HbeeW1NwE
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
UH/QJ5ke68X/A//ag+Y=
             "]], 
            Polygon3DBox[CompressedData["
1:eJwt1nmUTnUYB/BrmMmYmbwzjGVGZW1Bi3IqpY5SaV+0qChL0aKIqLRqPRUh
ZC+FkiUxlqzZlZ2QiJJ9GWUXg/r8znv/eM7M87nf33Pve9+7vFVatW/cLiWK
op4qVXVKRNGgzCjalxFF6cWVvnhOFHVhv7FFJaKoXHYUdeC92TYWyUX6p9Wb
bCXbZ+i+0lF0D7ubDWU/sKlst/WXsk/YcNaf3SF3DfuYfcWGszbsdbac7WF7
2EvsK3aIJew3oX9KvcFWsL1ye+V22sfFrFs87zPW2/+7S0bRLrXW2rq2V5D7
2Wc6YlvDrCjK0Xc2b7BthayUXCn9/aolK2DLzFtm3ousL9vBUuRS9B1VH7ad
FWPF9A+oVmwiW27tcmt32c8lrDsbxvqxArnvrHmfbbKtrz7Vue/q/z9ZkVyh
3NlsADvOcuXT5O5Vj7Pv2WK5xXKt2StsMdvOtrNi1rZlS9hCnzvXcdwn15yN
Z0vklsjdzuqxj9iXbBhrx7qxTewEO8H+s74pm87WsAWspH18xHazVMd3jDW3
9gU2N3w2uU2sJevEFrItbAtrxTqzRewv9hcrZGt9Z2tUV8dcFD6rai83R+53
ud/lHmXPxMeylq1lWY6lPzvGyjqWVJnHVDs2m22U2yiXKdePHWVl5IrLNFPP
sx/ZBrkNck+wl9hPbCvbyh4J1z6bFp+DNSzNvLfZFnaK7WfPyL3FVrHC+Lss
JdeT/c0y7PcUe1luGDvMslm2PkOuF/uHZbLTcg/yJ9gktsK8Faw96842s5Ps
JGvBOrB5bDPbzLqw8ayYqmxeZX26ffTQ74+v+yK5pvxZNoOts3Yde4F9wv6I
r8mQO8vaD9kuVsLaIyyFdWSr488b9vuktS+zn9k2to09xFqzKWwVW8Vyrf2G
parq5uXK3Kka6HvJjZQbJfev6+/++L5cymayw+wONprNY5NYDfNmsnx1jXm1
zDqfzdJXUtey2qw6m6HPU/VYTXbcvMb6CfH9McO8anLTWUV1tdxFcjvkzte/
JddHrhs7wu5kY9h8NtnaxrxFPC8c81J2K7ucvcsGsMFsu7U12JusN/tYJo+1
SPPdq8XuhXx9I15H7h25/nKDrD3K72Jj2QI2hR0L93p8n4dnxHR2ns8xmZVV
V/gc1c26RV2mf1uun9xAuYasJnuN9WJ92CHzbmej2Fw2kd0sV5u9ER9zeO7m
2cd3LFPVso9KMvlsnD5L1WbnsPJstD5dXcgqsv32cb1+iHkTzfvGvDJyI1hx
VVUuR+5MZvKZvtMzYofarC8nN9LfNFXDtnJye8y7Sv+ZeWPNG2reOXITWY6q
I1dVriIbq89QNVk+O5dN0pdRl7NqLNM747j/95RMvlvCO2avfVwrM9D/4+N3
2T5Wnw1iE9gIVsG8MayUusiMPPNuUrX0r8t9KtdXrpJcActWl8lVkSk07zr9
YLkCua/lqshNZeXVlXIXhPMi92j8bPpFbr7cKfYw+yG+3+ay0tYOYUWsYvzO
u01dwd5jA+WGyCXkPmenWJ5chkw2+4KdZvksM7x31Ch2Mp4XvstwvYXr7l5+
lfNWM1wXbAZrGO5BVovdmEjuL+x3fbjf9WX51/4voaqZV5bVTyTPUThXy/mH
+hJyr/p/Aztq2w7zn+Pvs1/ZIXaItWXvsXXsIDvIGiSS90+4j9bY1kN/QyJ5
P4b7ch3rGd4J6gP/r2eHbTts7XWJ5PUervsV4b0Znpvq3XBdsgO2HSidfN+G
9+5/rpUzKis7+Xsq/K5KSfc8Vmfry6uf2E5rb3ReEvq/1U3mDc9InrNw7h4O
v3/Y1Pj7/YWdlnskttVsHjvBHoh/g4TfL7PYQXYb+5bNYQUscv6axc/78A5d
yIrkmsTP55VsDjvJHmKT43fPbHZXOF/sU/YtG83+kbuZjWAz2ThW1T6msQrh
OvBdXmhdE9UmvibDMa+Wu5s1YgPi+2gCO2DerWwkmx1bjnlD2RlWybws665X
F4R3j/pArrtcZbkp+lxVV66GTGnz0pzz1PTk+Q7nPVul60umJ38bht+IB61p
as1Y39kY1cp38j9+S5Ub
             "]]}, 
           Annotation[#, "Charting`Private`Tag$143647#2"]& ]]}, {}, {
         EdgeForm[], 
         Directive[
          GrayLevel[1], Lighting -> {{"Ambient", 
             GrayLevel[0.8]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNmne4VNXVxmfu1Dtz78y5FywUKQrSi71GsStdqgFFYwMVBBEVBAFF7EYs
KJDYY4mmqFiwxgpiV0CxdxBEUdEoKpL3l3fl+b4/9rPW2WefXVd519qn7bHj
B51ak0qlBmdTqYxo33Qq9ZxKXvyK2lSqjWhL0SGq+0Clouex1VTqU/EDRd+L
+rTK78qp1Gd6P6OUSt1UMX+vaFHvVqs06rmDBvtM/Ofitxe/Kvi9yub3FE0X
U6mfxdeIHp0230blaZUnVXJqv1Jz6iHaVvRb1a1TWaXnnjXmmfdC+lYpqAxi
zinPee+y58M8e6j9WvFf692dFdM3RUdp7BbijxYdptJc/HDRrvq+mfiv1aZ/
0fwA0R2rbv+N6ntU3X69+O81xmT1v0G0i+i5Kt/p3Q6FVOpX8WXNv5Pab626
r9S+q+rOV/lez53Snhv71kZz/pf4Weqnd9q8jix1mOgTKl+J3079bNL7j/XB
z6KzVL9RdNei+9tNdHu1SauvT9SmrtZzqBfdXfuwSXxTtSuK/1F8W/GdG1Kp
+drwdRrsmZCNb1Omz4Sc9Imz4VyeDH69+ItLbrtUdKXq3lHZrOfZJb9/XvR5
1S3mjPTcUfPSFFNbaj6Hq+5NlU16vrLk714XHRz91Ov5JdFXVH5MuW5l1A8S
fUulTnyXstt0Fl0RfYpN7Vh2myvU5xcpn9Enov1FX0x7Hh3Upjblb5Ep5Gwr
lSOrltnfi95Ssdztqn3aUfv2Tdpy2broPWwj+gBnrrK1yv7qawu9P0L00pJl
4U3RpTHuD3q+i/OP9idrjA2it2qc7cre76a1brs05tm+7P3bQvX90t5TnhcH
v0H8Uepndcr9zC1ZX98oWXffC73eWm3W6sMTtJZHVTcl9qRctP7ViQ7Qu6N0
0G1Fi2o/lrFEVzZ4XWvVUVbPJ6l+X9GMyhjx+1T97Yvq/xjRDzX2Mar/SPRX
ffOJ6OeNbr9K/Grxbzb4/Qrxt7IgjfuJ6HjJ4hkqvWWwkpz5ZiofqP0+2ovl
an+fvmvFmYkeHvYKu3Wzvl9FW9G0hOUd9XGI6CNq11FtWpbd36Ton7V8gYyo
zx3U7nLV9xQ9RmWZ3p8gOkFtNqu/IzT+SVWf92GiR+ndruL7q88xVdujQ0XX
J+pb/fRT+xP13Vr1c5Xo8SqrxV8pulxnOVrtP9PYy0q2v3Xq50Lx32CbRRtq
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
Myq1Oe/hbpwT8854XzdlLe/Ydc5pY+Jvvo34mn43xj4wp1/+Xx9fqmyp8p7m
8ZnoLaJL1cfb6JhoXvQdlTEZ7wV70pQ1ay5X5q0LfxS9L+f5ddGZ3puzjNyp
+stF98uYjsmbP0v8jLxtxG3iZ+ZtK/4qerue9xc/UGe4KGfb8BeV6XnbkPtF
z83bVsxU/Tl525fHxQ8IvaC//tHnZao/MW/9Rfb75n1uk8Rfgi6p/jHRG3PW
2ev0flDO9mR8zjqOrs8VHZizXbqa/nO2Gx213tnhU6cjb3nbNdZxXt5rmSN+
bN57OE38WeKXqc114q/N+ZyvF/1zzrJzht7fkPP5zRI9Je8zmCT6p5zlbKL4
eTmf3y2iU/O2peOwJTmfZSfN7Wr0XfQu0Yv07jfV3yp6v563QJ7E35GzfFwo
/q85y9Ns8XfmLCsTxM8NfbhJdHLedvxM8aPD/qAjC1Q6q1yg+uNV/2HWNu+E
sHu1EQOWRCfKRu0mnTut6pgKX7NL0X6Z2KFetEvkB8gTPKg+nstZJvctGtv3
Kjr3NSVw0LDA1eDrc9jbvH3JDPHz8vYTi/KWIeQHG3xV2OGpanNN3v7gXPEL
8ra5/XI+b856QM5ygAwcnrOsICeDxc/P2z5fnLNNx55/HngMXLZLg/12beSX
ttXcTxYtxJ4QH7cM7AEGWRKxCTHKP/AFYRfyVWMJMEXrBufEON+/6d3FmkM6
Z5wJTvhe3z6U996xb0tyXj9rvwd/FLa7V9XxLPmJXNWxOTF9n8DGfcHMmusQ
0TGi52HP87YRi3Meg/7BA0eqzUmiS7XmOdgo0etE52WdlztV58rFRRO1ma2y
t9ofBF5uMH6cK7s9S/U9i8aHLevtR/AnHbK297PVZqZoc7XpVXZ+FdxPHozc
NfHqtuS+ap3rhh+gPg7TXPvXG7+CY4kxX64Y97aoOsZgvcSPyyuOF4grV1SM
c4g3b4s4mfiltXxQL/X7SZ1jEuIR4jiwMpiZePMajfcH7cFzatNY6zx727Jz
v2A+8n7kdYn5dxb/pNrtm7GNmlp1roeY8QXsut6dp7U/K7pf1j6UHDv5i524
h6kzXiBH+bz260c9z2rivP1TMe67Ddat9Y2OZ8gdbVl2Dh+8S76xWa1z8vTJ
2MyB/Op2EZsTo28fMTWx9d4qJ4o/u8F5RXIidXGmM8DCej9ez+N17l3w8Zr3
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
8vDc/fwHyfWLng==
            "]], 
           Polygon3DBox[CompressedData["
1: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
UV9Qji47hu9KeebYfKbs8nLmd2ArsZuYRGzyBfJdtG/GP4q2Y6CBjcSAY5Hf
y7h/U4uvHawfrwbjim3f7Yi/EOs4J+c2g/IC3n8g5T6tQv/gZ0MjWyH5O6Fr
xV/oywDPQPqfwv6+yLOvaH8A8nLhrw4qJ8dhruOWamIiYyF9tHhodjN1KoU/
03bNcZjrEH+IFa/2TEF+TTUYW2ztGXhlNT6/p8DYu1Onn2sJ7QG/JzQffjp0
PX3dXk3MZ6xXd2+rOeNbBcYXa02tRSbmEjOIHezDvu7g+Xm1xH59q8G259fC
i3Hd08NY/0mN7LUxmLGYa6gfN14wtyH2MjZ9Ff3YGr6Ttm3W8TTW4pNS8PuX
rgvPRjVyZu3enRjZ+Ex88Ab8i9jA/p6vYvx64tV3jU1KiQcvoLwQfpb5Isoz
qXOAuIH6r9Zz/q0mnqXe0MUST6xK+T/G9ZQn8s7lGsH3e8FPgPZoBN/uAX8K
9d4rBb8Z3x9Wj227FrP0efXomvHU9UXOzNzZz7uD5fRfxvaHsUanwi/bm3Ph
TeqMg7+hHj21D/t63pwn/EhjFPhnob0p7ySGMr7VP1AeIQauJ78wly7vLSdf
8rhrxLsupM8n4Kcg/xj5X5EP7oztD6C8A3M8y3OnFd35D3UPNH/Ziu5/6jpS
XqoRWzSn0g/+XJ4/WEkO7xz4Ya3k6i7mPZcy32VaySWeUayvZ7Jns3tufmtd
+lyVfk7l3dOoP7CVWNwxGs/pk/XNk8TT7cRanmViiPubscGTkC3XFdvUh+nL
1ijsea9GsIKYYSz86EawhJhiF/ifUOe6cjCj9msOS6xVKed87uJ9VxTlGc34
UH3p6gXe0cfqa4cW8Ys2q+2uVuCr82jzDaIXKa9JX4OQn1xODGQs5J66t/uw
h8/Br9Qb/V6k5/DL9U18pk2+Av95c1EqelG8+QX88834Dn2IOMB8yOBSfIL5
txcK+T+hi+D/3Iy+f0qdM+Gfa8ZX6Y/0Sy81418XQufCP9FMrPMwdDb8Mp2L
wv5F8eigIpYRu5nzMvf1YjP++zVoWjNxotjsHvFWPTksJ7BZI7mtn/LfvxS8
uQ38h/VgNWO0j+APb+WsrCLbvTdn5jhk9UbO0nns+xj0Y1/qXtKd80VsZI7b
XPdnPB/aJzHjfHPAnZnbj8zhMb4Ve2Nf2tl+8Gu0o2tiCLHEmu3YqhhBrKAP
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
Huylf9PPLeP3FB3J0frdgzlic8V+5HZ8O+vh/MXI7r856106sobmsv9UD3bz
ft1vFcxfnVhODDKzmRzGWc34dHMbE+rJrW9gjqgeDCOWWbqR3OXgRu5WzTeZ
dyoV3yJ9LaZrJA8zvThfvKs1D2M+xpjW2FYcLB42/+Dd6+aNxNfmM7wL27uR
s1r71w94b2NsoI8ayFqsbJs+yUms4vncCFb02RC/U6oH24rJ94f/Xz2xvPpl
btocibmRm8u52+jTyNjFyJVGckTGbvrg/o2sv9jYGODhruQMzR36TZvftm3f
CBbQHrVLzxt9uT5UX+p54bveLOduRp1UN5eGlujO9yX3Ufd817o3cZbxlnNw
LpfWg/XF/MYC+mh9tTpuDsm7VL+1sM3gwp+bXzqhkvXSR+or/UbP+wu/b1Nm
DGcsd2U73xF6R2F+T9xhfux03rUX4zmRPk6o5z5n/+7c7Xg2GNMNKWImYydz
/J79fvPheByXd72Ld0dXzT87X8vO3W/a/A7R/Jfx6cwiHtXn6Hu8g1F/e/sm
VlZnzbea03L/zHn1dCZn55lnvGdu/l1jlnIw9mz4T7qyvtqQ+3diPblFv9X0
m02/cfK7C23a7zn0KWIxbUrb8k5L7OE3itqbmNTz3m8Eb64nJjU21ea8Tzqw
HttxvVw376i0p4Pq+XbIO3RzscYgxtdX1BNLGVMZe51Zj66Jl86CX4M5moLy
jDQfZ4xprKnPua2eO1W/tSt3567VM14sZc5A/3ZKO9866aPNR/4f/yuqUQ==

            "]], 
           Polygon3DBox[CompressedData["
1:eJwl1Gloz3EcB/DvDtv82f6byVFs/5H7mg0ZMoVGLQybXGOO0MzZKCXHIw+k
5ChFiVA8lZJbOeKRMHInyVFzNOSK16/fg3e/z/vzeX+u7/f7/5csWTtzTXoI
oQLawc28EFJpjJwQ/mWHsC4ZQlVBCDvYJ2BEZghb80No5h8jcW6HEP4mQuiN
l/IXdwzhNezOCOEQXih+TL1a9WbDvNwQ1tNmsjNgkdgGfDLdOHwsdNF+Er6J
f6we89hp0Bd/bpbu7FmQElvBV2PmQjkF7fU2yx+8s/hxtReqtwDm67tY7iM7
zMjit+x0PCX/h5yLMFq9jXgJ/wLxO7R3s2PdE0ioeZAuTd1yvETN0+IzYaPc
FN4P6p3RRb4LsAxvM89QMwyBJrkJPfL40+kO0xyEpXiLb7O+TeZ7I/YM79fJ
WfpuhgaaXRadIv8T3gp99F2JbzHPfft3haN6jOObCt9o2qI6dKvw1TCYfcge
FfapwT+4pwr9TmbH9xzdd9Q3Tb8qKDLTRL7rdNeie6VpiubG2yfjnQbZbSCM
pLtk3zI96tQfDy/4fvPV0+XR5MIt/Hl+fAbRWfzwZm7jR2CvHsVRX+hvjmF8
ReJXoVpsOz5N3UI9eqvVCxbSnlLzvXfw0m6voEXfcvPl0M4Rr6TfEu1LV22W
XzQ/4THdbt9SdYZBnVgLXsa/DF+aE9fY7+zHJ+P3HL3rtzQZeGUyfmvRm3vH
l4n3hO/sC4n4bfbAR0VvV61u8Jn+mDka+Qea66Pz/ADd8K/8s6OzUi8Xnso7
oMhOOwyQu03sHt9l5zHBW6nMin9v0e/uL+xkN6p1BZbLGem8Uvzf4KzYObxO
jwfeyhvzzVCvFS/Su5b9kG9XIu5xQ06DOnvgvNxWvCf/Pm/iTLv4T6MYz5b7
Xs6DRFwjB//CLmJ3MnMB1Jvli9617nw4uzTax/3+Bzg0iH0=
            "]], 
           
           Polygon3DBox[{{4575, 2879, 2880, 2074, 2073, 
            4406}}]}]}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl1EdwTWEYxvFPSyQkeidKRJcZvfeeIBgs2GChE2MssLPRZmy1PTMWNgYz
ET0hCEEQiUSK3ntCRPudsfjf//O873fPOffmTrqvyFywsV4IoYOXrJgQorzd
y1s+mBBCcz6hH5K7yiflw3KqnNYshNP6OHmZXCvPlpfLdfJSOd/ZtVzKZdgm
/+DdHJsYwgFuy0c5hU/xUM7lG5ziOj3qh3BPj+MZem5cCPf1K/yAr3IR5/FD
vsbFfJ1Louvwo+hZ+CZK5VtcxgX8mG9zOd/hCr7LlZwVH0Jv90x27yo9nmfq
GZ6tUJ/EOTyYT3IyH+HWvJ8b8S6u8ZmrsVUu5jXR8/ESzuZ0Ps5jOcd7urjH
QHmQ+2XrbfRjSDLb2thn97caF+u7w1O5OWdgn2s043dmuRgrf+MnSJS32M/l
BLw1y8EY+StXoalcyeudmyOPxgU9ntugCfbaVZiNkmdjJM7rjbk14rDHmXKz
EXI6huOcHsOb7FpxLB6bDeM0DMVZfaN9I/m2XIYCDNF3mmfLDeVbXIqbWGc+
2OyMXJ8/8g+8Qj4y7RuYf5C/owYvscr8RvSbt8tsEcJ7+Som6dX8AisToh9q
CM/l+TwPF+XxPBETsMOZZ2Z3MFW/x/24MPosrpvHG5zpa/ZG7sWvuR3fj3bO
FHF//QFP42t8CZu9r4X+UF7oXDHX4icuo6Xdl+g7sCvhWfpaeSZ/1gdyKgZg
BtbYTedPdl25G5Kw2rwP98Zdu8682KwLd0IKemIKOmCRXUdujx7ojsn4HX1P
dn/4On7hL+pi/v9/+QcMyJjY
          "]], 
         Line3DBox[CompressedData["
1:eJwl01dvjWEAB/Cn63ScDp20B1WrRqlSe+9ZqlZtSluztV3aIeEj+CBuJBKJ
RCKRSCQuXJAYtfeev4eL3/n/n/G+Oed9n1PT1t3SlRZCeMgVJV2eyguhR142
fpQdwmOe8JQentFeHMJz+YKXvOI1b+iw9la+4z0f+MgnOq19ll/4yjeazX2X
P/jJL37Tav6PDDkhpJFOBplssJYlE6zXs2UOueSRJJ991gpkIScKQiiSvSim
hFLKaLGvXFbQmz5UUsVJ16XkOnv6yn70p5oB1LDHnoFyEIMZwlBqGcZwTtsz
Qo6kjlGMZpX71ssxnLGnQY5lHI2M56z5CXIik5jMFKYyjXPWp8sZzGQWszls
fo6cyzzms4Dz5hfKRSxmCUtZRhMXrC+XK2hmZXxG8buyy9pquYa18bnQGt9D
fC9sZLc9m+RmtrCVbWznorU2uYOdtNNBZ7x3vDY+Ty7Ztze+Q/bTRTcHOBhZ
PxR/I0c4yjGOx/fg3DQVhfDAGc6k0ME2DAnZaJzKNWd8X6/S3Src0yv1fL0h
GcJdYxHqfdzR/S1CnX5bty3U6rf0itx/RzTc1Mv1eGRv6GV6Qr+ul+pZ+jW9
RM/Uq11/1ThDTyX////+AmMQWtc=
          "]], 
         Line3DBox[{2318, 1754, 1840, 1839, 2318}], 
         Line3DBox[{2316, 2315, 1841, 2317, 2316}]}, {
         GrayLevel[0], 
         Line3DBox[{1018, 607, 3330, 987, 840, 1017, 1216, 1613}], 
         Line3DBox[CompressedData["
1:eJwV0VlXjVEcwOHdoMFaLnyEvlK37nwAwzJUChnL1GBokjmE0kgZSioSIpSk
KDJHEUqJet6LZ/3OPu/e/3edfVJWrk5dFRNCqGRpfAiZsSFkJIWwiUyy2MwW
tpK3LIRs3cZ2drCTXewmh1z2sJd97OdAdJb8aJ4ZBVrIQQ5xmCMUUUwJpZRx
lHKOUeDscT3BSU5xmjNUcJZznKeSC1wk3blLWkU1l6mhljrqaaAx+t32XtGr
NNHMNa5zgw2e39QWWrlFG2m+v63trFkeQod2coe7dHGPbu7zgIf08IjH0R2Y
0atPeMoz+uhnrZnPo//GngF9wSAvGWKYV7xmhFHe8JaNzozpO1aY814/8JFP
fOYL6zwb1698Y4JJvvODKdbb81N/8ZtpZvjDLHP8je7Jvnn9F73f5/+6QEh2
V9YxGksc6dbxuoQEMqwTNYlkxhJDWATkgXZV
          "]], 
         Line3DBox[{897, 650, 1149, 889, 1034}], 
         Line3DBox[{3996, 665, 4242, 897}], 
         Line3DBox[{4010, 680, 3996}], 
         Line3DBox[{4024, 695, 4010}], 
         Line3DBox[{4038, 710, 4024}], 
         Line3DBox[{4053, 725, 4038}], 
         Line3DBox[{4068, 740, 4053}], 
         Line3DBox[{4083, 755, 4068}], 
         Line3DBox[{4098, 770, 4083}], 
         Line3DBox[{4113, 785, 4098}], 
         Line3DBox[{4128, 800, 4113}], 
         Line3DBox[{3088, 816, 3089, 817, 3090, 818, 3091, 819, 3092, 820, 
          3093, 821, 3094, 822, 3095, 823, 3096, 824, 3097, 825, 3098, 826, 
          3099, 827, 3100, 828, 3297, 907, 1134, 829, 1104, 944, 4142, 815, 
          4128}], 
         Line3DBox[{1060, 872, 1644}], 
         Line3DBox[{1103, 943, 3088}], 
         Line3DBox[{1018, 1211, 1392}], 
         Line3DBox[CompressedData["
1:eJwV0XlTSFEYB+BjxozRjJl8BDN9olIJlVKKVNYSsoRsKWXfKUsha9YISSp7
1mRtfBDP+8czv3vuOec9975nTmltds20lFI3WdNT+peZ0vkZKRXygDOsZ5iX
bJqV0gt5l4Xc5x4N9DHEbepYwB1Os44W6mlT47m8RT5HOMVR1nKTQW6QxyFO
cjjOsXeNvM4zrpHLAU5wkNX08pSrzKXdvg65hFWUc4WcmKOMlSymw9rLMju+
le3sZjOlcZb5/XIbu9gZfYmzvS+RrRTNTqkpksc008g+NjLKCPN4yCP6Y06N
DbKCAZZyicrot5rF0QdrLsqtXGALZ1nGcrqp4gmLKIge23NMVsf/q1Mj97CX
+RxnR9y7uVr5mRX8pYcpuvhDsTU/5S/O8ZtOfvCFMV7F2dZ9la8p8fxGfuNt
9NH4nZzgffTd+IP8znjch/FHOcknMmam9B9MT2kz
          "]], 
         Line3DBox[{1103, 1215, 1394}]}, {}, {
         GrayLevel[0.2], 
         Line3DBox[{4433, 3480}], 
         Line3DBox[{4437, 3481}], 
         Line3DBox[{4438, 3482}], 
         Line3DBox[{3501, 3687, 4666, 3500, 3686, 4665, 3499, 3685, 4664, 
          3498, 4735, 4481, 3497, 4734, 4480, 3496, 4733, 4479, 3495, 4732, 
          4478, 4663, 3494, 3684, 4662, 3493, 3683, 4661, 3492, 3682, 4660, 
          3491, 3778, 3813, 2736, 3490, 4829, 3777, 3811, 3776, 3489, 4828, 
          3775, 3809, 3774, 4461}], 
         Line3DBox[{3515, 3691, 4671, 3514, 3690, 4670, 3513, 4742, 4487, 
          3512, 4741, 4486, 3511, 4740, 4485, 3510, 4739, 4484, 3509, 4738, 
          4483, 4669, 3508, 3689, 4668, 3507, 3688, 4667, 3506, 2543, 3505, 
          4737, 4482, 3504, 4579, 4736, 3973, 3503, 4830, 3781, 3814, 3780, 
          3502, 4572, 4848, 4436}], 
         Line3DBox[{3529, 3693, 4674, 3528, 4752, 4495, 3527, 4751, 4494, 
          3526, 4750, 4493, 3525, 4749, 4492, 3524, 4748, 4491, 3523, 4747, 
          4490, 4673, 3522, 3692, 4672, 3521, 2558, 3520, 4746, 4489, 3519, 
          4745, 4488, 3518, 4578, 4744, 3974, 3976, 3975, 3517, 3971, 3972, 
          4743, 3968, 3970, 3969, 3516, 4832, 3895, 3896, 4408, 4459}], 
         Line3DBox[{3531, 3907, 3911, 3964, 4858, 4577, 3530, 3966, 3967, 
          3965, 4753, 4576, 3532, 4496, 4754, 3533, 4497, 4755, 3534, 4498, 
          4756, 3535, 4499, 4757, 3536, 2574, 3537, 4675, 4500, 4758, 3538, 
          4501, 4759, 3539, 4502, 4760, 3540, 4503, 4761, 3541, 4504, 4762, 
          3542, 4505, 4763, 3543, 4506, 4764, 3544}], 
         Line3DBox[{3548, 4676, 3694, 3546, 4677, 3695, 3550, 4678, 3696, 
          3552, 4679, 3697, 3554, 4680, 3698, 3556, 4681, 3699, 3558, 4682, 
          3700, 3560, 4683, 2591, 3562, 4684, 3701, 3564, 4685, 3702, 3566, 
          4686, 3703, 3568, 4687, 3704, 3570, 4688, 3705, 3572, 4689, 3706, 
          3574}], 
         Line3DBox[{3573, 4778, 4519, 3571, 4777, 4518, 3569, 4776, 4517, 
          3567, 4775, 4516, 3565, 4774, 4515, 3563, 4773, 4514, 3561, 4772, 
          2590, 3559, 4771, 4513, 3557, 4770, 4512, 3555, 4769, 4511, 3553, 
          4768, 4510, 3551, 4767, 4509, 3549, 4766, 4508, 3545, 4765, 4507, 
          3547}], 
         Line3DBox[{3576, 4520, 4779, 3575, 4690, 3707, 3577, 4691, 3708, 
          3578, 4692, 3709, 3579, 4693, 3710, 3580, 4694, 3711, 3581, 4695, 
          3712, 3582, 4696, 4521, 4780, 3583, 2607, 3584, 4697, 3713, 3585, 
          4698, 3714, 3586, 4699, 3715, 3587, 4700, 3716, 3588, 4701, 3717, 
          3589}], 
         Line3DBox[{3591, 4522, 4781, 3590, 4523, 4782, 3592, 4702, 3718, 
          3593, 4703, 3719, 3594, 4704, 3720, 3595, 4705, 3721, 3596, 4706, 
          3722, 3597, 4707, 4524, 4783, 3598, 4525, 4784, 3599, 2623, 3600, 
          4708, 3723, 3601, 4709, 3724, 3602, 4710, 3725, 3603, 4711, 3726, 
          3604}], 
         Line3DBox[{3606, 4526, 4785, 3605, 4527, 4786, 3607, 4528, 4787, 
          3608, 4712, 3727, 3609, 4713, 3728, 3610, 4714, 3729, 3611, 4715, 
          3730, 3612, 4716, 4529, 4788, 3613, 4530, 4789, 3614, 4531, 4790, 
          3615, 2639, 3616, 4717, 3731, 3617, 4718, 3732, 3618, 4719, 3733, 
          3619}], 
         Line3DBox[{3621, 4532, 4791, 3620, 4533, 4792, 3622, 4534, 4793, 
          3623, 4535, 4794, 3624, 4720, 3734, 3625, 4721, 3735, 3626, 4722, 
          3736, 3627, 4723, 4536, 4795, 3628, 4537, 4796, 3629, 4538, 4797, 
          3630, 4539, 4798, 3631, 2655, 3632, 4724, 3737, 3633, 4725, 3738, 
          3634}], 
         Line3DBox[{3636, 4540, 4799, 3635, 4541, 4800, 3637, 4542, 4801, 
          3638, 4543, 4802, 3639, 4544, 4803, 3640, 4726, 3739, 3641, 4727, 
          3740, 3642, 4728, 4545, 4804, 3643, 4546, 4805, 3644, 4547, 4806, 
          3645, 4548, 4807, 3646, 4549, 4808, 3647, 2671, 3648, 4729, 3741, 
          3649}], 
         Line3DBox[{3663, 3787, 2743, 3662, 4819, 4560, 3661, 4818, 4559, 
          3660, 4817, 4558, 3659, 4816, 4557, 3658, 4815, 4556, 3657, 4814, 
          4555, 4731, 3656, 3742, 4730, 3655, 4813, 4554, 3654, 4812, 4553, 
          3653, 4811, 4552, 3652, 4810, 4551, 3651, 4809, 4550, 3650, 4831, 
          3785, 3784, 3786}], 
         Line3DBox[{3771, 3927, 3928, 3926, 3808, 3758, 3919, 4851, 3918, 
          3673, 3807, 4656, 4563, 3916, 3908, 3910, 3909, 3806, 4655, 4562, 
          3892, 3834, 3863, 3862, 4844, 3805, 3757, 3889, 3833, 3861, 3860, 
          4843, 3804, 3756, 3886, 3832, 4567, 4822, 3859, 3803, 3755, 3883, 
          3831, 4842, 3858, 3857, 3802, 3754, 3880, 4836, 3830, 3856, 3855, 
          3801, 3753, 3877, 4835, 3829, 3854, 3853, 3800, 4400, 4846, 4569, 
          4407, 3852, 3851, 3799, 4654, 4399, 3873, 4463}], 
         Line3DBox[{3779, 3681, 3772, 4827, 3488, 3680, 3770, 4826, 3487, 
          3679, 4659, 4565, 3486, 3678, 4658, 3769, 3485, 4825, 4477, 3768, 
          3484, 4824, 4476, 3767, 3483, 4823, 4475, 3766, 4856, 3942, 3677, 
          3765, 4855, 3941, 3676, 3764, 4854, 3940, 3675, 3763, 4853, 3939, 
          3674, 3812, 4657, 4564, 3938, 2521, 3810, 3762, 3951, 3935, 4401, 
          4462}], 
         Line3DBox[{3914, 4409, 4456}], 
         Line3DBox[{4457, 3936}], 
         Line3DBox[{4458, 3937}], 
         Line3DBox[{3996, 4169, 4943, 3995, 4168, 4942, 3994, 4167, 4941, 
          3993, 4166, 4940, 3992, 4865, 4584, 3991, 4864, 4583, 3990, 4863, 
          4582, 3989, 4165, 4939, 3988, 4164, 4938, 3987, 4163, 4937, 3986, 
          896, 3985, 4862, 895, 3984, 4861, 894, 2269}], 
         Line3DBox[{4010, 4173, 4947, 4009, 4172, 4946, 4008, 3135, 4007, 
          4871, 4589, 4006, 4870, 4588, 4005, 4869, 4587, 4004, 4868, 4586, 
          4003, 4171, 4945, 4002, 4170, 4944, 4001, 3128, 4000, 4867, 4585, 
          3999, 3389, 4363, 3998, 4866, 4244, 4274, 4243, 3997, 3339, 4443}], 
         
         Line3DBox[{4024, 4175, 4949, 4023, 4879, 4597, 4022, 4878, 4596, 
          4021, 4877, 4595, 4020, 4876, 4594, 4019, 4875, 4593, 4018, 4874, 
          4592, 4017, 4174, 4948, 4016, 3142, 4015, 4873, 4591, 4014, 4872, 
          4590, 4013, 4651, 5011, 4364, 1194, 4012, 1191, 4362, 1186, 4011, 
          5006, 1015, 4425, 4467}], 
         Line3DBox[{4038, 4890, 4608, 4037, 4889, 4607, 4036, 4888, 4606, 
          4035, 4887, 4605, 4034, 4886, 4604, 4033, 4885, 4603, 4032, 4884, 
          4602, 4031, 3157, 4030, 4883, 4601, 4029, 4882, 4600, 4028, 4881, 
          4599, 4027, 4880, 4598, 4026, 4650, 5010, 4359, 4361, 4360, 4025, 
          3385, 4358, 4322, 1292, 4468}], 
         Line3DBox[{725, 3003, 724, 3002, 723, 3001, 722, 3000, 721, 2999, 
          720, 2998, 719, 2997, 718, 2996, 717, 2995, 716, 2994, 715, 2993, 
          714, 2992, 713, 2991, 712, 2990, 1219, 2297}], 
         Line3DBox[{4053, 4187, 4961, 4052, 4186, 4960, 4051, 4185, 4959, 
          4050, 4184, 4958, 4049, 4183, 4957, 4048, 4182, 4956, 4047, 3172, 
          4046, 4181, 4955, 4045, 4180, 4954, 4044, 4179, 4953, 4043, 4178, 
          4952, 4042, 4177, 4951, 4041, 4176, 4950, 4039, 3165, 4372, 4469}], 
         
         Line3DBox[{4068, 4197, 4971, 4067, 4196, 4970, 4066, 4195, 4969, 
          4065, 4194, 4968, 4064, 4193, 4967, 4063, 3187, 4062, 4892, 4610, 
          4061, 4192, 4966, 4060, 4191, 4965, 4059, 4190, 4964, 4058, 4189, 
          4963, 4057, 4188, 4962, 4056, 3180, 4054, 4891, 4609, 4373, 4365, 
          4470}], 
         Line3DBox[{4083, 4205, 4979, 4082, 4204, 4978, 4081, 4203, 4977, 
          4080, 4202, 4976, 4079, 3202, 4078, 4896, 4614, 4077, 4895, 4613, 
          4076, 4201, 4975, 4075, 4200, 4974, 4074, 4199, 4973, 4073, 4198, 
          4972, 4072, 3195, 4071, 4894, 4612, 4069, 4893, 4611, 4374, 4366, 
          4471}], 
         Line3DBox[{4098, 4211, 4985, 4097, 4210, 4984, 4096, 4209, 4983, 
          4095, 3217, 4094, 4902, 4619, 4093, 4901, 4618, 4092, 4900, 4617, 
          4091, 4208, 4982, 4090, 4207, 4981, 4089, 4206, 4980, 4088, 3210, 
          4087, 4899, 4616, 4086, 4898, 4615, 4084, 4897, 1199, 4472}], 
         Line3DBox[{4113, 4215, 4989, 4112, 4214, 4988, 4111, 3232, 4110, 
          4910, 4626, 4109, 4909, 4625, 4108, 4908, 4624, 4107, 4907, 4623, 
          4106, 4213, 4987, 4105, 4212, 4986, 4104, 3225, 4103, 4906, 4622, 
          4102, 4905, 4621, 4101, 4904, 4620, 4099, 4903, 4368, 4375, 4367, 
          4473}], 
         Line3DBox[{4128, 4217, 4991, 4127, 3247, 4126, 4920, 4635, 4125, 
          4919, 4634, 4124, 4918, 4633, 4123, 4917, 4632, 4122, 4916, 4631, 
          4121, 4216, 4990, 4120, 3240, 4119, 4915, 4630, 4118, 4914, 4629, 
          4117, 4913, 4628, 4116, 4912, 4627, 4114, 4911, 4370, 4376, 4369, 
          4390}], 
         Line3DBox[{4142, 4248, 3295, 4141, 4931, 4646, 4140, 4930, 4645, 
          4139, 4929, 4644, 4138, 4928, 4643, 4137, 4927, 4642, 4136, 4926, 
          4641, 4135, 3255, 4134, 4925, 4640, 4133, 4924, 4639, 4132, 4923, 
          4638, 4131, 4922, 4637, 4130, 4921, 4636, 4129, 3294, 4377, 4379, 
          4378, 4391}], 
         Line3DBox[{1149, 1073, 4271, 1062, 5007, 4325, 4153, 4270, 1059, 
          4321, 1041, 4269, 5005, 1013, 4289, 978, 4268, 1012, 4288, 977, 
          4996, 4267, 1009, 4287, 976, 4266, 1006, 4286, 5001, 975, 4265, 
          1003, 4285, 974, 4264, 1000, 5004, 4284, 973, 4263, 998, 4424, 972, 
          4262, 5003, 995, 4464}], 
         Line3DBox[{4242, 4162, 4240, 4936, 3983, 4161, 4239, 4935, 3982, 
          4160, 4238, 4934, 3981, 4159, 4999, 4237, 3980, 4158, 4998, 4236, 
          3979, 4860, 4581, 4235, 3978, 4859, 4580, 4234, 4343, 4157, 4233, 
          4933, 4342, 4156, 4232, 4932, 4341, 4155, 3276, 4340, 4154, 4273, 
          4231, 4339, 3108, 4272, 4230, 4347, 4332, 4418, 4465}]}, {
         GrayLevel[0.2], 
         Line3DBox[{2500, 2673, 4831, 2742, 2485, 2658, 4799, 2470, 2643, 
          4791, 2455, 2628, 4785, 2440, 2613, 4781, 2425, 2598, 4779, 2410, 
          4676, 2583, 4765, 2395, 2568, 2917, 2919, 2918, 4858, 2380, 2554, 
          2900, 2757, 2834, 4832, 2833, 2365, 2539, 2802, 2740, 4848, 2832, 
          2831, 3442}], 
         Line3DBox[{2501, 2674, 4809, 2486, 2659, 4800, 2471, 2644, 4792, 
          2456, 2629, 4786, 2441, 2614, 4782, 2426, 4690, 2599, 2411, 4677, 
          2584, 4766, 2396, 2569, 2916, 4753, 2381, 2923, 2922, 2921, 2741, 
          4743, 2924, 2366, 2540, 4830, 2739, 2351, 2526, 4828, 2734, 2338, 
          3437}], 
         Line3DBox[{2502, 2675, 4810, 2487, 2660, 4801, 2472, 2645, 4793, 
          2457, 2630, 4787, 2442, 4702, 2615, 2427, 4691, 2600, 2412, 4678, 
          2585, 4767, 2397, 2570, 4754, 2382, 2555, 2920, 4744, 2367, 2541, 
          2925, 4736, 2352, 2527, 4829, 2735, 2339, 2521, 2892, 2714, 3457}], 
         
         Line3DBox[{2503, 2676, 4811, 2488, 2661, 4802, 2473, 2646, 4794, 
          2458, 4712, 2631, 2443, 4703, 2616, 2428, 4692, 2601, 2413, 4679, 
          2586, 4768, 2398, 2571, 4755, 2383, 2556, 4745, 2368, 2542, 4737, 
          2353, 2737, 2736, 2756, 4657, 2716, 2893, 2715, 2908, 2750, 3416, 
          3430}], 
         Line3DBox[{2504, 2677, 4812, 2489, 2662, 4803, 2474, 4720, 2647, 
          2459, 4713, 2632, 2444, 4704, 2617, 2429, 4693, 2602, 2414, 4680, 
          2587, 4769, 2399, 2572, 4756, 2384, 2557, 4746, 2369, 2543, 2354, 
          4660, 2528, 2340, 2718, 4853, 2895, 2717, 2909, 2751, 2808, 4654, 
          3431}], 
         Line3DBox[{2505, 2678, 4813, 2490, 4726, 2663, 2475, 4721, 2648, 
          2460, 4714, 2633, 2445, 4705, 2618, 2430, 4694, 2603, 2415, 4681, 
          2588, 4770, 2400, 2573, 4757, 2385, 2558, 2370, 4667, 2544, 2355, 
          4661, 2529, 2341, 2719, 4854, 2896, 2911, 2910, 2912, 2811, 2812, 
          4846, 3439}], 
         Line3DBox[{2506, 4730, 2679, 2491, 4727, 2664, 2476, 4722, 2649, 
          2461, 4715, 2634, 2446, 4706, 2619, 2431, 4695, 2604, 2416, 4682, 
          2589, 4771, 2401, 2574, 2386, 4672, 2559, 2371, 4668, 2545, 2356, 
          4662, 2530, 2342, 2720, 4855, 2897, 2914, 2913, 2915, 2815, 4835, 
          2816, 2776, 3435}], 
         Line3DBox[{2508, 2681, 4814, 2493, 2666, 4804, 2478, 2651, 4795, 
          2463, 2636, 4788, 2448, 2621, 4783, 2433, 2606, 4780, 2418, 2591, 
          4772, 2403, 2576, 4758, 2388, 2561, 4747, 2373, 2547, 4738, 2358, 
          2532, 4732, 2344, 2522, 4823, 2722, 2333, 2518, 4842, 2795, 2778, 
          3417, 3438}], 
         Line3DBox[{2509, 2682, 4815, 2494, 2667, 4805, 2479, 2652, 4796, 
          2464, 2637, 4789, 2449, 2622, 4784, 2434, 2607, 2419, 4684, 2592, 
          4773, 2404, 2577, 4759, 2389, 2562, 4748, 2374, 2548, 4739, 2359, 
          2533, 4733, 2345, 2523, 4824, 2724, 2334, 2519, 2796, 4822, 2779, 
          2823, 2822, 3440}], 
         Line3DBox[{2510, 2683, 4816, 2495, 2668, 4806, 2480, 2653, 4797, 
          2465, 2638, 4790, 2450, 2623, 2435, 4697, 2608, 2420, 4685, 2593, 
          4774, 2405, 2578, 4760, 2390, 2563, 4749, 2375, 2549, 4740, 2360, 
          2534, 4734, 2346, 2524, 4825, 2725, 2335, 2798, 4843, 2797, 2780, 
          2702, 3465}], 
         Line3DBox[{2511, 2684, 4817, 2496, 2669, 4807, 2481, 2654, 4798, 
          2466, 2639, 2451, 4708, 2624, 2436, 4698, 2609, 2421, 4686, 2594, 
          4775, 2406, 2579, 4761, 2391, 2564, 4750, 2376, 2550, 4741, 2361, 
          2535, 4735, 2347, 4658, 2525, 2726, 2336, 2800, 4844, 2799, 2781, 
          2704, 3466}], 
         Line3DBox[{2512, 2685, 4818, 2497, 2670, 4808, 2482, 2655, 2467, 
          4717, 2640, 2452, 4709, 2625, 2437, 4699, 2610, 2422, 4687, 2595, 
          4776, 2407, 2580, 4762, 2392, 2565, 4751, 2377, 2551, 4742, 2362, 
          4664, 2536, 2348, 4659, 2728, 2727, 2753, 2825, 4655, 2708, 2782, 
          2707, 2887, 3436}], 
         Line3DBox[{2513, 2686, 4819, 2498, 2671, 2483, 4724, 2656, 2468, 
          4718, 2641, 2453, 4710, 2626, 2438, 4700, 2611, 2423, 4688, 2596, 
          4777, 2408, 2581, 4763, 2393, 2566, 4752, 2378, 4670, 2552, 2363, 
          4665, 2537, 2349, 2730, 4826, 2729, 2754, 2869, 4656, 2712, 2842, 
          2711, 2888, 2749, 3444}], 
         Line3DBox[{2745, 2744, 2743, 2499, 4729, 2672, 2484, 4725, 2657, 
          2469, 4719, 2642, 2454, 4711, 2627, 2439, 4701, 2612, 2424, 4689, 
          2597, 4778, 2409, 2582, 4764, 2394, 4674, 2567, 2379, 4671, 2553, 
          2364, 4666, 2538, 2350, 2732, 4827, 2731, 2755, 2871, 4851, 2872, 
          2870, 2890, 2889, 2907, 3469}], 
         Line3DBox[{3088, 3249, 3294, 3074, 3235, 4911, 3395, 3060, 3221, 
          4903, 3394, 3046, 3207, 4897, 3393, 3032, 3193, 4893, 3392, 3018, 
          3179, 4891, 3391, 3004, 3165, 3390, 2990, 3151, 3384, 3386, 3385, 
          2976, 3138, 3372, 3307, 3341, 5006, 3340, 2962, 3124, 3326, 3293, 
          3339, 3338, 3446}], 
         Line3DBox[{3089, 3250, 4921, 3075, 3236, 4912, 3061, 3222, 4904, 
          3047, 3208, 4898, 3033, 3194, 4894, 3019, 3180, 3005, 4950, 3166, 
          2991, 3152, 3383, 5010, 2977, 1190, 3388, 1191, 2963, 3125, 4866, 
          3292, 2949, 3112, 4861, 3289, 2937, 3450}], 
         Line3DBox[{3090, 3251, 4922, 3076, 3237, 4913, 3062, 3223, 4905, 
          3048, 3209, 4899, 3034, 3195, 3020, 4962, 3181, 3006, 4951, 3167, 
          2992, 3153, 4880, 2978, 3139, 3387, 5011, 2964, 3126, 3389, 2950, 
          3113, 4862, 3290, 2938, 3108, 3366, 3274, 3477}], 
         Line3DBox[{3091, 3252, 4923, 3077, 3238, 4914, 3063, 3224, 4906, 
          3049, 3210, 3035, 4972, 3196, 3021, 4963, 3182, 3007, 4952, 3168, 
          2993, 3154, 4881, 2979, 3140, 4872, 2965, 3127, 4867, 2951, 896, 
          940, 4273, 879, 927, 2247}], 
         Line3DBox[{3092, 3253, 4924, 3078, 3239, 4915, 3064, 3225, 3050, 
          4980, 3211, 3036, 4973, 3197, 3022, 4964, 3183, 3008, 4953, 3169, 
          2994, 3155, 4882, 2980, 3141, 4873, 2966, 3128, 2952, 4937, 3114, 
          2939, 3276, 3368, 3275, 3379, 3303, 3333, 5003, 3447}], 
         Line3DBox[{3093, 3254, 4925, 3079, 3240, 3065, 4986, 3226, 3051, 
          4981, 3212, 3037, 4974, 3198, 3023, 4965, 3184, 3009, 4954, 3170, 
          2995, 3156, 4883, 2981, 3142, 2967, 4944, 3129, 2953, 4938, 3115, 
          2940, 3277, 4932, 3369, 1171, 1172, 998, 3445}], 
         Line3DBox[{822, 4135, 808, 4121, 793, 4106, 778, 4091, 763, 4076, 
          748, 4061, 733, 4046, 718, 4031, 703, 4017, 688, 4003, 673, 3989, 
          658, 4343, 1128, 643, 4285, 956, 2224}], 
         Line3DBox[{3094, 3255, 3080, 4990, 3241, 3066, 4987, 3227, 3052, 
          4982, 3213, 3038, 4975, 3199, 3024, 4966, 3185, 3010, 4955, 3171, 
          2996, 3157, 2982, 4948, 3143, 2968, 4945, 3130, 2954, 4939, 3116, 
          2941, 3278, 4933, 3370, 3381, 3380, 3382, 3334, 5004, 3335, 3312, 
          3451}], 
         Line3DBox[{3095, 3256, 4926, 3081, 3242, 4916, 3067, 3228, 4907, 
          3053, 3214, 4900, 3039, 3200, 4895, 3025, 3186, 4892, 3011, 3172, 
          2997, 3158, 4884, 2983, 3144, 4874, 2969, 3131, 4868, 2955, 3117, 
          4863, 2942, 3109, 4859, 3279, 2933, 3106, 5001, 3322, 3313, 3426, 
          3448}], 
         Line3DBox[{3096, 3257, 4927, 3082, 3243, 4917, 3068, 3229, 4908, 
          3054, 3215, 4901, 3040, 3201, 4896, 3026, 3187, 3012, 4956, 3173, 
          2998, 3159, 4885, 2984, 3145, 4875, 2970, 3132, 4869, 2956, 3118, 
          4864, 2943, 3110, 4860, 3280, 2934, 976, 3314, 1005, 2212}], 
         Line3DBox[{3097, 3258, 4928, 3083, 3244, 4918, 3069, 3230, 4909, 
          3055, 3216, 4902, 3041, 3202, 3027, 4967, 3188, 3013, 4957, 3174, 
          2999, 3160, 4886, 2985, 3146, 4876, 2971, 3133, 4870, 2957, 3119, 
          4865, 2944, 4998, 3111, 3281, 2935, 3324, 4996, 3323, 3315, 3270, 
          3472}], 
         Line3DBox[{3098, 3259, 4929, 3084, 3245, 4919, 3070, 3231, 4910, 
          3056, 3217, 3042, 4976, 3203, 3028, 4968, 3189, 3014, 4958, 3175, 
          3000, 3161, 4887, 2986, 3147, 4877, 2972, 3134, 4871, 2958, 4940, 
          3120, 2945, 4999, 886, 934, 4268, 865, 2198}], 
         Line3DBox[{3099, 3260, 4930, 3085, 3246, 4920, 3071, 3232, 3057, 
          4983, 3218, 3043, 4977, 3204, 3029, 4969, 3190, 3015, 4959, 3176, 
          3001, 3162, 4888, 2987, 3148, 4878, 2973, 3135, 2959, 4941, 3121, 
          2946, 3283, 4934, 3282, 3304, 3337, 5005, 3272, 3316, 3271, 3362, 
          3453}], 
         Line3DBox[{3100, 3261, 4931, 3086, 3247, 3072, 4988, 3233, 3058, 
          4984, 3219, 3044, 4978, 3205, 3030, 4970, 3191, 3016, 4960, 3177, 
          3002, 3163, 4889, 2988, 3149, 4879, 2974, 4946, 3136, 2960, 4942, 
          3122, 2947, 3285, 4935, 3284, 3305, 1059, 3345, 1099, 1164, 2183}], 
         
         Line3DBox[{3297, 3296, 3295, 3087, 4991, 3248, 3073, 4989, 3234, 
          3059, 4985, 3220, 3045, 4979, 3206, 3031, 4971, 3192, 3017, 4961, 
          3178, 3003, 3164, 4890, 2989, 4949, 3150, 2975, 4947, 3137, 2961, 
          4943, 3123, 2948, 3287, 4936, 3286, 3306, 3351, 5007, 3352, 3350, 
          3364, 3363, 3378, 3470}], 
         Line3DBox[{3462, 3420, 2777, 2821, 4836, 2820, 2752, 2721, 2898, 
          4856, 2723, 2343, 2531, 4663, 2357, 2546, 4669, 2372, 2560, 4673, 
          2387, 2575, 4675, 2402, 2590, 4683, 2417, 2605, 4696, 2432, 2620, 
          4707, 2447, 2635, 4716, 2462, 2650, 4723, 2477, 2665, 4728, 2492, 
          2680, 4731, 2507}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
jc751pbGaHTOVcvOuW9R/SA65/sF3j0Lxw+ByxDFOd9kGkhB56xTdvQ5OueM
ZecsyHNiPTrnMod4c3TO75adM9eJX+DangYR7c0qM5rBICmynR2d81+tc//W
iCfK2b4gNl0QWffRFWgHfrigc95xd1PVtOw54LDsakbnfOnJAOGcm1tJx2x/
GIPaxnth6JwrSV2Ec+ZIYu9H5xyXsTIKnfOfuxTnHMt+yBmdcxjjojI65y/H
Kc7Z4l0gCzrnYPGcG+icA5ads/PG52PonL/k52ahc3beSXHOUf7DVOicmUO1
BmIkZICOmeKcrb+WH0HnnBqivAmds2gOxTnX1qhcQOfs0KH2uWToIPxZds5p
SzFzuP+CwVpDB3TODsvO+ZbJuAk6ZxN7Ax50zkd3UJwzy5clP3TOZnfzV6Jz
Llp2znYS/af4glJhrUF1k6SiP4je/hGEzvmv1rnPdDP3lkvecMbTzv19ynlw
6XEjnPMqxYY/6Jz3SflIlX0zh6+tooRzblbWb0Xn7Fqzrh+d88mLFOfsq3BK
FZ3zGZqFRXTOP4cpzpl+zGcenbPnAdpD6JzZlp0z4xjtDDrnhZ5CV3TOOcvO
mfZqCR065/gDO6zQOWcsO+ddbrJzuO+MiBtvMzpnhiaKc3Y30DmEztnni9kv
8RRhEA2mOOdgnbPX0Tn/Vlolis755rJzHnA+ZYTO+V1+mw465+pl58xRck0T
nTN750Y9dM4Ty875p1z4KO4vsMWwqhSdc9qycz7+smntbG8SZDErNnpU+kCF
5ncFdM4Cit1PGt65A4mZebNEkh3klskRznnN6KUmdM6luhE30TlbRn4jnPOf
xvRAdM6T6nui0TmDOsU5OzFke6Nzpv3+kuV9vzK48VGcs5KLgDQ6522feJPR
OYstO+eBbtiMznlq6fpzdM7vlp3zT83tm9A5fw3iMUXnPL3snM86L75A5zxw
/dU2dM6jy85ZVjfhGjpn9fvOqeicPy875xMxdKLonI+W710YqNoDEcvO2fG6
03fcB0Sgb1O/nNAuCF52znZbeIj9LLLu3YhA58y+7Jw/3tktic65v6neAJ3z
Cqv/2c75r+aWkklB6J8fBmXboH/WOUdD+GfhdqOH6J/3cujNoX92u7ZJF/2z
lXBJMPpnzf2OCuifH9H/3Iz+mZsk/L3lWix07tj8HP2z1u3MPeifSbMsfuif
6y11tub+roCNwUsX0T9XLu8TIfxv9olI1TdgRhct9OFqLrroebfjhItmnXhy
A120kHrpFnTRN/ULCBd9hauqDF30qY2cwuiihTtfEy6a6bxrELroWd+1z9BF
x96PIFy0UpP7YXTRTM8vfEUXLfoi/wC66Gdl9Lrootvb/frQRedI+xEu+vCV
Y0HoohMfGGxFF21P5UC46IDl/SBuL+8H0be8H8QAbS4DemmTjUk30EuLPzEh
vPT6wEA69NLfTjKNo5emW7eB8NLmnuydltknwYeTvw+9NLQ9ILw009oAG/TS
44P8Geild2zoJLx0+x1BXfTSjIWjteilk4XPEl6668ijVeil7+5KsEAv7RzM
Tnjp52ujqiIWNKCI1vNXIpsv7EyheGnFy5k06KU7eMTj0Uub2r4kvHTA6eG5
Q+VykKv8sxG9dE8NxUsnXdnCHDSaBN9oa4p2U0XDOP9+CXTRTkl71cMs/cHs
9ycnoUcBIGrVRLhokXV7jha0XoQ7rD356KK1LsoRLlpU28Kqc/AMBAz7D6KL
5rq4hnDR7mFzJHTRzkvhS+iiXeQpLtpR60IVumiVldT16KKt11Bc9KsX08bo
ogN5xFTQRbNpUVw00/fgUHTRdzVFPqOLDvSluOhLnLFN6KKLmys40EW7PqS4
6Juc803oolneVYmji94+THHRQ8I8Yuiivxy9cRNdtFMmxUVrnwi6iS565cn1
Eeiiz7lRXDSjj960XOZ1EBtdM43++eVkK+Gfle3LTz7hdIYfcHwlH91lWLF9
nvDPsimnhDcdtgBzq+4n6J897dcQ/nlz18N69M8NZwSOFNtag+xkPuGfNX/k
nkb/PCnwuAb983ZWin8O3C62Df3zlt8hrOifJZf9s87FS93on/mUxpzQP08s
++eazHUzb3bzwbk9OouHGVTJz2OKf/5xjJke/XNXZLgp+ucL1yn+WeZmsDD6
50abV7non2eW/XNd7pW79rccoUH+fgY6ZyFZEuGcWzzWxaBz7r6faUjPZgPM
RhTn7DfIT/WcVgfyvKPuo3M+tJ7inN2Zw3T3iSpDckPhT3TOzC8oztmcpMuH
zjlbzI5wzuXLzjn9wrrj6JzXvbzXic55x3eKc6660qmMzvmR+e4gdM4Xlp2z
vjX/NXTOh8YNQtA5Vy4756GHXtafa42hxt3H4re8Ofh0uBGeuS/A+R165oDd
I8PomddbUzyzdF2HwHomBejRr25Az8yvQPHMYbq5seiZD66hvYye+e2yZxY2
5H2Onvko9aG76Jlzlz3zuCiXLHpm/1d+leiZRT5RPHPuR8ZudMsfeWcd0C2v
5KG45YfT49vNumXhQH2nYunCMdAoprjlFMeXruiWe0eCs9AtOyy75XoGIUC3
rF65btLRaj+0LbtlLiW/E/aJ0hD1fD4OffJDdYpP7mKRtUCfvMaRTgh9csKy
T/5X+5z6V5t/zTKgmzxeDo9Xjh99taoXtAoelqPvZU7grg4czYOZ6mjLI/Rt
oFWWdX7TzilYMe8eI347HjqVTSLQ94p8TW1C39vP7fYJfa9lG8+eow8qgbae
Lwl97/2hkn70vdbcZ7TR964r38uOvpedW+85+t77p88eWUorhVtFQfroe8ca
dtJssfaG7T9vrL159inQBDbqo+/9vk7AFH3vWo19q4UYiqB67nMV+l7j5d9h
Dl3+Hebty7/D3NNMfQrdb1RTmyq635zVsoT73aMsUIC+V9RtWjz07mPYI8P2
D31vRxPDW3S2tzuCXNDZnmsqJJyteN/ZWXS2/mwXOtHZbpgVeYnO1j2l6CNn
XynItrLoN9+vAKrd197+e5zt/3tORXWHm5f4/eRhmRUi6Gan/9fN/v+aN9PR
cMnU5IHGhPgsOtu1u+nq0dlStbu9QmdL1bWhAJ3tlVoub3S2V20jt6CznTvT
3ojO9u1jCS10trI/4jags13c53wGne2tpX5TdLY0yqHB6GxHQgLk0NkGi93x
Q2e7vZNhNzrbUHvmJnS2Rjk/9qKzpXo53YjO9lX5/GN0tu7izTvR2Raz//4R
8X/aO/NwquNv31OUSsrUXJJSqIwpQ62iiEKZmlQyU8iYsZAh85QhypBkiDJl
zpAxKkNRiDKFDJsIyXC+a+99nntvz+13b+c5v+fcc8/x53o8X99tfz+f9Vrf
9/uzlrYXrOM8whgi8g4y3JXOoM92/peAJ/psY4e/16LPNvhqTgb6bGMCN1ij
z/aAxd589Nn2CHLKoc+W0UYzt4O9CHSekCRrL7aB3bOXNeinVfOZPhpWnQZX
+Rm/om/WBO58Rt+s7KfMYI6zJRDbIbxr96EKoLUTcPz/2R87xhPPiT7Vak43
BvSpzk/32KFPtYnZ/wv6VKW0y7PRp+rZ2fENfaoZzee60aeaFJX9FH2qrDWW
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
1+Q2oQ6i7DNM1kH+9vp/iv8LUL8JRg==
       "]], {}}, {
    DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        TagBox["a", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["h", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, FaceGridsStyle -> 
     Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, 
     PlotRange -> {{0, 10}, {0, 5}, {0., 0.267616199876035}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SqrtBox["DetAG"], 
       SqrtBox["DetAGTrunc"]}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.800406969756175*^9, 3.8004084315760517`*^9, 
  3.800458261193788*^9, 3.800458790833109*^9, 3.8004787972534924`*^9, 
  3.800482953587741*^9, 3.8004841825002327`*^9, 3.8004855355976753`*^9, 
  3.800490985438325*^9, 3.800542711622789*^9, 3.8005523330784492`*^9, 
  3.800578598800432*^9, 3.802524983674695*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"8fb07a63-f83f-44de-b3a6-e8866703c7ed"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p3Dk2", "=", 
   RowBox[{"GraphicsColumn", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pHV", ",", "pH2", ",", "pAG"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<results/FisherMatrix-2_Output_preIntegration-3Dk2.jpeg\>\"", ",", 
    "p3Dk2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.796161591756052*^9, 3.796161593499509*^9}, {
   3.7961756731360893`*^9, 3.796175708269072*^9}, {3.796175884455531*^9, 
   3.796175900973771*^9}, {3.7967490025062943`*^9, 3.796749062774382*^9}, 
   3.7967490990591373`*^9, {3.79674913198139*^9, 3.796749142579796*^9}, {
   3.796749217842654*^9, 3.796749219496274*^9}, {3.796749257896325*^9, 
   3.7967492860772867`*^9}, 3.7967493177807713`*^9, {3.796749399633634*^9, 
   3.79674943239974*^9}, {3.79674958232307*^9, 3.796749588657757*^9}, {
   3.796749630762241*^9, 3.7967496708625727`*^9}, {3.79674972461436*^9, 
   3.796749761979142*^9}, {3.7967498778406267`*^9, 3.796749878694523*^9}, {
   3.796750566398038*^9, 3.796750567057413*^9}, {3.796750656537052*^9, 
   3.7967506568406277`*^9}, {3.7970161004982*^9, 3.7970161046487303`*^9}, {
   3.800486194958091*^9, 3.8004861977099113`*^9}, {3.80048631197788*^9, 
   3.800486322336968*^9}, 3.800486772992684*^9, {3.800490845099818*^9, 
   3.800490857049635*^9}, {3.800490888873353*^9, 3.800490935310595*^9}, {
   3.800491026133322*^9, 3.800491135984539*^9}, {3.8004912950269423`*^9, 
   3.800491320320052*^9}, {3.800491366889225*^9, 3.800491379422062*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"3430622b-ba29-4e2d-b574-eeecc3d46526"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1061, 1074},
WindowMargins->{{Automatic, 563}, {Automatic, 68}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 254, 4, 145, "Chapter",ExpressionUUID->"fb6747e9-b9e4-4dfd-8899-9efa99ce5c0b"],
Cell[CellGroupData[{
Cell[859, 30, 375, 6, 64, "Input",ExpressionUUID->"606bdec2-375d-4ba7-a2cf-b1f3c71f904a"],
Cell[1237, 38, 529, 8, 42, "Output",ExpressionUUID->"fdc952a7-0a0f-47b5-8c12-361ebba9d403"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1803, 51, 161, 3, 67, "Subsection",ExpressionUUID->"0f75d902-741d-4b88-b7dd-ca02c0e4468e"],
Cell[1967, 56, 2252, 56, 190, "Text",ExpressionUUID->"47d1633f-3cce-444c-99d9-05571c35f7c9"],
Cell[CellGroupData[{
Cell[4244, 116, 271, 5, 56, "Subsubsection",ExpressionUUID->"780b82a4-48e4-42ea-ab49-37a4dd930e78"],
Cell[4518, 123, 197, 3, 44, "Text",ExpressionUUID->"491877fd-5c59-4f78-bcce-67522b9f00bd"],
Cell[4718, 128, 835, 14, 37, "Input",ExpressionUUID->"55f3927f-47c7-4f0a-8e65-d56b5f233bc6"],
Cell[5556, 144, 303, 7, 37, "Input",ExpressionUUID->"41eaeab3-3a93-491e-9408-897f62be8e68"],
Cell[5862, 153, 271, 6, 37, "Input",ExpressionUUID->"351b0e1c-39f8-416f-a499-75003db5ae19"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6182, 165, 231, 4, 67, "Subsection",ExpressionUUID->"4476d5a2-d8ec-4f05-8aae-a839d6fc376b"],
Cell[CellGroupData[{
Cell[6438, 173, 3099, 77, 337, "Input",ExpressionUUID->"49e74542-5ba8-4524-8990-a171d9ffdcd7"],
Cell[9540, 252, 23519, 463, 240, "Output",ExpressionUUID->"23e6cc47-ce62-49b9-b42c-c6a9b4e5a6c8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33108, 721, 375, 5, 67, "Subsection",ExpressionUUID->"0defc5b9-fa26-4482-80de-e4a769226bef"],
Cell[CellGroupData[{
Cell[33508, 730, 3110, 79, 324, "Input",ExpressionUUID->"5b546779-f39a-413d-822b-f5dc541708d5"],
Cell[36621, 811, 757, 13, 42, "Output",ExpressionUUID->"1fe32ae6-3057-4841-8444-7b449977a2a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37415, 829, 4113, 87, 320, "Input",ExpressionUUID->"5fcea494-32e0-41df-bf62-a30a11478fde"],
Cell[41531, 918, 16773, 399, 216, "Output",ExpressionUUID->"7801156b-15e3-4470-9a8b-8aee4c543448"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58353, 1323, 371, 5, 67, "Subsection",ExpressionUUID->"bc0fc2f4-9fd7-4a29-a2aa-801ff30d9dd7"],
Cell[CellGroupData[{
Cell[58749, 1332, 3199, 79, 350, "Input",ExpressionUUID->"dbad6faa-15ea-4cf3-bf85-d030ad096c0a"],
Cell[61951, 1413, 763, 14, 42, "Output",ExpressionUUID->"7dbcefb0-4009-449b-8ee7-f63d34cbc629"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62751, 1432, 4111, 87, 320, "Input",ExpressionUUID->"ca4bb2b7-a1b9-45b1-abfc-1cf87dbd9350"],
Cell[66865, 1521, 16792, 400, 222, "Output",ExpressionUUID->"5fbf5abd-2d3d-423e-8629-62cd012cfa5a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83706, 1927, 391, 6, 67, "Subsection",ExpressionUUID->"2ece3119-fb0d-4f97-a010-4a4cc535e93d"],
Cell[84100, 1935, 322, 7, 44, "Text",ExpressionUUID->"08bb5c7f-3d51-4a6b-a754-d06071d55b8b"],
Cell[84425, 1944, 685, 12, 102, "Text",ExpressionUUID->"c44a6ef2-9dc4-49a4-aa6a-4b7239651703"],
Cell[CellGroupData[{
Cell[85135, 1960, 470, 11, 37, "Input",ExpressionUUID->"d54708eb-a846-431d-824c-9884c63d1f0f"],
Cell[85608, 1973, 375, 8, 42, "Output",ExpressionUUID->"64bb95f3-619f-4a17-acc4-8298bb4ebb5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86020, 1986, 2903, 51, 220, "Input",ExpressionUUID->"734af324-840e-43d8-ae6e-2bdf7515b8d0"],
Cell[88926, 2039, 18754, 365, 338, "Output",ExpressionUUID->"54ac2c4d-9832-4416-96f8-8b9416dbc16c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107717, 2409, 2022, 36, 246, "Input",ExpressionUUID->"f3586498-09f7-4ac2-ab5e-3d0600a75e70"],
Cell[109742, 2447, 24656, 479, 340, "Output",ExpressionUUID->"28482904-2db0-4aee-963a-2ed4d1293dc5"]
}, Open  ]],
Cell[134413, 2929, 216, 4, 44, "Text",ExpressionUUID->"46cfe1c8-1010-4852-98eb-0523615c4cca"],
Cell[CellGroupData[{
Cell[134654, 2937, 1801, 34, 246, "Input",ExpressionUUID->"8eab891d-c383-45ef-b6ce-e7d92da9481e"],
Cell[136458, 2973, 25905, 501, 338, "Output",ExpressionUUID->"1795b4ef-289b-40bd-a328-14dadf24ce2b"]
}, Open  ]],
Cell[162378, 3477, 175, 3, 37, "Input",ExpressionUUID->"cae4b9de-07db-4c5f-b5ff-55a31b399a9d"],
Cell[162556, 3482, 607, 11, 131, "Text",ExpressionUUID->"4192e768-b84d-47eb-bfe0-84f03a69b6e9"],
Cell[CellGroupData[{
Cell[163188, 3497, 535, 12, 116, "Input",ExpressionUUID->"767c1031-07c4-4abb-a766-eb93e7903c71"],
Cell[163726, 3511, 344, 8, 42, "Output",ExpressionUUID->"b5eab43a-d776-4b27-916f-ab8c37495f95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164107, 3524, 733, 15, 116, "Input",ExpressionUUID->"93d8746b-7df4-408b-b2db-d6d3d88a727d"],
Cell[164843, 3541, 575, 13, 50, "Message",ExpressionUUID->"4d5d5b31-6ec9-4c20-951c-7ccd101ff471"],
Cell[165421, 3556, 575, 13, 50, "Message",ExpressionUUID->"e4a7fb71-8d6f-4da7-b4bc-f7f5bfa046ad"],
Cell[165999, 3571, 370, 8, 42, "Output",ExpressionUUID->"0b0bb4b0-d505-4fa9-9d5f-eb3163eeceff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166406, 3584, 679, 14, 116, "Input",ExpressionUUID->"8c896242-5b97-4cef-843d-2996bec6343b"],
Cell[167088, 3600, 573, 12, 50, "Message",ExpressionUUID->"2ac6f539-dccc-4307-83ed-a98416d51516"],
Cell[167664, 3614, 425, 9, 42, "Output",ExpressionUUID->"53a80085-f021-4108-b0ec-9f01fc489c32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168126, 3628, 2361, 51, 210, "Input",ExpressionUUID->"3fa7ba9b-cfc3-46a8-8127-6d54aa9948e1"],
Cell[170490, 3681, 75688, 1434, 285, "Output",ExpressionUUID->"fd1a3d5d-84ea-4685-bd2e-f2a29d466568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246215, 5120, 168, 3, 37, "Input",ExpressionUUID->"e1ad5102-069e-4f0b-862c-5368163da390"],
Cell[246386, 5125, 169, 3, 42, "Output",ExpressionUUID->"5c45272c-3a1e-427b-8049-124432418447"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246604, 5134, 346, 5, 67, "Subsection",ExpressionUUID->"8e00745a-f4b3-4372-81d3-0db4b20caa1f"],
Cell[246953, 5141, 322, 7, 44, "Text",ExpressionUUID->"2be96c5c-de5c-42bc-96f1-4b2cc915683a"],
Cell[CellGroupData[{
Cell[247300, 5152, 2411, 43, 220, "Input",ExpressionUUID->"26c047ce-4192-4ee0-a55d-19c5dae52881"],
Cell[249714, 5197, 18030, 354, 340, "Output",ExpressionUUID->"284bdd0e-246d-4fe6-b758-390cbabdc00e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267781, 5556, 1124, 24, 194, "Input",ExpressionUUID->"ee85f192-b9ae-4ed6-a046-e4664f10c6cf"],
Cell[268908, 5582, 25073, 487, 340, "Output",ExpressionUUID->"dff639c3-e969-4592-a080-bd03fdd58fae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294018, 6074, 1231, 25, 194, "Input",ExpressionUUID->"6c5fbfd8-00b2-491a-b65f-b2e5bf7635d4"],
Cell[295252, 6101, 26460, 509, 340, "Output",ExpressionUUID->"2d921797-d029-481b-9cff-5554fb6733c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321749, 6615, 2310, 50, 210, "Input",ExpressionUUID->"002d267f-8e6e-432f-9d61-5ff22e4bab6a"],
Cell[324062, 6667, 76267, 1438, 285, "Output",ExpressionUUID->"7c69c4d8-4a7b-4483-a0f7-5abb3f668bc6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[400378, 8111, 201, 3, 84, "Section",ExpressionUUID->"028917d6-e9a1-45ac-817f-1b8965c92eb2"],
Cell[CellGroupData[{
Cell[400604, 8118, 191, 3, 37, "Input",ExpressionUUID->"84fc4031-db73-476b-a147-68ea74524093"],
Cell[400798, 8123, 348, 7, 42, "Output",ExpressionUUID->"1a98d46d-4e11-4437-b37b-8c8a4909182d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401183, 8135, 182, 3, 37, "Input",ExpressionUUID->"76b76eda-7c31-453d-8091-e7bc041face9"],
Cell[401368, 8140, 330, 7, 42, "Output",ExpressionUUID->"5062c4f8-52d8-46df-a696-57368b662dd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401735, 8152, 217, 4, 37, "Input",ExpressionUUID->"b71e51bf-930c-42db-ae8e-35683912aadc"],
Cell[401955, 8158, 2095, 54, 114, "Output",ExpressionUUID->"1ef34834-1137-42c7-884a-0476edc4373e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404087, 8217, 314, 6, 37, "Input",ExpressionUUID->"6e115633-e0bf-47be-bbf5-7d6abcfb73fb"],
Cell[404404, 8225, 1222, 31, 88, "Output",ExpressionUUID->"e6df0408-ec91-4683-9a21-fcff0ee43bf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405663, 8261, 242, 5, 37, "Input",ExpressionUUID->"eb4c9487-e6b8-473a-813b-491eab7e1ca6"],
Cell[405908, 8268, 62927, 1811, 3534, "Output",ExpressionUUID->"f7a5d25b-47bf-4d2f-a712-905664749d85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468872, 10084, 265, 5, 37, "Input",ExpressionUUID->"f4750319-574d-4a9c-9c7c-94bb7499d706"],
Cell[469140, 10091, 10794, 279, 132, "Output",ExpressionUUID->"3b652899-c511-42fb-87de-24657cad8ed0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479971, 10375, 642, 20, 106, "Input",ExpressionUUID->"3b425b4e-5855-43a5-a026-ae2f1fb87d2e"],
Cell[480616, 10397, 423, 11, 60, "Output",ExpressionUUID->"59b39efe-6e04-4477-be5b-e6ee28a4c031"],
Cell[481042, 10410, 446, 12, 60, "Output",ExpressionUUID->"fbe163ba-dbc2-4e20-a53c-d5bc395a4d57"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[481537, 10428, 291, 7, 132, "Section",ExpressionUUID->"8b5529a2-fbcd-40e9-a12c-f0b80bfcb9a7"],
Cell[481831, 10437, 292, 8, 37, "Input",ExpressionUUID->"737352d3-5087-4534-aecf-4a8b1aa6f659"],
Cell[482126, 10447, 404, 8, 73, "Text",ExpressionUUID->"829d6374-05bb-4745-a846-2abaddde99b3"],
Cell[CellGroupData[{
Cell[482555, 10459, 2356, 44, 90, "Input",ExpressionUUID->"c5ea870b-41a3-467c-9431-00109fbb9765"],
Cell[484914, 10505, 29041, 559, 301, "Output",ExpressionUUID->"3c243109-f039-4e44-b296-2509f2d02ad4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513992, 11069, 700, 18, 64, "Input",ExpressionUUID->"ce09e22c-c403-4d20-ac99-e26e20390b63"],
Cell[514695, 11089, 25101, 488, 297, "Output",ExpressionUUID->"b870a938-7386-4061-b265-bdc1f823f642"]
}, Open  ]],
Cell[539811, 11580, 546, 16, 64, "Input",ExpressionUUID->"8658c474-5858-43a0-b9bf-b5381b0b882e"],
Cell[CellGroupData[{
Cell[540382, 11600, 1098, 23, 64, "Input",ExpressionUUID->"858007f3-6c19-4ef9-a01a-7b7e0463bdc6"],
Cell[541483, 11625, 486984, 8157, 391, "Output",ExpressionUUID->"fe424df2-2af8-414e-8413-2eb1a473ecde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028504, 19787, 1220, 25, 64, "Input",ExpressionUUID->"81e48610-51f9-4ba4-b46b-de43891c4f7b"],
Cell[1029727, 19814, 272834, 4603, 384, "Output",ExpressionUUID->"f8da1215-8224-436d-a6f6-669fae3bea1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1302598, 24422, 1144, 24, 64, "Input",ExpressionUUID->"8ef1810a-3848-4ea7-8e99-3bdfa3b8b19f"],
Cell[1303745, 24448, 273241, 4617, 391, "Output",ExpressionUUID->"8fb07a63-f83f-44de-b3a6-e8866703c7ed"]
}, Open  ]],
Cell[1577001, 29068, 1688, 31, 64, "Input",ExpressionUUID->"3430622b-ba29-4e2d-b574-eeecc3d46526"]
}, Open  ]]
}, Open  ]]
}
]
*)

