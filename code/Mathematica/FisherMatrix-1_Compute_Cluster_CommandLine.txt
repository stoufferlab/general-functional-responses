fisher[fun_, pars_] := -D[Apply[fun, pars], {pars, 2}];

H1 = a \[CapitalNu] P T;
R = (a \[CapitalNu] P T)/P;
H2 = (a \[CapitalNu] P T)/(1 + a h \[CapitalNu]);
HV = (a \[CapitalNu] P T)/P^m;
AG = (a \[CapitalNu] P T)/(P + a h \[CapitalNu]);
BD = (a \[CapitalNu] P T)/(1 + a h \[CapitalNu] + \[Gamma] P);
CM = (a \[CapitalNu] P T)/((1 + a h \[CapitalNu]) (1 + \[Gamma] P));
AA = (a \[CapitalNu] P T)/(P^m + a h \[CapitalNu]);

subs = {T -> 1};

\[CapitalNu]vals = {5, 10, 20, 40};
Pvals = {1, 2, 3};

\[CapitalNu]probs = 
  ConstantArray[1/Length[\[CapitalNu]vals], 
   Length[\[CapitalNu]vals]];
Pprobs = ConstantArray[1/Length[Pvals], Length[Pvals]];
\[CapitalNu]DistE = 
  EmpiricalDistribution[\[CapitalNu]probs -> \[CapitalNu]vals];
PDistE = EmpiricalDistribution[Pprobs -> Pvals];

EFisher[FisherMatrix_, func_] :=
 Expectation[
  Expectation[
   FisherMatrix,
   x \[Distributed] PoissonDistribution[func]],
  {P \[Distributed] PDistE, 
   \[CapitalNu] \[Distributed] \
\[CapitalNu]DistE}]


PoislL[func_] := -n func + Log[func] x /. {n -> 1}




lLH1Poiss[a_] := PoislL[H1]
FisherH1Poiss = fisher[lLH1Poiss, {a}];
% // FullSimplify // MatrixForm

EFisherH1Poiss = EFisher[FisherH1Poiss /. subs, H1 /. subs];
% // MatrixForm

DetH1 = Det[EFisherH1Poiss]



lLRPoiss[a_] := PoislL[R]
FisherRPoiss = fisher[lLRPoiss, {a}] // FullSimplify;
FisherRPoiss // MatrixForm

EFisherRPoiss = EFisher[FisherRPoiss /. subs, R /. subs];
% // FullSimplify // MatrixForm

DetR = Det[EFisherRPoiss] // FullSimplify



lLHVPoiss[a_, m_] := PoislL[HV]
FisherHVPoiss = fisher[lLHVPoiss, {a, m}] // FullSimplify;
% // MatrixForm

EFisherHVPoiss = EFisher[FisherHVPoiss /. subs, HV /. subs];
% // FullSimplify // MatrixForm

DetHV = Det[EFisherHVPoiss];
% // FullSimplify
% // Factor
% // Expand




lLH2Poiss[a_, h_] := PoislL[H2]
FisherH2Poiss = fisher[lLH2Poiss, {a, h}];
% // FullSimplify // MatrixForm

EFisherH2Poiss = EFisher[FisherH2Poiss /. subs, H2 /. subs];
% // FullSimplify // MatrixForm

DetH2 = Det[EFisherH2Poiss] // FullSimplify




lLAGPoiss[a_, h_] := PoislL[AG]
FisherAGPoiss = fisher[lLAGPoiss, {a, h}] // FullSimplify;
% // MatrixForm

EFisherAGPoiss = EFisher[FisherAGPoiss /. subs, AG /. subs];
% // FullSimplify // MatrixForm

DetAG = Det[EFisherAGPoiss];
% // FullSimplify


Save["FisherMatrix-1_Output_k1k2", "`*"];



lLCMPoiss[a_, h_, \[Gamma]_] := PoislL[CM]
FisherCMPoiss = fisher[lLCMPoiss, {a, h, \[Gamma]}] // FullSimplify;
% // MatrixForm

EFisherCMPoiss = EFisher[FisherCMPoiss /. subs, CM /. subs];
% // FullSimplify // MatrixForm

DetCM = Det[EFisherCMPoiss];
% // FullSimplify




lLBDPoiss[a_, h_, \[Gamma]_] := PoislL[BD]
FisherBDPoiss = fisher[lLBDPoiss, {a, h, \[Gamma]}] // FullSimplify;
% // MatrixForm

EFisherBDPoiss = EFisher[FisherBDPoiss /. subs, BD /. subs];
% // FullSimplify // MatrixForm

DetBD = Det[EFisherBDPoiss];
% // FullSimplify





lLAAPoiss[a_, h_, m_] := PoislL[AA]
FisherAAPoiss = fisher[lLAAPoiss, {a, h, m}] // FullSimplify;
% // MatrixForm

EFisherAAPoiss = EFisher[FisherAAPoiss /. subs, AA /. subs];
% // FullSimplify // MatrixForm

DetAA = Det[EFisherAAPoiss];
% // FullSimplify



Save["FisherMatrix-1_Output_k1k2k3", "`*"];


P\[CapitalNu]rats = 
  Sort[DeleteDuplicates[
    Join @@ Outer[Divide, Pvals, \[CapitalNu]vals]]];
minv = 1/Table[i, {i, 1, 50}];

e = 10;
ParmRangeA = {
   {a, 0, 10^e},
   Sort[DeleteDuplicates[Flatten[{h, 0, P\[CapitalNu]rats, 1, 10^e}]]],
   Sort[DeleteDuplicates[Flatten[{\[Gamma], 0, 1/Pvals, 1, 10^e}]]],
   Sort[DeleteDuplicates[
     Flatten[{m, 0, P\[CapitalNu]rats, minv, 1, 10^e}]]]
   };
precgoal = 2;





NIntH1 = Log[NIntegrate[Sqrt[DetH1],
   ParmRangeA[[1]],
   PrecisionGoal -> precgoal]]

NIntR = Log[NIntegrate[Sqrt[DetR],
   ParmRangeA[[1]],
   PrecisionGoal -> precgoal]]

NIntHV = Log[NIntegrate[Sqrt[DetHV],
   ParmRangeA[[1]], ParmRangeA[[4]],
   PrecisionGoal -> precgoal]]

NIntH2 = Log[NIntegrate[Sqrt[DetH2],
   ParmRangeA[[1]], ParmRangeA[[2]],
   PrecisionGoal -> precgoal]]

NIntAG = Log[NIntegrate[Sqrt[DetAG],
   ParmRangeA[[1]], ParmRangeA[[2]],
   PrecisionGoal -> precgoal]]

NIntBD = Log[NIntegrate[Sqrt[DetBD],
   ParmRangeA[[1]], ParmRangeA[[2]], ParmRangeA[[3]],
   PrecisionGoal -> precgoal]]

NIntCM = Log[NIntegrate[Sqrt[DetCM],
   ParmRangeA[[1]], ParmRangeA[[2]], ParmRangeA[[3]],
   PrecisionGoal -> 3]]

NIntAA = Log[NIntegrate[Sqrt[DetAA],
   ParmRangeA[[1]], ParmRangeA[[2]], ParmRangeA[[4]],
   PrecisionGoal -> precgoal]]

Save["FisherMatrix-1_Output_k1k2k3_NInt", "`*"];



ParmRangeB = Drop[ParmRangeA, 1];
precgoal = 2;


aNIntH1 = Sqrt[DetH1];

aNIntR = Sqrt[DetR];

aNIntHV = NIntegrate[Sqrt[DetHV],
   ParmRangeB[[3]],
   PrecisionGoal -> precgoal];

aNIntH2[\[Alpha]_?NumericQ] := 
 NIntegrate[Sqrt[DetH2 /. {a -> \[Alpha]}],
  ParmRangeB[[1]],
  PrecisionGoal -> precgoal]

aNIntAG[\[Alpha]_?NumericQ] := 
  NIntegrate[Sqrt[DetAG /. {a -> \[Alpha]}],
   ParmRangeB[[1]],
   PrecisionGoal -> precgoal];

aNIntBD[\[Alpha]_?NumericQ] := 
  NIntegrate[Sqrt[DetBD /. {a -> \[Alpha]}],
   ParmRangeB[[1]], ParmRangeB[[2]],
   PrecisionGoal -> precgoal];

aNIntCM[\[Alpha]_?NumericQ] := 
  NIntegrate[Sqrt[DetCM /. {a -> \[Alpha]}],
   ParmRangeB[[1]], ParmRangeB[[2]],
   PrecisionGoal -> precgoal];

aNIntAA[\[Alpha]_?NumericQ] := 
  NIntegrate[Sqrt[DetAA /. {a -> \[Alpha]}],
   ParmRangeB[[1]], ParmRangeB[[3]],
   PrecisionGoal -> precgoal];



Save["FisherMatrix-1_Output_k1k2k3_aNInt", "`*"];
