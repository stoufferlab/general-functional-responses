AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + (-1 + P)*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (a^2*(58776627242565155029296875 + 60397885643663406372070312500*a*
        h + 29518487405737684249877929687500*a^2*h^2 + 
       9067125441710297871398925781250000*a^3*h^3 + 
       1956700643646286779214233398437500000*a^4*h^4 + 
       315306744333575811059912109375000000000*a^5*h^5 + 
       39446522407795142958521428808593750000000*a^6*h^6 + 
       3936254508280016933827136409843750000000000*a^7*h^7 + 
       319509464061855197062440837526237500000000000*a^8*h^8 + 
       21409084074672441076511526820097500000000000000*a^9*h^9 + 
       1197637475694157415647256023286558640000000000000*a^10*h^10 + 
       56428889382573374754972690349160650752000000000000*a^11*h^11 + 
       2255201924238526913346359405159715112581120000000000*a^12*h^12 + 
       76887240085801112483002145203101316979589120000000000*a^13*h^13 + 
       2246661621151966315263837902353849978254655488000000000*a^14*h^14 + 
       56482241289539427311844607842399737652404079820800000000*a^15*h^15 + 
       1225651757454404683890103487145697459418741883273216000000*a^16*h^16 + 
       23017357989660520454328075026482898043469584522018816000000*a^17*
        h^17 + 374909850127863840932638107515513988366491617093851545600000*
        a^18*h^18 + 
       5305840169294470872826343835932226373781910993776934912000000*a^19*
        h^19 + 65335939655319766789827930221414925868883892855752821309440000*
        a^20*h^20 + 
       700794679911101348610117442481856258324071778220798234119372800*a^21*
        h^21 + 
       6552467758182611329785890837837102325743528450618925816741888000*a^22*
        h^22 + 
       53431827357403129937426436859660431513306027485775538139902771200*a^23*
        h^23 + 
       380062981117752110174170235762128388933547374487806481092155801600*
        a^24*h^24 + 
       2357895662756530064796773818495764107702823627185502672416365608960*
        a^25*h^25 + 
       12753539748994842759688573010224172010914344430773415984317794877440*
        a^26*h^26 + 
       60098295015375444399758486368656634585550457785065740206087298088960*
        a^27*h^27 + 
       246468673779438092448675914902482308180958571447739396938080498745344*
        a^28*h^28 + 
       878442542063796339710059296574845526137436359464452107470083826122752*
        a^29*h^29 + 271595652177146143282765488914125800833515167220087086472\
4878260436992*a^30*h^30 + 
       7267614250739210588547359274436337235442183023562618187719995455176704*
        a^31*h^31 + 167835442379328409152975856224801426597941962850671858249\
72423695433728*a^32*h^32 + 
       3333315534623161684755814846109530020995563499647812433768847734367846\
4*a^33*h^33 + 
       5668925512444755129649810284306803803155364592101677110145479812212326\
4*a^34*h^34 + 
       8212091860000303306528654335197214207618104587681145764054593767787724\
8*a^35*h^35 + 
       1006650386770460216101733244207343549600926457133166121464925215701073\
92*a^36*h^36 + 
       1035597683692699674848210759759392979297320384107641068381745544387624\
96*a^37*h^37 + 
       8847541391675240893729130597607125837706246620654331048807055180274073\
6*a^38*h^38 + 
       6191909572347224881895696520365556449245347921803433919221664564065075\
2*a^39*h^39 + 
       3485157566289481910646128680519014180567086084493591286597747071359385\
6*a^40*h^40 + 
       1537741249506311128376433008891240349315258865243216374990329055333580\
8*a^41*h^41 + 
       5120762804119889510417002404797074579433053848451674575563226525728768*
        a^42*h^42 + 121053839553562209613492877020782222401278901083421440353\
3516922945536*a^43*h^43 + 
       181238088160435460612158838495064552654532146398879541537981050388480*
        a^44*h^44 + 
       12937882024238304017073510997940555094542671533984875328621688913920*
        a^45*h^45))/(36*(1 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*(1 + 4*a*h)^3*
      (5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*
      (1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*
      (1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + (-1 + P)*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (a^2*(58776627242565155029296875 + 60397885643663406372070312500*a*
        h + 29518487405737684249877929687500*a^2*h^2 + 
       9067125441710297871398925781250000*a^3*h^3 + 
       1956700643646286779214233398437500000*a^4*h^4 + 
       315306744333575811059912109375000000000*a^5*h^5 + 
       39446522407795142958521428808593750000000*a^6*h^6 + 
       3936254508280016933827136409843750000000000*a^7*h^7 + 
       319509464061855197062440837526237500000000000*a^8*h^8 + 
       21409084074672441076511526820097500000000000000*a^9*h^9 + 
       1197637475694157415647256023286558640000000000000*a^10*h^10 + 
       56428889382573374754972690349160650752000000000000*a^11*h^11 + 
       2255201924238526913346359405159715112581120000000000*a^12*h^12 + 
       76887240085801112483002145203101316979589120000000000*a^13*h^13 + 
       2246661621151966315263837902353849978254655488000000000*a^14*h^14 + 
       56482241289539427311844607842399737652404079820800000000*a^15*h^15 + 
       1225651757454404683890103487145697459418741883273216000000*a^16*h^16 + 
       23017357989660520454328075026482898043469584522018816000000*a^17*
        h^17 + 374909850127863840932638107515513988366491617093851545600000*
        a^18*h^18 + 
       5305840169294470872826343835932226373781910993776934912000000*a^19*
        h^19 + 65335939655319766789827930221414925868883892855752821309440000*
        a^20*h^20 + 
       700794679911101348610117442481856258324071778220798234119372800*a^21*
        h^21 + 
       6552467758182611329785890837837102325743528450618925816741888000*a^22*
        h^22 + 
       53431827357403129937426436859660431513306027485775538139902771200*a^23*
        h^23 + 
       380062981117752110174170235762128388933547374487806481092155801600*
        a^24*h^24 + 
       2357895662756530064796773818495764107702823627185502672416365608960*
        a^25*h^25 + 
       12753539748994842759688573010224172010914344430773415984317794877440*
        a^26*h^26 + 
       60098295015375444399758486368656634585550457785065740206087298088960*
        a^27*h^27 + 
       246468673779438092448675914902482308180958571447739396938080498745344*
        a^28*h^28 + 
       878442542063796339710059296574845526137436359464452107470083826122752*
        a^29*h^29 + 271595652177146143282765488914125800833515167220087086472\
4878260436992*a^30*h^30 + 
       7267614250739210588547359274436337235442183023562618187719995455176704*
        a^31*h^31 + 167835442379328409152975856224801426597941962850671858249\
72423695433728*a^32*h^32 + 
       3333315534623161684755814846109530020995563499647812433768847734367846\
4*a^33*h^33 + 
       5668925512444755129649810284306803803155364592101677110145479812212326\
4*a^34*h^34 + 
       8212091860000303306528654335197214207618104587681145764054593767787724\
8*a^35*h^35 + 
       1006650386770460216101733244207343549600926457133166121464925215701073\
92*a^36*h^36 + 
       1035597683692699674848210759759392979297320384107641068381745544387624\
96*a^37*h^37 + 
       8847541391675240893729130597607125837706246620654331048807055180274073\
6*a^38*h^38 + 
       6191909572347224881895696520365556449245347921803433919221664564065075\
2*a^39*h^39 + 
       3485157566289481910646128680519014180567086084493591286597747071359385\
6*a^40*h^40 + 
       1537741249506311128376433008891240349315258865243216374990329055333580\
8*a^41*h^41 + 
       5120762804119889510417002404797074579433053848451674575563226525728768*
        a^42*h^42 + 121053839553562209613492877020782222401278901083421440353\
3516922945536*a^43*h^43 + 
       181238088160435460612158838495064552654532146398879541537981050388480*
        a^44*h^44 + 
       12937882024238304017073510997940555094542671533984875328621688913920*
        a^45*h^45))/(36*(1 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*(1 + 4*a*h)^3*
      (5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*
      (1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*
      (1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + (-1 + P)*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (a^2*(58776627242565155029296875 + 60397885643663406372070312500*a*
        h + 29518487405737684249877929687500*a^2*h^2 + 
       9067125441710297871398925781250000*a^3*h^3 + 
       1956700643646286779214233398437500000*a^4*h^4 + 
       315306744333575811059912109375000000000*a^5*h^5 + 
       39446522407795142958521428808593750000000*a^6*h^6 + 
       3936254508280016933827136409843750000000000*a^7*h^7 + 
       319509464061855197062440837526237500000000000*a^8*h^8 + 
       21409084074672441076511526820097500000000000000*a^9*h^9 + 
       1197637475694157415647256023286558640000000000000*a^10*h^10 + 
       56428889382573374754972690349160650752000000000000*a^11*h^11 + 
       2255201924238526913346359405159715112581120000000000*a^12*h^12 + 
       76887240085801112483002145203101316979589120000000000*a^13*h^13 + 
       2246661621151966315263837902353849978254655488000000000*a^14*h^14 + 
       56482241289539427311844607842399737652404079820800000000*a^15*h^15 + 
       1225651757454404683890103487145697459418741883273216000000*a^16*h^16 + 
       23017357989660520454328075026482898043469584522018816000000*a^17*
        h^17 + 374909850127863840932638107515513988366491617093851545600000*
        a^18*h^18 + 
       5305840169294470872826343835932226373781910993776934912000000*a^19*
        h^19 + 65335939655319766789827930221414925868883892855752821309440000*
        a^20*h^20 + 
       700794679911101348610117442481856258324071778220798234119372800*a^21*
        h^21 + 
       6552467758182611329785890837837102325743528450618925816741888000*a^22*
        h^22 + 
       53431827357403129937426436859660431513306027485775538139902771200*a^23*
        h^23 + 
       380062981117752110174170235762128388933547374487806481092155801600*
        a^24*h^24 + 
       2357895662756530064796773818495764107702823627185502672416365608960*
        a^25*h^25 + 
       12753539748994842759688573010224172010914344430773415984317794877440*
        a^26*h^26 + 
       60098295015375444399758486368656634585550457785065740206087298088960*
        a^27*h^27 + 
       246468673779438092448675914902482308180958571447739396938080498745344*
        a^28*h^28 + 
       878442542063796339710059296574845526137436359464452107470083826122752*
        a^29*h^29 + 271595652177146143282765488914125800833515167220087086472\
4878260436992*a^30*h^30 + 
       7267614250739210588547359274436337235442183023562618187719995455176704*
        a^31*h^31 + 167835442379328409152975856224801426597941962850671858249\
72423695433728*a^32*h^32 + 
       3333315534623161684755814846109530020995563499647812433768847734367846\
4*a^33*h^33 + 
       5668925512444755129649810284306803803155364592101677110145479812212326\
4*a^34*h^34 + 
       8212091860000303306528654335197214207618104587681145764054593767787724\
8*a^35*h^35 + 
       1006650386770460216101733244207343549600926457133166121464925215701073\
92*a^36*h^36 + 
       1035597683692699674848210759759392979297320384107641068381745544387624\
96*a^37*h^37 + 
       8847541391675240893729130597607125837706246620654331048807055180274073\
6*a^38*h^38 + 
       6191909572347224881895696520365556449245347921803433919221664564065075\
2*a^39*h^39 + 
       3485157566289481910646128680519014180567086084493591286597747071359385\
6*a^40*h^40 + 
       1537741249506311128376433008891240349315258865243216374990329055333580\
8*a^41*h^41 + 
       5120762804119889510417002404797074579433053848451674575563226525728768*
        a^42*h^42 + 121053839553562209613492877020782222401278901083421440353\
3516922945536*a^43*h^43 + 
       181238088160435460612158838495064552654532146398879541537981050388480*
        a^44*h^44 + 
       12937882024238304017073510997940555094542671533984875328621688913920*
        a^45*h^45))/(36*(1 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*(1 + 4*a*h)^3*
      (5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*
      (1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*
      (1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + (-1 + P)*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (a^2*(58776627242565155029296875 + 60397885643663406372070312500*a*
        h + 29518487405737684249877929687500*a^2*h^2 + 
       9067125441710297871398925781250000*a^3*h^3 + 
       1956700643646286779214233398437500000*a^4*h^4 + 
       315306744333575811059912109375000000000*a^5*h^5 + 
       39446522407795142958521428808593750000000*a^6*h^6 + 
       3936254508280016933827136409843750000000000*a^7*h^7 + 
       319509464061855197062440837526237500000000000*a^8*h^8 + 
       21409084074672441076511526820097500000000000000*a^9*h^9 + 
       1197637475694157415647256023286558640000000000000*a^10*h^10 + 
       56428889382573374754972690349160650752000000000000*a^11*h^11 + 
       2255201924238526913346359405159715112581120000000000*a^12*h^12 + 
       76887240085801112483002145203101316979589120000000000*a^13*h^13 + 
       2246661621151966315263837902353849978254655488000000000*a^14*h^14 + 
       56482241289539427311844607842399737652404079820800000000*a^15*h^15 + 
       1225651757454404683890103487145697459418741883273216000000*a^16*h^16 + 
       23017357989660520454328075026482898043469584522018816000000*a^17*
        h^17 + 374909850127863840932638107515513988366491617093851545600000*
        a^18*h^18 + 
       5305840169294470872826343835932226373781910993776934912000000*a^19*
        h^19 + 65335939655319766789827930221414925868883892855752821309440000*
        a^20*h^20 + 
       700794679911101348610117442481856258324071778220798234119372800*a^21*
        h^21 + 
       6552467758182611329785890837837102325743528450618925816741888000*a^22*
        h^22 + 
       53431827357403129937426436859660431513306027485775538139902771200*a^23*
        h^23 + 
       380062981117752110174170235762128388933547374487806481092155801600*
        a^24*h^24 + 
       2357895662756530064796773818495764107702823627185502672416365608960*
        a^25*h^25 + 
       12753539748994842759688573010224172010914344430773415984317794877440*
        a^26*h^26 + 
       60098295015375444399758486368656634585550457785065740206087298088960*
        a^27*h^27 + 
       246468673779438092448675914902482308180958571447739396938080498745344*
        a^28*h^28 + 
       878442542063796339710059296574845526137436359464452107470083826122752*
        a^29*h^29 + 271595652177146143282765488914125800833515167220087086472\
4878260436992*a^30*h^30 + 
       7267614250739210588547359274436337235442183023562618187719995455176704*
        a^31*h^31 + 167835442379328409152975856224801426597941962850671858249\
72423695433728*a^32*h^32 + 
       3333315534623161684755814846109530020995563499647812433768847734367846\
4*a^33*h^33 + 
       5668925512444755129649810284306803803155364592101677110145479812212326\
4*a^34*h^34 + 
       8212091860000303306528654335197214207618104587681145764054593767787724\
8*a^35*h^35 + 
       1006650386770460216101733244207343549600926457133166121464925215701073\
92*a^36*h^36 + 
       1035597683692699674848210759759392979297320384107641068381745544387624\
96*a^37*h^37 + 
       8847541391675240893729130597607125837706246620654331048807055180274073\
6*a^38*h^38 + 
       6191909572347224881895696520365556449245347921803433919221664564065075\
2*a^39*h^39 + 
       3485157566289481910646128680519014180567086084493591286597747071359385\
6*a^40*h^40 + 
       1537741249506311128376433008891240349315258865243216374990329055333580\
8*a^41*h^41 + 
       5120762804119889510417002404797074579433053848451674575563226525728768*
        a^42*h^42 + 121053839553562209613492877020782222401278901083421440353\
3516922945536*a^43*h^43 + 
       181238088160435460612158838495064552654532146398879541537981050388480*
        a^44*h^44 + 
       12937882024238304017073510997940555094542671533984875328621688913920*
        a^45*h^45))/(36*(1 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*(1 + 4*a*h)^3*
      (5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*
      (1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*
      (1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + P*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (a^2*(58776627242565155029296875 + 60397885643663406372070312500*a*
        h + 29518487405737684249877929687500*a^2*h^2 + 
       9067125441710297871398925781250000*a^3*h^3 + 
       1956700643646286779214233398437500000*a^4*h^4 + 
       315306744333575811059912109375000000000*a^5*h^5 + 
       39446522407795142958521428808593750000000*a^6*h^6 + 
       3936254508280016933827136409843750000000000*a^7*h^7 + 
       319509464061855197062440837526237500000000000*a^8*h^8 + 
       21409084074672441076511526820097500000000000000*a^9*h^9 + 
       1197637475694157415647256023286558640000000000000*a^10*h^10 + 
       56428889382573374754972690349160650752000000000000*a^11*h^11 + 
       2255201924238526913346359405159715112581120000000000*a^12*h^12 + 
       76887240085801112483002145203101316979589120000000000*a^13*h^13 + 
       2246661621151966315263837902353849978254655488000000000*a^14*h^14 + 
       56482241289539427311844607842399737652404079820800000000*a^15*h^15 + 
       1225651757454404683890103487145697459418741883273216000000*a^16*h^16 + 
       23017357989660520454328075026482898043469584522018816000000*a^17*
        h^17 + 374909850127863840932638107515513988366491617093851545600000*
        a^18*h^18 + 
       5305840169294470872826343835932226373781910993776934912000000*a^19*
        h^19 + 65335939655319766789827930221414925868883892855752821309440000*
        a^20*h^20 + 
       700794679911101348610117442481856258324071778220798234119372800*a^21*
        h^21 + 
       6552467758182611329785890837837102325743528450618925816741888000*a^22*
        h^22 + 
       53431827357403129937426436859660431513306027485775538139902771200*a^23*
        h^23 + 
       380062981117752110174170235762128388933547374487806481092155801600*
        a^24*h^24 + 
       2357895662756530064796773818495764107702823627185502672416365608960*
        a^25*h^25 + 
       12753539748994842759688573010224172010914344430773415984317794877440*
        a^26*h^26 + 
       60098295015375444399758486368656634585550457785065740206087298088960*
        a^27*h^27 + 
       246468673779438092448675914902482308180958571447739396938080498745344*
        a^28*h^28 + 
       878442542063796339710059296574845526137436359464452107470083826122752*
        a^29*h^29 + 271595652177146143282765488914125800833515167220087086472\
4878260436992*a^30*h^30 + 
       7267614250739210588547359274436337235442183023562618187719995455176704*
        a^31*h^31 + 167835442379328409152975856224801426597941962850671858249\
72423695433728*a^32*h^32 + 
       3333315534623161684755814846109530020995563499647812433768847734367846\
4*a^33*h^33 + 
       5668925512444755129649810284306803803155364592101677110145479812212326\
4*a^34*h^34 + 
       8212091860000303306528654335197214207618104587681145764054593767787724\
8*a^35*h^35 + 
       1006650386770460216101733244207343549600926457133166121464925215701073\
92*a^36*h^36 + 
       1035597683692699674848210759759392979297320384107641068381745544387624\
96*a^37*h^37 + 
       8847541391675240893729130597607125837706246620654331048807055180274073\
6*a^38*h^38 + 
       6191909572347224881895696520365556449245347921803433919221664564065075\
2*a^39*h^39 + 
       3485157566289481910646128680519014180567086084493591286597747071359385\
6*a^40*h^40 + 
       1537741249506311128376433008891240349315258865243216374990329055333580\
8*a^41*h^41 + 
       5120762804119889510417002404797074579433053848451674575563226525728768*
        a^42*h^42 + 121053839553562209613492877020782222401278901083421440353\
3516922945536*a^43*h^43 + 
       181238088160435460612158838495064552654532146398879541537981050388480*
        a^44*h^44 + 
       12937882024238304017073510997940555094542671533984875328621688913920*
        a^45*h^45))/(36*(1 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*(1 + 4*a*h)^3*
      (5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*
      (1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*
      (1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + (-1 + P)*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (a^2*(58776627242565155029296875 + 60397885643663406372070312500*a*
        h + 29518487405737684249877929687500*a^2*h^2 + 
       9067125441710297871398925781250000*a^3*h^3 + 
       1956700643646286779214233398437500000*a^4*h^4 + 
       315306744333575811059912109375000000000*a^5*h^5 + 
       39446522407795142958521428808593750000000*a^6*h^6 + 
       3936254508280016933827136409843750000000000*a^7*h^7 + 
       319509464061855197062440837526237500000000000*a^8*h^8 + 
       21409084074672441076511526820097500000000000000*a^9*h^9 + 
       1197637475694157415647256023286558640000000000000*a^10*h^10 + 
       56428889382573374754972690349160650752000000000000*a^11*h^11 + 
       2255201924238526913346359405159715112581120000000000*a^12*h^12 + 
       76887240085801112483002145203101316979589120000000000*a^13*h^13 + 
       2246661621151966315263837902353849978254655488000000000*a^14*h^14 + 
       56482241289539427311844607842399737652404079820800000000*a^15*h^15 + 
       1225651757454404683890103487145697459418741883273216000000*a^16*h^16 + 
       23017357989660520454328075026482898043469584522018816000000*a^17*
        h^17 + 374909850127863840932638107515513988366491617093851545600000*
        a^18*h^18 + 
       5305840169294470872826343835932226373781910993776934912000000*a^19*
        h^19 + 65335939655319766789827930221414925868883892855752821309440000*
        a^20*h^20 + 
       700794679911101348610117442481856258324071778220798234119372800*a^21*
        h^21 + 
       6552467758182611329785890837837102325743528450618925816741888000*a^22*
        h^22 + 
       53431827357403129937426436859660431513306027485775538139902771200*a^23*
        h^23 + 
       380062981117752110174170235762128388933547374487806481092155801600*
        a^24*h^24 + 
       2357895662756530064796773818495764107702823627185502672416365608960*
        a^25*h^25 + 
       12753539748994842759688573010224172010914344430773415984317794877440*
        a^26*h^26 + 
       60098295015375444399758486368656634585550457785065740206087298088960*
        a^27*h^27 + 
       246468673779438092448675914902482308180958571447739396938080498745344*
        a^28*h^28 + 
       878442542063796339710059296574845526137436359464452107470083826122752*
        a^29*h^29 + 271595652177146143282765488914125800833515167220087086472\
4878260436992*a^30*h^30 + 
       7267614250739210588547359274436337235442183023562618187719995455176704*
        a^31*h^31 + 167835442379328409152975856224801426597941962850671858249\
72423695433728*a^32*h^32 + 
       3333315534623161684755814846109530020995563499647812433768847734367846\
4*a^33*h^33 + 
       5668925512444755129649810284306803803155364592101677110145479812212326\
4*a^34*h^34 + 
       8212091860000303306528654335197214207618104587681145764054593767787724\
8*a^35*h^35 + 
       1006650386770460216101733244207343549600926457133166121464925215701073\
92*a^36*h^36 + 
       1035597683692699674848210759759392979297320384107641068381745544387624\
96*a^37*h^37 + 
       8847541391675240893729130597607125837706246620654331048807055180274073\
6*a^38*h^38 + 
       6191909572347224881895696520365556449245347921803433919221664564065075\
2*a^39*h^39 + 
       3485157566289481910646128680519014180567086084493591286597747071359385\
6*a^40*h^40 + 
       1537741249506311128376433008891240349315258865243216374990329055333580\
8*a^41*h^41 + 
       5120762804119889510417002404797074579433053848451674575563226525728768*
        a^42*h^42 + 121053839553562209613492877020782222401278901083421440353\
3516922945536*a^43*h^43 + 
       181238088160435460612158838495064552654532146398879541537981050388480*
        a^44*h^44 + 
       12937882024238304017073510997940555094542671533984875328621688913920*
        a^45*h^45))/(36*(1 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*(1 + 4*a*h)^3*
      (5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*
      (1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*
      (1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + P*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + P*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (a^2*(58776627242565155029296875 + 60397885643663406372070312500*a*
        h + 29518487405737684249877929687500*a^2*h^2 + 
       9067125441710297871398925781250000*a^3*h^3 + 
       1956700643646286779214233398437500000*a^4*h^4 + 
       315306744333575811059912109375000000000*a^5*h^5 + 
       39446522407795142958521428808593750000000*a^6*h^6 + 
       3936254508280016933827136409843750000000000*a^7*h^7 + 
       319509464061855197062440837526237500000000000*a^8*h^8 + 
       21409084074672441076511526820097500000000000000*a^9*h^9 + 
       1197637475694157415647256023286558640000000000000*a^10*h^10 + 
       56428889382573374754972690349160650752000000000000*a^11*h^11 + 
       2255201924238526913346359405159715112581120000000000*a^12*h^12 + 
       76887240085801112483002145203101316979589120000000000*a^13*h^13 + 
       2246661621151966315263837902353849978254655488000000000*a^14*h^14 + 
       56482241289539427311844607842399737652404079820800000000*a^15*h^15 + 
       1225651757454404683890103487145697459418741883273216000000*a^16*h^16 + 
       23017357989660520454328075026482898043469584522018816000000*a^17*
        h^17 + 374909850127863840932638107515513988366491617093851545600000*
        a^18*h^18 + 
       5305840169294470872826343835932226373781910993776934912000000*a^19*
        h^19 + 65335939655319766789827930221414925868883892855752821309440000*
        a^20*h^20 + 
       700794679911101348610117442481856258324071778220798234119372800*a^21*
        h^21 + 
       6552467758182611329785890837837102325743528450618925816741888000*a^22*
        h^22 + 
       53431827357403129937426436859660431513306027485775538139902771200*a^23*
        h^23 + 
       380062981117752110174170235762128388933547374487806481092155801600*
        a^24*h^24 + 
       2357895662756530064796773818495764107702823627185502672416365608960*
        a^25*h^25 + 
       12753539748994842759688573010224172010914344430773415984317794877440*
        a^26*h^26 + 
       60098295015375444399758486368656634585550457785065740206087298088960*
        a^27*h^27 + 
       246468673779438092448675914902482308180958571447739396938080498745344*
        a^28*h^28 + 
       878442542063796339710059296574845526137436359464452107470083826122752*
        a^29*h^29 + 271595652177146143282765488914125800833515167220087086472\
4878260436992*a^30*h^30 + 
       7267614250739210588547359274436337235442183023562618187719995455176704*
        a^31*h^31 + 167835442379328409152975856224801426597941962850671858249\
72423695433728*a^32*h^32 + 
       3333315534623161684755814846109530020995563499647812433768847734367846\
4*a^33*h^33 + 
       5668925512444755129649810284306803803155364592101677110145479812212326\
4*a^34*h^34 + 
       8212091860000303306528654335197214207618104587681145764054593767787724\
8*a^35*h^35 + 
       1006650386770460216101733244207343549600926457133166121464925215701073\
92*a^36*h^36 + 
       1035597683692699674848210759759392979297320384107641068381745544387624\
96*a^37*h^37 + 
       8847541391675240893729130597607125837706246620654331048807055180274073\
6*a^38*h^38 + 
       6191909572347224881895696520365556449245347921803433919221664564065075\
2*a^39*h^39 + 
       3485157566289481910646128680519014180567086084493591286597747071359385\
6*a^40*h^40 + 
       1537741249506311128376433008891240349315258865243216374990329055333580\
8*a^41*h^41 + 
       5120762804119889510417002404797074579433053848451674575563226525728768*
        a^42*h^42 + 121053839553562209613492877020782222401278901083421440353\
3516922945536*a^43*h^43 + 
       181238088160435460612158838495064552654532146398879541537981050388480*
        a^44*h^44 + 
       12937882024238304017073510997940555094542671533984875328621688913920*
        a^45*h^45))/(36*(1 + a*h)^3*(1 + 2*a*h)^3*(5 + 2*a*h)^3*(1 + 4*a*h)^3*
      (5 + 4*a*h)^3*(1 + 8*a*h)^3*(5 + 8*a*h)^3*(1 + 16*a*h)^3*(5 + 16*a*h)^3*
      (1 + 32*a*h)^3*(5 + 32*a*h)^3*(1 + 64*a*h)^3*(5 + 64*a*h)^3*
      (1 + 128*a*h)^3*(5 + 128*a*h)^3*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + P*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + P*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = a^2/(12*(1 + a*h)^3*(1 + 2*a*h)^3) - (4*a^2)/(9*(2 + 2*a*h)^6) + 
     a^2/(18*(1 + a*h)^3*(2 + 2*a*h)^3) - 
     a^2/(2*(1 + 2*a*h)^3*(2 + 2*a*h)^3) + 
     (5*a^2)/(36*(1 + a*h)^3*(5 + 2*a*h)^3) + 
     (20*a^2)/(3*(1 + 2*a*h)^3*(5 + 2*a*h)^3) + 
     (25*a^2)/(18*(2 + 2*a*h)^3*(5 + 2*a*h)^3) + 
     (2*a^2)/(3*(1 + a*h)^3*(1 + 4*a*h)^3) + 
     a^2/(2*(1 + 2*a*h)^3*(1 + 4*a*h)^3) - 
     (7*a^2)/(3*(2 + 2*a*h)^3*(1 + 4*a*h)^3) + 
     (135*a^2)/(2*(5 + 2*a*h)^3*(1 + 4*a*h)^3) + 
     (10*a^2)/(9*(1 + a*h)^3*(5 + 4*a*h)^3) + 
     (15*a^2)/(2*(1 + 2*a*h)^3*(5 + 4*a*h)^3) - 
     (25*a^2)/(3*(2 + 2*a*h)^3*(5 + 4*a*h)^3) + 
     (625*a^2)/(18*(5 + 2*a*h)^3*(5 + 4*a*h)^3) + 
     (320*a^2)/(3*(1 + 4*a*h)^3*(5 + 4*a*h)^3) + 
     (16*a^2)/(3*(1 + a*h)^3*(1 + 8*a*h)^3) + 
     (9*a^2)/((1 + 2*a*h)^3*(1 + 8*a*h)^3) - 
     (10*a^2)/((2 + 2*a*h)^3*(1 + 8*a*h)^3) + 
     (1805*a^2)/(3*(5 + 2*a*h)^3*(1 + 8*a*h)^3) + 
     (8*a^2)/((1 + 4*a*h)^3*(1 + 8*a*h)^3) + 
     (1080*a^2)/((5 + 4*a*h)^3*(1 + 8*a*h)^3) + 
     (80*a^2)/(9*(1 + a*h)^3*(5 + 8*a*h)^3) + 
     (5*a^2)/(3*(1 + 2*a*h)^3*(5 + 8*a*h)^3) - 
     (550*a^2)/(9*(2 + 2*a*h)^3*(5 + 8*a*h)^3) + 
     (625*a^2)/((5 + 2*a*h)^3*(5 + 8*a*h)^3) + 
     (120*a^2)/((1 + 4*a*h)^3*(5 + 8*a*h)^3) + 
     (5000*a^2)/(9*(5 + 4*a*h)^3*(5 + 8*a*h)^3) + 
     (5120*a^2)/(3*(1 + 8*a*h)^3*(5 + 8*a*h)^3) + 
     (128*a^2)/(3*(1 + a*h)^3*(1 + 16*a*h)^3) + 
     (98*a^2)/((1 + 2*a*h)^3*(1 + 16*a*h)^3) - 
     (124*a^2)/(3*(2 + 2*a*h)^3*(1 + 16*a*h)^3) + 
     (5070*a^2)/((5 + 2*a*h)^3*(1 + 16*a*h)^3) + 
     (144*a^2)/((1 + 4*a*h)^3*(1 + 16*a*h)^3) + 
     (28880*a^2)/(3*(5 + 4*a*h)^3*(1 + 16*a*h)^3) + 
     (128*a^2)/((1 + 8*a*h)^3*(1 + 16*a*h)^3) + 
     (17280*a^2)/((5 + 8*a*h)^3*(1 + 16*a*h)^3) + 
     (640*a^2)/(9*(1 + a*h)^3*(5 + 16*a*h)^3) + 
     (30*a^2)/((1 + 2*a*h)^3*(5 + 16*a*h)^3) - 
     (300*a^2)/((2 + 2*a*h)^3*(5 + 16*a*h)^3) + 
     (61250*a^2)/(9*(5 + 2*a*h)^3*(5 + 16*a*h)^3) + 
     (80*a^2)/(3*(1 + 4*a*h)^3*(5 + 16*a*h)^3) + 
     (10000*a^2)/((5 + 4*a*h)^3*(5 + 16*a*h)^3) + 
     (1920*a^2)/((1 + 8*a*h)^3*(5 + 16*a*h)^3) + 
     (80000*a^2)/(9*(5 + 8*a*h)^3*(5 + 16*a*h)^3) + 
     (81920*a^2)/(3*(1 + 16*a*h)^3*(5 + 16*a*h)^3) + 
     (1024*a^2)/(3*(1 + a*h)^3*(1 + 32*a*h)^3) + 
     (900*a^2)/((1 + 2*a*h)^3*(1 + 32*a*h)^3) - 
     (168*a^2)/((2 + 2*a*h)^3*(1 + 32*a*h)^3) + 
     (124820*a^2)/(3*(5 + 2*a*h)^3*(1 + 32*a*h)^3) + 
     (1568*a^2)/((1 + 4*a*h)^3*(1 + 32*a*h)^3) + 
     (81120*a^2)/((5 + 4*a*h)^3*(1 + 32*a*h)^3) + 
     (2304*a^2)/((1 + 8*a*h)^3*(1 + 32*a*h)^3) + 
     (462080*a^2)/(3*(5 + 8*a*h)^3*(1 + 32*a*h)^3) + 
     (2048*a^2)/((1 + 16*a*h)^3*(1 + 32*a*h)^3) + 
     (276480*a^2)/((5 + 16*a*h)^3*(1 + 32*a*h)^3) + 
     (5120*a^2)/(9*(1 + a*h)^3*(5 + 32*a*h)^3) + 
     (2420*a^2)/(3*(1 + 2*a*h)^3*(5 + 32*a*h)^3) - 
     (11800*a^2)/(9*(2 + 2*a*h)^3*(5 + 32*a*h)^3) + 
     (62500*a^2)/((5 + 2*a*h)^3*(5 + 32*a*h)^3) + 
     (480*a^2)/((1 + 4*a*h)^3*(5 + 32*a*h)^3) + 
     (980000*a^2)/(9*(5 + 4*a*h)^3*(5 + 32*a*h)^3) + 
     (1280*a^2)/(3*(1 + 8*a*h)^3*(5 + 32*a*h)^3) + 
     (160000*a^2)/((5 + 8*a*h)^3*(5 + 32*a*h)^3) + 
     (30720*a^2)/((1 + 16*a*h)^3*(5 + 32*a*h)^3) + 
     (1280000*a^2)/(9*(5 + 16*a*h)^3*(5 + 32*a*h)^3) + 
     (1310720*a^2)/(3*(1 + 32*a*h)^3*(5 + 32*a*h)^3) + 
     (8192*a^2)/(3*(1 + a*h)^3*(1 + 64*a*h)^3) + 
     (7688*a^2)/((1 + 2*a*h)^3*(1 + 64*a*h)^3) - 
     (2032*a^2)/(3*(2 + 2*a*h)^3*(1 + 64*a*h)^3) + 
     (337080*a^2)/((5 + 2*a*h)^3*(1 + 64*a*h)^3) + 
     (14400*a^2)/((1 + 4*a*h)^3*(1 + 64*a*h)^3) + 
     (1997120*a^2)/(3*(5 + 4*a*h)^3*(1 + 64*a*h)^3) + 
     (25088*a^2)/((1 + 8*a*h)^3*(1 + 64*a*h)^3) + 
     (1297920*a^2)/((5 + 8*a*h)^3*(1 + 64*a*h)^3) + 
     (36864*a^2)/((1 + 16*a*h)^3*(1 + 64*a*h)^3) + 
     (7393280*a^2)/(3*(5 + 16*a*h)^3*(1 + 64*a*h)^3) + 
     (32768*a^2)/((1 + 32*a*h)^3*(1 + 64*a*h)^3) + 
     (4423680*a^2)/((5 + 32*a*h)^3*(1 + 64*a*h)^3) + 
     (40960*a^2)/(9*(1 + a*h)^3*(5 + 64*a*h)^3) + 
     (9720*a^2)/((1 + 2*a*h)^3*(5 + 64*a*h)^3) - 
     (16400*a^2)/(3*(2 + 2*a*h)^3*(5 + 64*a*h)^3) + 
     (4805000*a^2)/(9*(5 + 2*a*h)^3*(5 + 64*a*h)^3) + 
     (38720*a^2)/(3*(1 + 4*a*h)^3*(5 + 64*a*h)^3) + 
     (1000000*a^2)/((5 + 4*a*h)^3*(5 + 64*a*h)^3) + 
     (7680*a^2)/((1 + 8*a*h)^3*(5 + 64*a*h)^3) + 
     (15680000*a^2)/(9*(5 + 8*a*h)^3*(5 + 64*a*h)^3) + 
     (20480*a^2)/(3*(1 + 16*a*h)^3*(5 + 64*a*h)^3) + 
     (2560000*a^2)/((5 + 16*a*h)^3*(5 + 64*a*h)^3) + 
     (491520*a^2)/((1 + 32*a*h)^3*(5 + 64*a*h)^3) + 
     (20480000*a^2)/(9*(5 + 32*a*h)^3*(5 + 64*a*h)^3) + 
     (20971520*a^2)/(3*(1 + 64*a*h)^3*(5 + 64*a*h)^3) + 
     (65536*a^2)/(3*(1 + a*h)^3*(1 + 128*a*h)^3) + 
     (63504*a^2)/((1 + 2*a*h)^3*(1 + 128*a*h)^3) - 
     (2720*a^2)/((2 + 2*a*h)^3*(1 + 128*a*h)^3) + 
     (8140880*a^2)/(3*(5 + 2*a*h)^3*(1 + 128*a*h)^3) + 
     (123008*a^2)/((1 + 4*a*h)^3*(1 + 128*a*h)^3) + 
     (5393280*a^2)/((5 + 4*a*h)^3*(1 + 128*a*h)^3) + 
     (230400*a^2)/((1 + 8*a*h)^3*(1 + 128*a*h)^3) + 
     (31953920*a^2)/(3*(5 + 8*a*h)^3*(1 + 128*a*h)^3) + 
     (401408*a^2)/((1 + 16*a*h)^3*(1 + 128*a*h)^3) + 
     (20766720*a^2)/((5 + 16*a*h)^3*(1 + 128*a*h)^3) + 
     (589824*a^2)/((1 + 32*a*h)^3*(1 + 128*a*h)^3) + 
     (118292480*a^2)/(3*(5 + 32*a*h)^3*(1 + 128*a*h)^3) + 
     (524288*a^2)/((1 + 64*a*h)^3*(1 + 128*a*h)^3) + 
     (70778880*a^2)/((5 + 64*a*h)^3*(1 + 128*a*h)^3) + 
     (327680*a^2)/(9*(1 + a*h)^3*(5 + 128*a*h)^3) + 
     (278480*a^2)/(3*(1 + 2*a*h)^3*(5 + 128*a*h)^3) - 
     (200800*a^2)/(9*(2 + 2*a*h)^3*(5 + 128*a*h)^3) + 
     (4410000*a^2)/((5 + 2*a*h)^3*(5 + 128*a*h)^3) + 
     (155520*a^2)/((1 + 4*a*h)^3*(5 + 128*a*h)^3) + 
     (76880000*a^2)/(9*(5 + 4*a*h)^3*(5 + 128*a*h)^3) + 
     (619520*a^2)/(3*(1 + 8*a*h)^3*(5 + 128*a*h)^3) + 
     (16000000*a^2)/((5 + 8*a*h)^3*(5 + 128*a*h)^3) + 
     (122880*a^2)/((1 + 16*a*h)^3*(5 + 128*a*h)^3) + 
     (250880000*a^2)/(9*(5 + 16*a*h)^3*(5 + 128*a*h)^3) + 
     (327680*a^2)/(3*(1 + 32*a*h)^3*(5 + 128*a*h)^3) + 
     (40960000*a^2)/((5 + 32*a*h)^3*(5 + 128*a*h)^3) + 
     (7864320*a^2)/((1 + 64*a*h)^3*(5 + 128*a*h)^3) + 
     (327680000*a^2)/(9*(5 + 64*a*h)^3*(5 + 128*a*h)^3) + 
     (335544320*a^2)/(3*(1 + 128*a*h)^3*(5 + 128*a*h)^3) + 
     (524288*a^2)/(9*(1 + a*h)^3*(1 + 256*a*h)^3) + 
     (516128*a^2)/(3*(1 + 2*a*h)^3*(1 + 256*a*h)^3) - 
     (32704*a^2)/(9*(2 + 2*a*h)^3*(1 + 256*a*h)^3) + 
     (7259040*a^2)/((5 + 2*a*h)^3*(1 + 256*a*h)^3) + 
     (338688*a^2)/((1 + 4*a*h)^3*(1 + 256*a*h)^3) + 
     (130254080*a^2)/(9*(5 + 4*a*h)^3*(1 + 256*a*h)^3) + 
     (1968128*a^2)/(3*(1 + 8*a*h)^3*(1 + 256*a*h)^3) + 
     (28764160*a^2)/((5 + 8*a*h)^3*(1 + 256*a*h)^3) + 
     (1228800*a^2)/((1 + 16*a*h)^3*(1 + 256*a*h)^3) + 
     (511262720*a^2)/(9*(5 + 16*a*h)^3*(1 + 256*a*h)^3) + 
     (6422528*a^2)/(3*(1 + 32*a*h)^3*(1 + 256*a*h)^3) + 
     (110755840*a^2)/((5 + 32*a*h)^3*(1 + 256*a*h)^3) + 
     (3145728*a^2)/((1 + 64*a*h)^3*(1 + 256*a*h)^3) + 
     (1892679680*a^2)/(9*(5 + 64*a*h)^3*(1 + 256*a*h)^3) + 
     (8388608*a^2)/(3*(1 + 128*a*h)^3*(1 + 256*a*h)^3) + 
     (377487360*a^2)/((5 + 128*a*h)^3*(1 + 256*a*h)^3) + 
     (2621440*a^2)/(9*(1 + a*h)^3*(5 + 256*a*h)^3) + 
     (806880*a^2)/((1 + 2*a*h)^3*(5 + 256*a*h)^3) - 
     (270400*a^2)/(3*(2 + 2*a*h)^3*(5 + 256*a*h)^3) + 
     (322580000*a^2)/(9*(5 + 2*a*h)^3*(5 + 256*a*h)^3) + 
     (4455680*a^2)/(3*(1 + 4*a*h)^3*(5 + 256*a*h)^3) + 
     (70560000*a^2)/((5 + 4*a*h)^3*(5 + 256*a*h)^3) + 
     (2488320*a^2)/((1 + 8*a*h)^3*(5 + 256*a*h)^3) + 
     (1230080000*a^2)/(9*(5 + 8*a*h)^3*(5 + 256*a*h)^3) + 
     (9912320*a^2)/(3*(1 + 16*a*h)^3*(5 + 256*a*h)^3) + 
     (256000000*a^2)/((5 + 16*a*h)^3*(5 + 256*a*h)^3) + 
     (1966080*a^2)/((1 + 32*a*h)^3*(5 + 256*a*h)^3) + 
     (4014080000*a^2)/(9*(5 + 32*a*h)^3*(5 + 256*a*h)^3) + 
     (5242880*a^2)/(3*(1 + 64*a*h)^3*(5 + 256*a*h)^3) + 
     (655360000*a^2)/((5 + 64*a*h)^3*(5 + 256*a*h)^3) + 
     (125829120*a^2)/((1 + 128*a*h)^3*(5 + 256*a*h)^3) + 
     (5242880000*a^2)/(9*(5 + 128*a*h)^3*(5 + 256*a*h)^3) + 
     (5368709120*a^2)/(9*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + (-1 + P)*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = a^2/(12*(1 + a*h)^3*(1 + 2*a*h)^3) - (4*a^2)/(9*(2 + 2*a*h)^6) + 
     a^2/(18*(1 + a*h)^3*(2 + 2*a*h)^3) - 
     a^2/(2*(1 + 2*a*h)^3*(2 + 2*a*h)^3) + 
     (5*a^2)/(36*(1 + a*h)^3*(5 + 2*a*h)^3) + 
     (20*a^2)/(3*(1 + 2*a*h)^3*(5 + 2*a*h)^3) + 
     (25*a^2)/(18*(2 + 2*a*h)^3*(5 + 2*a*h)^3) + 
     (2*a^2)/(3*(1 + a*h)^3*(1 + 4*a*h)^3) + 
     a^2/(2*(1 + 2*a*h)^3*(1 + 4*a*h)^3) - 
     (7*a^2)/(3*(2 + 2*a*h)^3*(1 + 4*a*h)^3) + 
     (135*a^2)/(2*(5 + 2*a*h)^3*(1 + 4*a*h)^3) + 
     (10*a^2)/(9*(1 + a*h)^3*(5 + 4*a*h)^3) + 
     (15*a^2)/(2*(1 + 2*a*h)^3*(5 + 4*a*h)^3) - 
     (25*a^2)/(3*(2 + 2*a*h)^3*(5 + 4*a*h)^3) + 
     (625*a^2)/(18*(5 + 2*a*h)^3*(5 + 4*a*h)^3) + 
     (320*a^2)/(3*(1 + 4*a*h)^3*(5 + 4*a*h)^3) + 
     (16*a^2)/(3*(1 + a*h)^3*(1 + 8*a*h)^3) + 
     (9*a^2)/((1 + 2*a*h)^3*(1 + 8*a*h)^3) - 
     (10*a^2)/((2 + 2*a*h)^3*(1 + 8*a*h)^3) + 
     (1805*a^2)/(3*(5 + 2*a*h)^3*(1 + 8*a*h)^3) + 
     (8*a^2)/((1 + 4*a*h)^3*(1 + 8*a*h)^3) + 
     (1080*a^2)/((5 + 4*a*h)^3*(1 + 8*a*h)^3) + 
     (80*a^2)/(9*(1 + a*h)^3*(5 + 8*a*h)^3) + 
     (5*a^2)/(3*(1 + 2*a*h)^3*(5 + 8*a*h)^3) - 
     (550*a^2)/(9*(2 + 2*a*h)^3*(5 + 8*a*h)^3) + 
     (625*a^2)/((5 + 2*a*h)^3*(5 + 8*a*h)^3) + 
     (120*a^2)/((1 + 4*a*h)^3*(5 + 8*a*h)^3) + 
     (5000*a^2)/(9*(5 + 4*a*h)^3*(5 + 8*a*h)^3) + 
     (5120*a^2)/(3*(1 + 8*a*h)^3*(5 + 8*a*h)^3) + 
     (128*a^2)/(3*(1 + a*h)^3*(1 + 16*a*h)^3) + 
     (98*a^2)/((1 + 2*a*h)^3*(1 + 16*a*h)^3) - 
     (124*a^2)/(3*(2 + 2*a*h)^3*(1 + 16*a*h)^3) + 
     (5070*a^2)/((5 + 2*a*h)^3*(1 + 16*a*h)^3) + 
     (144*a^2)/((1 + 4*a*h)^3*(1 + 16*a*h)^3) + 
     (28880*a^2)/(3*(5 + 4*a*h)^3*(1 + 16*a*h)^3) + 
     (128*a^2)/((1 + 8*a*h)^3*(1 + 16*a*h)^3) + 
     (17280*a^2)/((5 + 8*a*h)^3*(1 + 16*a*h)^3) + 
     (640*a^2)/(9*(1 + a*h)^3*(5 + 16*a*h)^3) + 
     (30*a^2)/((1 + 2*a*h)^3*(5 + 16*a*h)^3) - 
     (300*a^2)/((2 + 2*a*h)^3*(5 + 16*a*h)^3) + 
     (61250*a^2)/(9*(5 + 2*a*h)^3*(5 + 16*a*h)^3) + 
     (80*a^2)/(3*(1 + 4*a*h)^3*(5 + 16*a*h)^3) + 
     (10000*a^2)/((5 + 4*a*h)^3*(5 + 16*a*h)^3) + 
     (1920*a^2)/((1 + 8*a*h)^3*(5 + 16*a*h)^3) + 
     (80000*a^2)/(9*(5 + 8*a*h)^3*(5 + 16*a*h)^3) + 
     (81920*a^2)/(3*(1 + 16*a*h)^3*(5 + 16*a*h)^3) + 
     (1024*a^2)/(3*(1 + a*h)^3*(1 + 32*a*h)^3) + 
     (900*a^2)/((1 + 2*a*h)^3*(1 + 32*a*h)^3) - 
     (168*a^2)/((2 + 2*a*h)^3*(1 + 32*a*h)^3) + 
     (124820*a^2)/(3*(5 + 2*a*h)^3*(1 + 32*a*h)^3) + 
     (1568*a^2)/((1 + 4*a*h)^3*(1 + 32*a*h)^3) + 
     (81120*a^2)/((5 + 4*a*h)^3*(1 + 32*a*h)^3) + 
     (2304*a^2)/((1 + 8*a*h)^3*(1 + 32*a*h)^3) + 
     (462080*a^2)/(3*(5 + 8*a*h)^3*(1 + 32*a*h)^3) + 
     (2048*a^2)/((1 + 16*a*h)^3*(1 + 32*a*h)^3) + 
     (276480*a^2)/((5 + 16*a*h)^3*(1 + 32*a*h)^3) + 
     (5120*a^2)/(9*(1 + a*h)^3*(5 + 32*a*h)^3) + 
     (2420*a^2)/(3*(1 + 2*a*h)^3*(5 + 32*a*h)^3) - 
     (11800*a^2)/(9*(2 + 2*a*h)^3*(5 + 32*a*h)^3) + 
     (62500*a^2)/((5 + 2*a*h)^3*(5 + 32*a*h)^3) + 
     (480*a^2)/((1 + 4*a*h)^3*(5 + 32*a*h)^3) + 
     (980000*a^2)/(9*(5 + 4*a*h)^3*(5 + 32*a*h)^3) + 
     (1280*a^2)/(3*(1 + 8*a*h)^3*(5 + 32*a*h)^3) + 
     (160000*a^2)/((5 + 8*a*h)^3*(5 + 32*a*h)^3) + 
     (30720*a^2)/((1 + 16*a*h)^3*(5 + 32*a*h)^3) + 
     (1280000*a^2)/(9*(5 + 16*a*h)^3*(5 + 32*a*h)^3) + 
     (1310720*a^2)/(3*(1 + 32*a*h)^3*(5 + 32*a*h)^3) + 
     (8192*a^2)/(3*(1 + a*h)^3*(1 + 64*a*h)^3) + 
     (7688*a^2)/((1 + 2*a*h)^3*(1 + 64*a*h)^3) - 
     (2032*a^2)/(3*(2 + 2*a*h)^3*(1 + 64*a*h)^3) + 
     (337080*a^2)/((5 + 2*a*h)^3*(1 + 64*a*h)^3) + 
     (14400*a^2)/((1 + 4*a*h)^3*(1 + 64*a*h)^3) + 
     (1997120*a^2)/(3*(5 + 4*a*h)^3*(1 + 64*a*h)^3) + 
     (25088*a^2)/((1 + 8*a*h)^3*(1 + 64*a*h)^3) + 
     (1297920*a^2)/((5 + 8*a*h)^3*(1 + 64*a*h)^3) + 
     (36864*a^2)/((1 + 16*a*h)^3*(1 + 64*a*h)^3) + 
     (7393280*a^2)/(3*(5 + 16*a*h)^3*(1 + 64*a*h)^3) + 
     (32768*a^2)/((1 + 32*a*h)^3*(1 + 64*a*h)^3) + 
     (4423680*a^2)/((5 + 32*a*h)^3*(1 + 64*a*h)^3) + 
     (40960*a^2)/(9*(1 + a*h)^3*(5 + 64*a*h)^3) + 
     (9720*a^2)/((1 + 2*a*h)^3*(5 + 64*a*h)^3) - 
     (16400*a^2)/(3*(2 + 2*a*h)^3*(5 + 64*a*h)^3) + 
     (4805000*a^2)/(9*(5 + 2*a*h)^3*(5 + 64*a*h)^3) + 
     (38720*a^2)/(3*(1 + 4*a*h)^3*(5 + 64*a*h)^3) + 
     (1000000*a^2)/((5 + 4*a*h)^3*(5 + 64*a*h)^3) + 
     (7680*a^2)/((1 + 8*a*h)^3*(5 + 64*a*h)^3) + 
     (15680000*a^2)/(9*(5 + 8*a*h)^3*(5 + 64*a*h)^3) + 
     (20480*a^2)/(3*(1 + 16*a*h)^3*(5 + 64*a*h)^3) + 
     (2560000*a^2)/((5 + 16*a*h)^3*(5 + 64*a*h)^3) + 
     (491520*a^2)/((1 + 32*a*h)^3*(5 + 64*a*h)^3) + 
     (20480000*a^2)/(9*(5 + 32*a*h)^3*(5 + 64*a*h)^3) + 
     (20971520*a^2)/(3*(1 + 64*a*h)^3*(5 + 64*a*h)^3) + 
     (65536*a^2)/(3*(1 + a*h)^3*(1 + 128*a*h)^3) + 
     (63504*a^2)/((1 + 2*a*h)^3*(1 + 128*a*h)^3) - 
     (2720*a^2)/((2 + 2*a*h)^3*(1 + 128*a*h)^3) + 
     (8140880*a^2)/(3*(5 + 2*a*h)^3*(1 + 128*a*h)^3) + 
     (123008*a^2)/((1 + 4*a*h)^3*(1 + 128*a*h)^3) + 
     (5393280*a^2)/((5 + 4*a*h)^3*(1 + 128*a*h)^3) + 
     (230400*a^2)/((1 + 8*a*h)^3*(1 + 128*a*h)^3) + 
     (31953920*a^2)/(3*(5 + 8*a*h)^3*(1 + 128*a*h)^3) + 
     (401408*a^2)/((1 + 16*a*h)^3*(1 + 128*a*h)^3) + 
     (20766720*a^2)/((5 + 16*a*h)^3*(1 + 128*a*h)^3) + 
     (589824*a^2)/((1 + 32*a*h)^3*(1 + 128*a*h)^3) + 
     (118292480*a^2)/(3*(5 + 32*a*h)^3*(1 + 128*a*h)^3) + 
     (524288*a^2)/((1 + 64*a*h)^3*(1 + 128*a*h)^3) + 
     (70778880*a^2)/((5 + 64*a*h)^3*(1 + 128*a*h)^3) + 
     (327680*a^2)/(9*(1 + a*h)^3*(5 + 128*a*h)^3) + 
     (278480*a^2)/(3*(1 + 2*a*h)^3*(5 + 128*a*h)^3) - 
     (200800*a^2)/(9*(2 + 2*a*h)^3*(5 + 128*a*h)^3) + 
     (4410000*a^2)/((5 + 2*a*h)^3*(5 + 128*a*h)^3) + 
     (155520*a^2)/((1 + 4*a*h)^3*(5 + 128*a*h)^3) + 
     (76880000*a^2)/(9*(5 + 4*a*h)^3*(5 + 128*a*h)^3) + 
     (619520*a^2)/(3*(1 + 8*a*h)^3*(5 + 128*a*h)^3) + 
     (16000000*a^2)/((5 + 8*a*h)^3*(5 + 128*a*h)^3) + 
     (122880*a^2)/((1 + 16*a*h)^3*(5 + 128*a*h)^3) + 
     (250880000*a^2)/(9*(5 + 16*a*h)^3*(5 + 128*a*h)^3) + 
     (327680*a^2)/(3*(1 + 32*a*h)^3*(5 + 128*a*h)^3) + 
     (40960000*a^2)/((5 + 32*a*h)^3*(5 + 128*a*h)^3) + 
     (7864320*a^2)/((1 + 64*a*h)^3*(5 + 128*a*h)^3) + 
     (327680000*a^2)/(9*(5 + 64*a*h)^3*(5 + 128*a*h)^3) + 
     (335544320*a^2)/(3*(1 + 128*a*h)^3*(5 + 128*a*h)^3) + 
     (524288*a^2)/(9*(1 + a*h)^3*(1 + 256*a*h)^3) + 
     (516128*a^2)/(3*(1 + 2*a*h)^3*(1 + 256*a*h)^3) - 
     (32704*a^2)/(9*(2 + 2*a*h)^3*(1 + 256*a*h)^3) + 
     (7259040*a^2)/((5 + 2*a*h)^3*(1 + 256*a*h)^3) + 
     (338688*a^2)/((1 + 4*a*h)^3*(1 + 256*a*h)^3) + 
     (130254080*a^2)/(9*(5 + 4*a*h)^3*(1 + 256*a*h)^3) + 
     (1968128*a^2)/(3*(1 + 8*a*h)^3*(1 + 256*a*h)^3) + 
     (28764160*a^2)/((5 + 8*a*h)^3*(1 + 256*a*h)^3) + 
     (1228800*a^2)/((1 + 16*a*h)^3*(1 + 256*a*h)^3) + 
     (511262720*a^2)/(9*(5 + 16*a*h)^3*(1 + 256*a*h)^3) + 
     (6422528*a^2)/(3*(1 + 32*a*h)^3*(1 + 256*a*h)^3) + 
     (110755840*a^2)/((5 + 32*a*h)^3*(1 + 256*a*h)^3) + 
     (3145728*a^2)/((1 + 64*a*h)^3*(1 + 256*a*h)^3) + 
     (1892679680*a^2)/(9*(5 + 64*a*h)^3*(1 + 256*a*h)^3) + 
     (8388608*a^2)/(3*(1 + 128*a*h)^3*(1 + 256*a*h)^3) + 
     (377487360*a^2)/((5 + 128*a*h)^3*(1 + 256*a*h)^3) + 
     (2621440*a^2)/(9*(1 + a*h)^3*(5 + 256*a*h)^3) + 
     (806880*a^2)/((1 + 2*a*h)^3*(5 + 256*a*h)^3) - 
     (270400*a^2)/(3*(2 + 2*a*h)^3*(5 + 256*a*h)^3) + 
     (322580000*a^2)/(9*(5 + 2*a*h)^3*(5 + 256*a*h)^3) + 
     (4455680*a^2)/(3*(1 + 4*a*h)^3*(5 + 256*a*h)^3) + 
     (70560000*a^2)/((5 + 4*a*h)^3*(5 + 256*a*h)^3) + 
     (2488320*a^2)/((1 + 8*a*h)^3*(5 + 256*a*h)^3) + 
     (1230080000*a^2)/(9*(5 + 8*a*h)^3*(5 + 256*a*h)^3) + 
     (9912320*a^2)/(3*(1 + 16*a*h)^3*(5 + 256*a*h)^3) + 
     (256000000*a^2)/((5 + 16*a*h)^3*(5 + 256*a*h)^3) + 
     (1966080*a^2)/((1 + 32*a*h)^3*(5 + 256*a*h)^3) + 
     (4014080000*a^2)/(9*(5 + 32*a*h)^3*(5 + 256*a*h)^3) + 
     (5242880*a^2)/(3*(1 + 64*a*h)^3*(5 + 256*a*h)^3) + 
     (655360000*a^2)/((5 + 64*a*h)^3*(5 + 256*a*h)^3) + 
     (125829120*a^2)/((1 + 128*a*h)^3*(5 + 256*a*h)^3) + 
     (5242880000*a^2)/(9*(5 + 128*a*h)^3*(5 + 256*a*h)^3) + 
     (5368709120*a^2)/(9*(1 + 256*a*h)^3*(5 + 256*a*h)^3)
 
DetH1 = 170/a
 
DetH2 = (32*a^2*(66982975 + 16*a*h*(2531956455 + 
         2*a*h*(354353334345 + 8*a*h*(7463122505145 + 
             16*a*h*(52158696199983 + 8*a*h*(510065139041865 + 
                 4*a*h*(7196944101608685 + 64*a*h*(4663564822509435 + 
                     8*a*h*(17973821884544559 + 128*a*h*(3239274206788515 + 
                         16*a*h*(3500815325942835 + 64*a*h*(707867089588935 + 
                          8*a*h*(851711405174571 + 4352*a*h*(1385085033495 + 
                          32*a*h*(221100039765 + 128*a*h*(6173348715 + 256*a*
                          h*(57153429 + 640*a*h*(126873 + 82624*a*
                          h)))))))))))))))))))/(9*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3*(1 + 256*a*h)^3)
 
DetHV = (85*2^(-3 - m)*Log[2]^2)/3 + (85*2^(-2 - m)*Log[2]^2)/3 + 
     (85*2^(-1 - m)*Log[2]^2)/3 + (85*2^(1 - m)*Log[2]^2)/3 + 
     (85*2^(2 - m)*Log[2]^2)/3 + (85*2^(3 - m)*Log[2]^2)/3 + 
     (85*2^(4 - m)*Log[2]^2)/3 + (85*Log[2]^2)/(3*2^m) + 
     (17*2^(-3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[2]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[2]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[2]^2)/3 + (17*5^(2 - m)*Log[2]^2)/(3*2^m) + 
     (17*10^(2 - m)*Log[2]^2)/3 - (17*2^(-2 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(-1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(1 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(3 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(4 - m)*5^(2 - m)*Log[2]*Log[5])/3 - 
     (17*2^(5 - m)*5^(2 - m)*Log[2]*Log[5])/3 - (17*5^(2 - m)*Log[2]*Log[5])/
      (3*2^m) - (17*10^(2 - m)*Log[2]*Log[5])/3 + 
     (17*2^(-3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-2 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(-1 - m)*5^(2 - m)*Log[5]^2)/3 + (17*2^(1 - m)*5^(2 - m)*Log[5]^2)/
      3 + (17*2^(3 - m)*5^(2 - m)*Log[5]^2)/3 + 
     (17*2^(4 - m)*5^(2 - m)*Log[5]^2)/3 + (17*5^(2 - m)*Log[5]^2)/(3*2^m) + 
     (289*5^(3 - m)*Log[5]^2)/16 + (17*10^(2 - m)*Log[5]^2)/3
 
DetR = 255/(4*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}, {2, 4, 8, 16, 32, 64, 128, 
      256}, False}, 1, 8]
 
EFisherAGPoiss = {{((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
        6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
        500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
        48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
        4000/(5 + 64*a*h)^3 + 192/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3 + 
        128/(1 + 256*a*h)^3 + 16000/(5 + 256*a*h)^3)/(12*a), 
      (a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6}, 
     {(a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 12288/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3 - 16384/(1 + 256*a*h)^3 - 
         409600/(5 + 256*a*h)^3))/6, 
      (a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 786432/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3 + 2097152/(1 + 256*a*h)^3 + 
         10485760/(5 + 256*a*h)^3))/3}}
 
EFisherH1Poiss = {{170/a}}
 
EFisherH2Poiss = {{2/(3*a*(1 + 2*a*h)^3) + 4/(3*a*(1 + 4*a*h)^3) + 
       8/(3*a*(1 + 8*a*h)^3) + 16/(3*a*(1 + 16*a*h)^3) + 
       32/(3*a*(1 + 32*a*h)^3) + 64/(3*a*(1 + 64*a*h)^3) + 
       128/(3*a*(1 + 128*a*h)^3) + 256/(3*a*(1 + 256*a*h)^3), 
      (-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3)}, 
     {(-4*a)/(3*(1 + 2*a*h)^3) - (16*a)/(3*(1 + 4*a*h)^3) - 
       (64*a)/(3*(1 + 8*a*h)^3) - (256*a)/(3*(1 + 16*a*h)^3) - 
       (1024*a)/(3*(1 + 32*a*h)^3) - (4096*a)/(3*(1 + 64*a*h)^3) - 
       (16384*a)/(3*(1 + 128*a*h)^3) - (65536*a)/(3*(1 + 256*a*h)^3), 
      (8*a^3)/(3*(1 + 2*a*h)^3) + (64*a^3)/(3*(1 + 4*a*h)^3) + 
       (512*a^3)/(3*(1 + 8*a*h)^3) + (4096*a^3)/(3*(1 + 16*a*h)^3) + 
       (32768*a^3)/(3*(1 + 32*a*h)^3) + (262144*a^3)/(3*(1 + 64*a*h)^3) + 
       (2097152*a^3)/(3*(1 + 128*a*h)^3) + (16777216*a^3)/
        (3*(1 + 256*a*h)^3)}}
 
EFisherHVPoiss = {{85/(4*a) + 2^(-1 - m)/(3*a) + 2^(1 - m)/(3*a) + 
       2^(2 - m)/(3*a) + 2^(3 - m)/(3*a) + 2^(4 - m)/(3*a) + 
       2^(5 - m)/(3*a) + 2^(6 - m)/(3*a) + 1/(3*2^m*a) + 
       (17*5^(2 - m))/(4*a), -(2^(-1 - m)*Log[2])/3 - (2^(1 - m)*Log[2])/3 - 
       (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - (2^(4 - m)*Log[2])/3 - 
       (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - Log[2]/(3*2^m) - 
       (17*5^(2 - m)*Log[5])/4}, {-(2^(-1 - m)*Log[2])/3 - 
       (2^(1 - m)*Log[2])/3 - (2^(2 - m)*Log[2])/3 - (2^(3 - m)*Log[2])/3 - 
       (2^(4 - m)*Log[2])/3 - (2^(5 - m)*Log[2])/3 - (2^(6 - m)*Log[2])/3 - 
       Log[2]/(3*2^m) - (17*5^(2 - m)*Log[5])/4, (2^(-1 - m)*a*Log[2]^2)/3 + 
       (2^(1 - m)*a*Log[2]^2)/3 + (2^(2 - m)*a*Log[2]^2)/3 + 
       (2^(3 - m)*a*Log[2]^2)/3 + (2^(4 - m)*a*Log[2]^2)/3 + 
       (2^(5 - m)*a*Log[2]^2)/3 + (2^(6 - m)*a*Log[2]^2)/3 + 
       (a*Log[2]^2)/(3*2^m) + (17*5^(2 - m)*a*Log[5]^2)/4}}
 
EFisherRPoiss = {{255/(4*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128, 256}
AA = (a*P*T*\[CapitalNu])/(P^m + a*h*\[CapitalNu])
 
AG = (a*P*T*\[CapitalNu])/(P + a*h*\[CapitalNu])
 
BD = (a*P*T*\[CapitalNu])/(1 + (-1 + P)*\[Gamma] + a*h*\[CapitalNu])
 
CM = (a*P*T*\[CapitalNu])/((1 + (-1 + P)*\[Gamma])*(1 + a*h*\[CapitalNu]))
 
DetAG = (16*a^2)/(147*(1 + a*h)^3*(1 + 2*a*h)^3) - 
     (256*a^2)/(441*(2 + 2*a*h)^6) + (32*a^2)/(441*(1 + a*h)^3*
       (2 + 2*a*h)^3) - (32*a^2)/(49*(1 + 2*a*h)^3*(2 + 2*a*h)^3) + 
     (80*a^2)/(441*(1 + a*h)^3*(5 + 2*a*h)^3) + 
     (1280*a^2)/(147*(1 + 2*a*h)^3*(5 + 2*a*h)^3) + 
     (800*a^2)/(441*(2 + 2*a*h)^3*(5 + 2*a*h)^3) + 
     (128*a^2)/(147*(1 + a*h)^3*(1 + 4*a*h)^3) + 
     (32*a^2)/(49*(1 + 2*a*h)^3*(1 + 4*a*h)^3) - 
     (64*a^2)/(21*(2 + 2*a*h)^3*(1 + 4*a*h)^3) + 
     (4320*a^2)/(49*(5 + 2*a*h)^3*(1 + 4*a*h)^3) + 
     (640*a^2)/(441*(1 + a*h)^3*(5 + 4*a*h)^3) + 
     (480*a^2)/(49*(1 + 2*a*h)^3*(5 + 4*a*h)^3) - 
     (1600*a^2)/(147*(2 + 2*a*h)^3*(5 + 4*a*h)^3) + 
     (20000*a^2)/(441*(5 + 2*a*h)^3*(5 + 4*a*h)^3) + 
     (20480*a^2)/(147*(1 + 4*a*h)^3*(5 + 4*a*h)^3) + 
     (1024*a^2)/(147*(1 + a*h)^3*(1 + 8*a*h)^3) + 
     (576*a^2)/(49*(1 + 2*a*h)^3*(1 + 8*a*h)^3) - 
     (640*a^2)/(49*(2 + 2*a*h)^3*(1 + 8*a*h)^3) + 
     (115520*a^2)/(147*(5 + 2*a*h)^3*(1 + 8*a*h)^3) + 
     (512*a^2)/(49*(1 + 4*a*h)^3*(1 + 8*a*h)^3) + 
     (69120*a^2)/(49*(5 + 4*a*h)^3*(1 + 8*a*h)^3) + 
     (5120*a^2)/(441*(1 + a*h)^3*(5 + 8*a*h)^3) + 
     (320*a^2)/(147*(1 + 2*a*h)^3*(5 + 8*a*h)^3) - 
     (35200*a^2)/(441*(2 + 2*a*h)^3*(5 + 8*a*h)^3) + 
     (40000*a^2)/(49*(5 + 2*a*h)^3*(5 + 8*a*h)^3) + 
     (7680*a^2)/(49*(1 + 4*a*h)^3*(5 + 8*a*h)^3) + 
     (320000*a^2)/(441*(5 + 4*a*h)^3*(5 + 8*a*h)^3) + 
     (327680*a^2)/(147*(1 + 8*a*h)^3*(5 + 8*a*h)^3) + 
     (8192*a^2)/(147*(1 + a*h)^3*(1 + 16*a*h)^3) + 
     (128*a^2)/((1 + 2*a*h)^3*(1 + 16*a*h)^3) - 
     (7936*a^2)/(147*(2 + 2*a*h)^3*(1 + 16*a*h)^3) + 
     (324480*a^2)/(49*(5 + 2*a*h)^3*(1 + 16*a*h)^3) + 
     (9216*a^2)/(49*(1 + 4*a*h)^3*(1 + 16*a*h)^3) + 
     (1848320*a^2)/(147*(5 + 4*a*h)^3*(1 + 16*a*h)^3) + 
     (8192*a^2)/(49*(1 + 8*a*h)^3*(1 + 16*a*h)^3) + 
     (1105920*a^2)/(49*(5 + 8*a*h)^3*(1 + 16*a*h)^3) + 
     (40960*a^2)/(441*(1 + a*h)^3*(5 + 16*a*h)^3) + 
     (1920*a^2)/(49*(1 + 2*a*h)^3*(5 + 16*a*h)^3) - 
     (19200*a^2)/(49*(2 + 2*a*h)^3*(5 + 16*a*h)^3) + 
     (80000*a^2)/(9*(5 + 2*a*h)^3*(5 + 16*a*h)^3) + 
     (5120*a^2)/(147*(1 + 4*a*h)^3*(5 + 16*a*h)^3) + 
     (640000*a^2)/(49*(5 + 4*a*h)^3*(5 + 16*a*h)^3) + 
     (122880*a^2)/(49*(1 + 8*a*h)^3*(5 + 16*a*h)^3) + 
     (5120000*a^2)/(441*(5 + 8*a*h)^3*(5 + 16*a*h)^3) + 
     (5242880*a^2)/(147*(1 + 16*a*h)^3*(5 + 16*a*h)^3) + 
     (65536*a^2)/(147*(1 + a*h)^3*(1 + 32*a*h)^3) + 
     (57600*a^2)/(49*(1 + 2*a*h)^3*(1 + 32*a*h)^3) - 
     (1536*a^2)/(7*(2 + 2*a*h)^3*(1 + 32*a*h)^3) + 
     (7988480*a^2)/(147*(5 + 2*a*h)^3*(1 + 32*a*h)^3) + 
     (2048*a^2)/((1 + 4*a*h)^3*(1 + 32*a*h)^3) + 
     (5191680*a^2)/(49*(5 + 4*a*h)^3*(1 + 32*a*h)^3) + 
     (147456*a^2)/(49*(1 + 8*a*h)^3*(1 + 32*a*h)^3) + 
     (29573120*a^2)/(147*(5 + 8*a*h)^3*(1 + 32*a*h)^3) + 
     (131072*a^2)/(49*(1 + 16*a*h)^3*(1 + 32*a*h)^3) + 
     (17694720*a^2)/(49*(5 + 16*a*h)^3*(1 + 32*a*h)^3) + 
     (327680*a^2)/(441*(1 + a*h)^3*(5 + 32*a*h)^3) + 
     (154880*a^2)/(147*(1 + 2*a*h)^3*(5 + 32*a*h)^3) - 
     (755200*a^2)/(441*(2 + 2*a*h)^3*(5 + 32*a*h)^3) + 
     (4000000*a^2)/(49*(5 + 2*a*h)^3*(5 + 32*a*h)^3) + 
     (30720*a^2)/(49*(1 + 4*a*h)^3*(5 + 32*a*h)^3) + 
     (1280000*a^2)/(9*(5 + 4*a*h)^3*(5 + 32*a*h)^3) + 
     (81920*a^2)/(147*(1 + 8*a*h)^3*(5 + 32*a*h)^3) + 
     (10240000*a^2)/(49*(5 + 8*a*h)^3*(5 + 32*a*h)^3) + 
     (1966080*a^2)/(49*(1 + 16*a*h)^3*(5 + 32*a*h)^3) + 
     (81920000*a^2)/(441*(5 + 16*a*h)^3*(5 + 32*a*h)^3) + 
     (83886080*a^2)/(147*(1 + 32*a*h)^3*(5 + 32*a*h)^3) + 
     (524288*a^2)/(147*(1 + a*h)^3*(1 + 64*a*h)^3) + 
     (492032*a^2)/(49*(1 + 2*a*h)^3*(1 + 64*a*h)^3) - 
     (130048*a^2)/(147*(2 + 2*a*h)^3*(1 + 64*a*h)^3) + 
     (21573120*a^2)/(49*(5 + 2*a*h)^3*(1 + 64*a*h)^3) + 
     (921600*a^2)/(49*(1 + 4*a*h)^3*(1 + 64*a*h)^3) + 
     (127815680*a^2)/(147*(5 + 4*a*h)^3*(1 + 64*a*h)^3) + 
     (32768*a^2)/((1 + 8*a*h)^3*(1 + 64*a*h)^3) + 
     (83066880*a^2)/(49*(5 + 8*a*h)^3*(1 + 64*a*h)^3) + 
     (2359296*a^2)/(49*(1 + 16*a*h)^3*(1 + 64*a*h)^3) + 
     (473169920*a^2)/(147*(5 + 16*a*h)^3*(1 + 64*a*h)^3) + 
     (2097152*a^2)/(49*(1 + 32*a*h)^3*(1 + 64*a*h)^3) + 
     (283115520*a^2)/(49*(5 + 32*a*h)^3*(1 + 64*a*h)^3) + 
     (2621440*a^2)/(441*(1 + a*h)^3*(5 + 64*a*h)^3) + 
     (622080*a^2)/(49*(1 + 2*a*h)^3*(5 + 64*a*h)^3) - 
     (1049600*a^2)/(147*(2 + 2*a*h)^3*(5 + 64*a*h)^3) + 
     (307520000*a^2)/(441*(5 + 2*a*h)^3*(5 + 64*a*h)^3) + 
     (2478080*a^2)/(147*(1 + 4*a*h)^3*(5 + 64*a*h)^3) + 
     (64000000*a^2)/(49*(5 + 4*a*h)^3*(5 + 64*a*h)^3) + 
     (491520*a^2)/(49*(1 + 8*a*h)^3*(5 + 64*a*h)^3) + 
     (20480000*a^2)/(9*(5 + 8*a*h)^3*(5 + 64*a*h)^3) + 
     (1310720*a^2)/(147*(1 + 16*a*h)^3*(5 + 64*a*h)^3) + 
     (163840000*a^2)/(49*(5 + 16*a*h)^3*(5 + 64*a*h)^3) + 
     (31457280*a^2)/(49*(1 + 32*a*h)^3*(5 + 64*a*h)^3) + 
     (1310720000*a^2)/(441*(5 + 32*a*h)^3*(5 + 64*a*h)^3) + 
     (1342177280*a^2)/(147*(1 + 64*a*h)^3*(5 + 64*a*h)^3) + 
     (4194304*a^2)/(441*(1 + a*h)^3*(1 + 128*a*h)^3) + 
     (27648*a^2)/((1 + 2*a*h)^3*(1 + 128*a*h)^3) - 
     (174080*a^2)/(147*(2 + 2*a*h)^3*(1 + 128*a*h)^3) + 
     (521016320*a^2)/(441*(5 + 2*a*h)^3*(1 + 128*a*h)^3) + 
     (7872512*a^2)/(147*(1 + 4*a*h)^3*(1 + 128*a*h)^3) + 
     (115056640*a^2)/(49*(5 + 4*a*h)^3*(1 + 128*a*h)^3) + 
     (4915200*a^2)/(49*(1 + 8*a*h)^3*(1 + 128*a*h)^3) + 
     (2045050880*a^2)/(441*(5 + 8*a*h)^3*(1 + 128*a*h)^3) + 
     (524288*a^2)/(3*(1 + 16*a*h)^3*(1 + 128*a*h)^3) + 
     (443023360*a^2)/(49*(5 + 16*a*h)^3*(1 + 128*a*h)^3) + 
     (12582912*a^2)/(49*(1 + 32*a*h)^3*(1 + 128*a*h)^3) + 
     (7570718720*a^2)/(441*(5 + 32*a*h)^3*(1 + 128*a*h)^3) + 
     (33554432*a^2)/(147*(1 + 64*a*h)^3*(1 + 128*a*h)^3) + 
     (1509949440*a^2)/(49*(5 + 64*a*h)^3*(1 + 128*a*h)^3) + 
     (20971520*a^2)/(441*(1 + a*h)^3*(5 + 128*a*h)^3) + 
     (17822720*a^2)/(147*(1 + 2*a*h)^3*(5 + 128*a*h)^3) - 
     (12851200*a^2)/(441*(2 + 2*a*h)^3*(5 + 128*a*h)^3) + 
     (5760000*a^2)/((5 + 2*a*h)^3*(5 + 128*a*h)^3) + 
     (9953280*a^2)/(49*(1 + 4*a*h)^3*(5 + 128*a*h)^3) + 
     (4920320000*a^2)/(441*(5 + 4*a*h)^3*(5 + 128*a*h)^3) + 
     (39649280*a^2)/(147*(1 + 8*a*h)^3*(5 + 128*a*h)^3) + 
     (1024000000*a^2)/(49*(5 + 8*a*h)^3*(5 + 128*a*h)^3) + 
     (7864320*a^2)/(49*(1 + 16*a*h)^3*(5 + 128*a*h)^3) + 
     (327680000*a^2)/(9*(5 + 16*a*h)^3*(5 + 128*a*h)^3) + 
     (20971520*a^2)/(147*(1 + 32*a*h)^3*(5 + 128*a*h)^3) + 
     (2621440000*a^2)/(49*(5 + 32*a*h)^3*(5 + 128*a*h)^3) + 
     (503316480*a^2)/(49*(1 + 64*a*h)^3*(5 + 128*a*h)^3) + 
     (20971520000*a^2)/(441*(5 + 64*a*h)^3*(5 + 128*a*h)^3) + 
     (21474836480*a^2)/(441*(1 + 128*a*h)^3*(5 + 128*a*h)^3)
 
DetH1 = 2032/(21*a)
 
DetH2 = (2048*a^2*(1370965 + 16*a*h*(25499949 + 
         2*a*h*(1751270691 + 8*a*h*(18022980083 + 16*a*h*(61176100533 + 8*a*h*
                (288293488563 + 4*a*h*(1940255712191 + 64*a*h*(591585023457 + 
                     8*a*h*(1053735863949 + 128*a*h*(85665558793 + 16*a*h*
                          (40389218853 + 8128*a*h*(26764791 + 8*a*h*
                          (12503203 + 256*a*h*(120261 + 32*a*h*(5523 + 3712*a*
                          h))))))))))))))))/(147*(1 + 2*a*h)^3*(1 + 4*a*h)^3*
      (1 + 8*a*h)^3*(1 + 16*a*h)^3*(1 + 32*a*h)^3*(1 + 64*a*h)^3*
      (1 + 128*a*h)^3)
 
DetHV = (127*2^(3 - m)*Log[2]^2)/441 + (127*2^(4 - m)*Log[2]^2)/441 + 
     (127*2^(5 - m)*Log[2]^2)/441 + (127*2^(6 - m)*Log[2]^2)/441 + 
     (127*2^(7 - m)*Log[2]^2)/441 + (127*2^(8 - m)*Log[2]^2)/441 + 
     (127*2^(9 - m)*Log[2]^2)/441 + (127*2^(3 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(4 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(5 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(6 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(7 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(8 - m)*5^(1 - m)*Log[2]^2)/441 + 
     (127*2^(9 - m)*5^(1 - m)*Log[2]^2)/441 - 
     (127*2^(4 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(5 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(6 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(7 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(8 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(9 - m)*5^(1 - m)*Log[2]*Log[5])/441 - 
     (127*2^(10 - m)*5^(1 - m)*Log[2]*Log[5])/441 + 
     (64516*5^(1 - m)*Log[5]^2)/441 + (127*2^(3 - m)*5^(1 - m)*Log[5]^2)/
      441 + (127*2^(4 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(5 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(6 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(7 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(8 - m)*5^(1 - m)*Log[5]^2)/441 + 
     (127*2^(9 - m)*5^(1 - m)*Log[5]^2)/441
 
DetR = 254/(7*a)
 
EFisher[FisherMatrix_, func_] := Expectation[Expectation[FisherMatrix, 
      Distributed[x, PoissonDistribution[func]]], {Distributed[P, PDistE], 
      Distributed[\[CapitalNu], \[CapitalNu]DistE]}]
 
PDistE = DataDistribution["Empirical", {{1/3, 1/3, 1/3}, {1, 2, 5}, False}, 
     1, 3]
 
\[CapitalNu]DistE = DataDistribution["Empirical", 
     {{1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7}, {2, 4, 8, 16, 32, 64, 128}, 
      False}, 1, 7]
 
EFisherAGPoiss = {{(2*((1 + a*h)^(-3) + 3/(1 + 2*a*h)^3 + 125/(5 + 2*a*h)^3 + 
         6/(1 + 4*a*h)^3 + 250/(5 + 4*a*h)^3 + 12/(1 + 8*a*h)^3 + 
         500/(5 + 8*a*h)^3 + 24/(1 + 16*a*h)^3 + 1000/(5 + 16*a*h)^3 + 
         48/(1 + 32*a*h)^3 + 2000/(5 + 32*a*h)^3 + 96/(1 + 64*a*h)^3 + 
         4000/(5 + 64*a*h)^3 + 64/(1 + 128*a*h)^3 + 8000/(5 + 128*a*h)^3))/
       (21*a), (4*a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 4096/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3))/21}, 
     {(4*a*(-3/(1 + 2*a*h)^3 - 4/(2 + 2*a*h)^3 - 25/(5 + 2*a*h)^3 - 
         12/(1 + 4*a*h)^3 - 100/(5 + 4*a*h)^3 - 48/(1 + 8*a*h)^3 - 
         400/(5 + 8*a*h)^3 - 192/(1 + 16*a*h)^3 - 1600/(5 + 16*a*h)^3 - 
         768/(1 + 32*a*h)^3 - 6400/(5 + 32*a*h)^3 - 3072/(1 + 64*a*h)^3 - 
         25600/(5 + 64*a*h)^3 - 4096/(1 + 128*a*h)^3 - 
         102400/(5 + 128*a*h)^3))/21, 
      (8*a^3*(3/(1 + 2*a*h)^3 + 2/(2 + 2*a*h)^3 + 5/(5 + 2*a*h)^3 + 
         24/(1 + 4*a*h)^3 + 40/(5 + 4*a*h)^3 + 192/(1 + 8*a*h)^3 + 
         320/(5 + 8*a*h)^3 + 1536/(1 + 16*a*h)^3 + 2560/(5 + 16*a*h)^3 + 
         12288/(1 + 32*a*h)^3 + 20480/(5 + 32*a*h)^3 + 98304/(1 + 64*a*h)^3 + 
         163840/(5 + 64*a*h)^3 + 262144/(1 + 128*a*h)^3 + 
         1310720/(5 + 128*a*h)^3))/21}}
 
EFisherH1Poiss = {{2032/(21*a)}}
 
EFisherH2Poiss = {{16/(21*a*(1 + 2*a*h)^3) + 32/(21*a*(1 + 4*a*h)^3) + 
       64/(21*a*(1 + 8*a*h)^3) + 128/(21*a*(1 + 16*a*h)^3) + 
       256/(21*a*(1 + 32*a*h)^3) + 512/(21*a*(1 + 64*a*h)^3) + 
       1024/(21*a*(1 + 128*a*h)^3), (-32*a)/(21*(1 + 2*a*h)^3) - 
       (128*a)/(21*(1 + 4*a*h)^3) - (512*a)/(21*(1 + 8*a*h)^3) - 
       (2048*a)/(21*(1 + 16*a*h)^3) - (8192*a)/(21*(1 + 32*a*h)^3) - 
       (32768*a)/(21*(1 + 64*a*h)^3) - (131072*a)/(21*(1 + 128*a*h)^3)}, 
     {(-32*a)/(21*(1 + 2*a*h)^3) - (128*a)/(21*(1 + 4*a*h)^3) - 
       (512*a)/(21*(1 + 8*a*h)^3) - (2048*a)/(21*(1 + 16*a*h)^3) - 
       (8192*a)/(21*(1 + 32*a*h)^3) - (32768*a)/(21*(1 + 64*a*h)^3) - 
       (131072*a)/(21*(1 + 128*a*h)^3), (64*a^3)/(21*(1 + 2*a*h)^3) + 
       (512*a^3)/(21*(1 + 4*a*h)^3) + (4096*a^3)/(21*(1 + 8*a*h)^3) + 
       (32768*a^3)/(21*(1 + 16*a*h)^3) + (262144*a^3)/(21*(1 + 32*a*h)^3) + 
       (2097152*a^3)/(21*(1 + 64*a*h)^3) + (16777216*a^3)/
        (21*(1 + 128*a*h)^3)}}
 
EFisherHVPoiss = {{254/(21*a) + 2^(2 - m)/(21*a) + 2^(3 - m)/(21*a) + 
       2^(4 - m)/(21*a) + 2^(5 - m)/(21*a) + 2^(6 - m)/(21*a) + 
       2^(7 - m)/(21*a) + 2^(8 - m)/(21*a) + (254*5^(1 - m))/(21*a), 
      -(2^(2 - m)*Log[2])/21 - (2^(3 - m)*Log[2])/21 - 
       (2^(4 - m)*Log[2])/21 - (2^(5 - m)*Log[2])/21 - 
       (2^(6 - m)*Log[2])/21 - (2^(7 - m)*Log[2])/21 - 
       (2^(8 - m)*Log[2])/21 - (254*5^(1 - m)*Log[5])/21}, 
     {-(2^(2 - m)*Log[2])/21 - (2^(3 - m)*Log[2])/21 - 
       (2^(4 - m)*Log[2])/21 - (2^(5 - m)*Log[2])/21 - 
       (2^(6 - m)*Log[2])/21 - (2^(7 - m)*Log[2])/21 - 
       (2^(8 - m)*Log[2])/21 - (254*5^(1 - m)*Log[5])/21, 
      (2^(2 - m)*a*Log[2]^2)/21 + (2^(3 - m)*a*Log[2]^2)/21 + 
       (2^(4 - m)*a*Log[2]^2)/21 + (2^(5 - m)*a*Log[2]^2)/21 + 
       (2^(6 - m)*a*Log[2]^2)/21 + (2^(7 - m)*a*Log[2]^2)/21 + 
       (2^(8 - m)*a*Log[2]^2)/21 + (254*5^(1 - m)*a*Log[5]^2)/21}}
 
EFisherRPoiss = {{254/(7*a)}}
 
f[x_, y_] := (x^2 - y)/(x^2 + y^2 + 1)
 
fisher[fun_, pars_] := -D[fun @@ pars, {pars, 2}]
 
fisher2[fun_, pars_] := KroneckerProduct[D[fun @@ pars, {pars, 1}], 
     D[fun @@ pars, {pars, 1}]]
 
FisherAGPoiss = {{(P*(P^2*x + 3*a*h*P*x*\[CapitalNu] + 2*a^2*h*(-(P*T) + h*x)*
          \[CapitalNu]^2))/(a^2*(P + a*h*\[CapitalNu])^3), 
      (P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3}, 
     {(P*\[CapitalNu]*(a*h*x*\[CapitalNu] + P*(x - 2*a*T*\[CapitalNu])))/
       (P + a*h*\[CapitalNu])^3, (a^2*\[CapitalNu]^2*
        (-(P*x) + 2*a*P*T*\[CapitalNu] - a*h*x*\[CapitalNu]))/
       (P + a*h*\[CapitalNu])^3}}
 
FisherH1Poiss = {{x/a^2}}
 
FisherH2Poiss = {{(2*a*h^2*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a*h^2*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*h*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (h*x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(a*P*T) + 
       (x*(1 + a*h*\[CapitalNu])*(-((a*h*P*T*\[CapitalNu]^2)/
            (1 + a*h*\[CapitalNu])^2) + (P*T*\[CapitalNu])/
           (1 + a*h*\[CapitalNu])))/(a^2*P*T*\[CapitalNu]), 
      (2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (x*(1 + a*h*\[CapitalNu])*((2*a^2*h*P*T*\[CapitalNu]^3)/
           (1 + a*h*\[CapitalNu])^3 - (2*a*P*T*\[CapitalNu]^2)/
           (1 + a*h*\[CapitalNu])^2))/(a*P*T*\[CapitalNu]) - 
       (x*(-((a*h*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2) + 
          (P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])))/(P*T)}, 
     {(2*a^2*h*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (2*a*P*T*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 - 
       (a*h*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2 + 
       (x*\[CapitalNu])/(1 + a*h*\[CapitalNu]), 
      (2*a^3*P*T*\[CapitalNu]^3)/(1 + a*h*\[CapitalNu])^3 - 
       (a^2*x*\[CapitalNu]^2)/(1 + a*h*\[CapitalNu])^2}}
 
FisherHVPoiss = {{x/a^2, -(P^(1 - m)*T*\[CapitalNu]*Log[P])}, 
     {-(P^(1 - m)*T*\[CapitalNu]*Log[P]), a*P^(1 - m)*T*\[CapitalNu]*
       Log[P]^2}}
 
FisherRPoiss = {{x/a^2}}
 
H1 = a*P*T*\[CapitalNu]
 
H2 = (a*P*T*\[CapitalNu])/(1 + a*h*\[CapitalNu])
 
HV = a*P^(1 - m)*T*\[CapitalNu]
 
lLAGPoiss[a_, h_] := PoislL[AG]
 
PoislL[func_] := (-n)*func + Log[func]*x /. {n -> 1}
 
lLH1Poiss[a_] := PoislL[H1]
 
lLH2Poiss[a_, h_] := PoislL[H2]
 
lLHVPoiss[a_, m_] := PoislL[HV]
 
lLRPoiss[a_] := PoislL[R]
 
R = a*T*\[CapitalNu]
 
PDist = UniformDistribution[{1, 5}]
 
Pprobs = {1/3, 1/3, 1/3}
 
Pvals = {1, 2, 5}
 
subs = {T -> 1}
 
\[CapitalNu]Dist = UniformDistribution[{5, 30}]
 
\[CapitalNu]probs = {1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7}
 
\[CapitalNu]vals = {2, 4, 8, 16, 32, 64, 128}
